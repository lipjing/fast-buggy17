

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 28 14:46:43 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1
   119                           	psect	text107,global,reloc=2,class=CODE,delta=1
   120                           	psect	text108,global,reloc=2,class=CODE,delta=1
   121                           	psect	text109,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   124                           	psect	text111,global,reloc=2,class=CODE,delta=1
   125                           	psect	text112,global,reloc=2,class=CODE,delta=1
   126                           	psect	text113,global,reloc=2,class=CODE,delta=1
   127                           	psect	text114,global,reloc=2,class=CODE,delta=1
   128                           	psect	text115,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           	psect	nvBANK0
   133  0000E6                     __pnvBANK0:
   134                           	opt stack 0
   135  0000E6                     _convert_cm:
   136                           	opt stack 0
   137  0000E6                     	ds	3
   138  0000E9                     _convert_in:
   139                           	opt stack 0
   140  0000E9                     	ds	3
   141  0000                     _ADCON0	set	4034
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _ADCON1	set	4033
   144  0000                     _ADCON2	set	4032
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADRESL	set	4035
   147  0000                     _CCP4CON	set	3955
   148  0000                     _CCP5CON	set	3952
   149  0000                     _CCPR4L	set	3956
   150  0000                     _CCPR5L	set	3953
   151  0000                     _EEADR	set	4009
   152  0000                     _EEADRH	set	4010
   153  0000                     _EECON1bits	set	4006
   154  0000                     _EECON2	set	4007
   155  0000                     _EEDATA	set	4008
   156  0000                     _INTCON2bits	set	4081
   157  0000                     _INTCON3bits	set	4080
   158  0000                     _INTCONbits	set	4082
   159  0000                     _IPR1bits	set	3999
   160  0000                     _LATDbits	set	3980
   161  0000                     _LATE	set	3981
   162  0000                     _LATEbits	set	3981
   163  0000                     _LATHbits	set	3984
   164  0000                     _LATJ	set	3985
   165  0000                     _PIE1bits	set	3997
   166  0000                     _PIE2bits	set	4000
   167  0000                     _PIR1bits	set	3998
   168  0000                     _PIR2bits	set	4001
   169  0000                     _PORTBbits	set	3969
   170  0000                     _PORTHbits	set	3975
   171  0000                     _PR2	set	4043
   172  0000                     _PR4	set	3959
   173  0000                     _RCONbits	set	4048
   174  0000                     _RCREG1	set	4014
   175  0000                     _RCSTA1	set	4011
   176  0000                     _RCSTA1bits	set	4011
   177  0000                     _SPBRG1	set	4015
   178  0000                     _SPBRGH1	set	3967
   179  0000                     _T0CON	set	4053
   180  0000                     _T0CONbits	set	4053
   181  0000                     _T1CON	set	4045
   182  0000                     _T1CONbits	set	4045
   183  0000                     _T2CONbits	set	4042
   184  0000                     _T3CON	set	4017
   185  0000                     _T3CONbits	set	4017
   186  0000                     _T4CONbits	set	3958
   187  0000                     _TMR0H	set	4055
   188  0000                     _TMR0L	set	4054
   189  0000                     _TMR1H	set	4047
   190  0000                     _TMR1L	set	4046
   191  0000                     _TMR3H	set	4019
   192  0000                     _TMR3L	set	4018
   193  0000                     _TRISA	set	3986
   194  0000                     _TRISB	set	3987
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISCbits	set	3988
   197  0000                     _TRISD	set	3989
   198  0000                     _TRISE	set	3990
   199  0000                     _TRISG	set	3992
   200  0000                     _TRISGbits	set	3992
   201  0000                     _TRISHbits	set	3993
   202  0000                     _TRISJ	set	3994
   203  0000                     _TXREG1	set	4013
   204  0000                     _TXSTA1	set	4012
   205  0000                     _TXSTA1bits	set	4012
   206                           
   207                           ; #config settings
   208  0000                     
   209                           	psect	cinit
   210  0021D0                     __pcinit:
   211                           	opt stack 0
   212  0021D0                     start_initialization:
   213                           	opt stack 0
   214  0021D0                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to BANK0 (94 bytes)
   218  0021D0  EE00  F060         	lfsr	0,__pbssBANK0
   219  0021D4  0E5E               	movlw	94
   220  0021D6                     clear_0:
   221  0021D6  6AEE               	clrf	postinc0,c
   222  0021D8  06E8               	decf	wreg,f,c
   223  0021DA  E1FD               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to COMRAM (42 bytes)
   226  0021DC  EE00  F001         	lfsr	0,__pbssCOMRAM
   227  0021E0  0E2A               	movlw	42
   228  0021E2                     clear_1:
   229  0021E2  6AEE               	clrf	postinc0,c
   230  0021E4  06E8               	decf	wreg,f,c
   231  0021E6  E1FD               	bnz	clear_1
   232  0021E8                     end_of_initialization:
   233                           	opt stack 0
   234  0021E8                     __end_of__initialization:
   235                           	opt stack 0
   236  0021E8  0100               	movlb	0
   237  0021EA  EF78  F000         	goto	_main	;jump to C main() function
   238                           postinc0	equ	0xFEE
   239                           wreg	equ	0xFE8
   240                           
   241                           	psect	bssCOMRAM
   242  000001                     __pbssCOMRAM:
   243                           	opt stack 0
   244  000001                     _SystemClock:
   245                           	opt stack 0
   246  000001                     	ds	6
   247  000007                     _DCmotorL:
   248                           	opt stack 0
   249  000007                     	ds	2
   250  000009                     _DCmotorR:
   251                           	opt stack 0
   252  000009                     	ds	2
   253  00000B                     _echo_time:
   254                           	opt stack 0
   255  00000B                     	ds	2
   256  00000D                     _millisecond_COUNT0:
   257                           	opt stack 0
   258  00000D                     	ds	2
   259  00000F                     _millisecond_COUNT1:
   260                           	opt stack 0
   261  00000F                     	ds	2
   262  000011                     _millisecond_COUNT2:
   263                           	opt stack 0
   264  000011                     	ds	2
   265  000013                     _millisecond_COUNT3:
   266                           	opt stack 0
   267  000013                     	ds	2
   268  000015                     _RxCharacter:
   269                           	opt stack 0
   270  000015                     	ds	1
   271  000016                     _Rx_chars_received:
   272                           	opt stack 0
   273  000016                     	ds	1
   274  000017                     _Rx_complete:
   275                           	opt stack 0
   276  000017                     	ds	1
   277  000018                     _Rx_msg_length:
   278                           	opt stack 0
   279  000018                     	ds	1
   280  000019                     _TxCharacter:
   281                           	opt stack 0
   282  000019                     	ds	1
   283  00001A                     _Tx_complete:
   284                           	opt stack 0
   285  00001A                     	ds	1
   286  00001B                     _USART1_Status:
   287                           	opt stack 0
   288  00001B                     	ds	1
   289  00001C                     _echo_acq_done:
   290                           	opt stack 0
   291  00001C                     	ds	1
   292  00001D                     _get_Rx_index:
   293                           	opt stack 0
   294  00001D                     	ds	1
   295  00001E                     _get_Tx_index:
   296                           	opt stack 0
   297  00001E                     	ds	1
   298  00001F                     _put_Rx_index:
   299                           	opt stack 0
   300  00001F                     	ds	1
   301  000020                     _put_Tx_index:
   302                           	opt stack 0
   303  000020                     	ds	1
   304  000021                     _second_rollover_flag:
   305                           	opt stack 0
   306  000021                     	ds	1
   307  000022                     _sensor_acq_done:
   308                           	opt stack 0
   309  000022                     	ds	1
   310  000023                     _sensor_acq_index:
   311                           	opt stack 0
   312  000023                     	ds	1
   313  000024                     _system_clock_enable:
   314                           	opt stack 0
   315  000024                     	ds	1
   316  000025                     _sensor_statuses:
   317                           	opt stack 0
   318  000025                     	ds	5
   319  00002A                     _line_mode:
   320                           	opt stack 0
   321  00002A                     	ds	1
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt stack 0
   328  000060                     _Rx_buffer:
   329                           	opt stack 0
   330  000060                     	ds	25
   331  000079                     _Tx_buffer:
   332                           	opt stack 0
   333  000079                     	ds	25
   334  000092                     _PID_Kd:
   335                           	opt stack 0
   336  000092                     	ds	2
   337  000094                     _PID_Ki:
   338                           	opt stack 0
   339  000094                     	ds	2
   340  000096                     _PID_Kp:
   341                           	opt stack 0
   342  000096                     	ds	2
   343  000098                     _PID_output:
   344                           	opt stack 0
   345  000098                     	ds	2
   346  00009A                     _sensor_offsets:
   347                           	opt stack 0
   348  00009A                     	ds	10
   349  0000A4                     _sensor_readings_normalised:
   350                           	opt stack 0
   351  0000A4                     	ds	10
   352  0000AE                     _sensor_readings_raw:
   353                           	opt stack 0
   354  0000AE                     	ds	10
   355  0000B8                     _PID_error:
   356                           	opt stack 0
   357  0000B8                     	ds	2
   358  0000BA                     _PID_set_point:
   359                           	opt stack 0
   360  0000BA                     	ds	2
   361  0000BC                     _sensor_threshold:
   362                           	opt stack 0
   363  0000BC                     	ds	2
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367                           	psect	cstackBANK1
   368  000100                     __pcstackBANK1:
   369                           	opt stack 0
   370  000100                     main@sensor_sum_ptr:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374  000100                     	ds	2
   375  000102                     main@PID_error_ptr:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000102                     	ds	2
   380  000104                     main@battery_current_ptr:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  000104                     	ds	2
   385  000106                     main@battery_current_acc_ptr:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x6
   389  000106                     	ds	2
   390  000108                     main@find_line_flag:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x8
   394  000108                     	ds	1
   395  000109                     main@line_end_flag:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x9
   399  000109                     	ds	1
   400  00010A                     main@send_battery_stats_flag:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  00010A                     	ds	1
   405  00010B                     main@battery_current_acc:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0xB
   409  00010B                     	ds	4
   410  00010F                     main@battery_current:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xF
   414  00010F                     	ds	2
   415  000111                     main@line_mode_ptr:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x11
   419  000111                     	ds	2
   420  000113                     main@PID_set_point_ptr:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x13
   424  000113                     	ds	2
   425  000115                     main@battery_voltage_ptr:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x15
   429  000115                     	ds	2
   430  000117                     main@command_msg:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x17
   434  000117                     	ds	1
   435  000118                     main@wall_detected_flag:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x18
   439  000118                     	ds	1
   440  000119                     main@battery_voltage:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x19
   444  000119                     	ds	2
   445  00011B                     main@D_temp:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x1B
   449  00011B                     	ds	2
   450  00011D                     main@I_temp:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x1D
   454  00011D                     	ds	2
   455  00011F                     main@sensor_sum:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1F
   459  00011F                     	ds	2
   460  000121                     main@stop_flag:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x21
   464  000121                     	ds	1
   465  000122                     main@Kp_stored:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x22
   469  000122                     	ds	2
   470  000124                     main@Kd_stored:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x24
   474  000124                     	ds	2
   475  000126                     main@Ki_stored:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x26
   479  000126                     	ds	2
   480  000128                     main@sensor_sum_discrete:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x28
   484  000128                     	ds	1
   485  000129                     main@sensor_threshold_ptr:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x29
   489  000129                     	ds	2
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	cstackBANK0
   494  0000BE                     __pcstackBANK0:
   495                           	opt stack 0
   496  0000BE                     ReadTimer1@timer:
   497                           	opt stack 0
   498  0000BE                     i2WriteTimer0@timer:
   499                           	opt stack 0
   500  0000BE                     i2WriteTimer1@timer:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x0
   504  0000BE                     	ds	2
   505  0000C0                     ??_isrHP:
   506                           
   507                           ; 0 bytes @ 0x2
   508  0000C0                     	ds	14
   509  0000CE                     ??_SetChanADC:
   510  0000CE                     ??_Delay10KTCYx:
   511  0000CE                     ?_ReadADC:
   512                           	opt stack 0
   513  0000CE                     ?_ReadEchoLength:
   514                           	opt stack 0
   515  0000CE                     ?_ReadMillis0:
   516                           	opt stack 0
   517  0000CE                     ?_ReadMillis1:
   518                           	opt stack 0
   519  0000CE                     ?_ReadMillis2:
   520                           	opt stack 0
   521  0000CE                     ?___wmul:
   522                           	opt stack 0
   523  0000CE                     ?___awdiv:
   524                           	opt stack 0
   525  0000CE                     ?___awmod:
   526                           	opt stack 0
   527  0000CE                     FlushTxBuf@index:
   528                           	opt stack 0
   529  0000CE                     FlushRxBuf@index:
   530                           	opt stack 0
   531  0000CE                     OWReset@result:
   532                           	opt stack 0
   533  0000CE                     OWWriteBit@b:
   534                           	opt stack 0
   535  0000CE                     OWReadBit@result:
   536                           	opt stack 0
   537  0000CE                     OpenADC@config2:
   538                           	opt stack 0
   539  0000CE                     OpenPWM4@period:
   540                           	opt stack 0
   541  0000CE                     OpenPWM5@period:
   542                           	opt stack 0
   543  0000CE                     OpenTimer0@config:
   544                           	opt stack 0
   545  0000CE                     OpenTimer1@config:
   546                           	opt stack 0
   547  0000CE                     OpenTimer3@config:
   548                           	opt stack 0
   549  0000CE                     Read1USART@data:
   550                           	opt stack 0
   551  0000CE                     Delay1TCYx@unit:
   552                           	opt stack 0
   553  0000CE                     WriteEEPROM@address:
   554                           	opt stack 0
   555  0000CE                     ReadEEPROM@address:
   556                           	opt stack 0
   557  0000CE                     NormaliseSensorReadings@sensor_readings_raw:
   558                           	opt stack 0
   559  0000CE                     CalculateSensorStatuses@sensor_readings_normalised:
   560                           	opt stack 0
   561  0000CE                     CalculateSensorSumDiscrete@sensor_statuses:
   562                           	opt stack 0
   563  0000CE                     DisplaySensorStatuses@sensor_statuses:
   564                           	opt stack 0
   565  0000CE                     SetDCPWM4@dutycycle:
   566                           	opt stack 0
   567  0000CE                     SetDCPWM5@dutycycle:
   568                           	opt stack 0
   569  0000CE                     WriteTimer0@timer0:
   570                           	opt stack 0
   571  0000CE                     WriteTimer1@timer1:
   572                           	opt stack 0
   573  0000CE                     Open1USART@spbrg:
   574                           	opt stack 0
   575  0000CE                     ___wmul@multiplier:
   576                           	opt stack 0
   577  0000CE                     ___awdiv@dividend:
   578                           	opt stack 0
   579  0000CE                     ___awmod@dividend:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x10
   583  0000CE                     	ds	1
   584  0000CF                     OWWriteByte@byte:
   585                           	opt stack 0
   586  0000CF                     OWReadByte@result:
   587                           	opt stack 0
   588  0000CF                     OpenADC@portconfig:
   589                           	opt stack 0
   590  0000CF                     SetChanADC@channel:
   591                           	opt stack 0
   592  0000CF                     Delay10KTCYx@unit:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x11
   596  0000CF                     	ds	1
   597  0000D0                     ??_SetDCPWM5:
   598  0000D0                     ??_SetDCPWM4:
   599  0000D0                     ??_OpenADC:
   600  0000D0                     ??_ReadADC:
   601  0000D0                     ??_DisplaySensorStatuses:
   602  0000D0                     ?_ReadIntEEPROM:
   603                           	opt stack 0
   604  0000D0                     WriteEEPROM@data:
   605                           	opt stack 0
   606  0000D0                     OWWriteByte@i:
   607                           	opt stack 0
   608  0000D0                     OWReadByte@i:
   609                           	opt stack 0
   610  0000D0                     SetADCChannel@channel:
   611                           	opt stack 0
   612  0000D0                     CalculateSensorSumDiscrete@sum:
   613                           	opt stack 0
   614  0000D0                     Open1USART@config:
   615                           	opt stack 0
   616  0000D0                     ReadIntEEPROM@address:
   617                           	opt stack 0
   618  0000D0                     ReadCharEEPROM@address:
   619                           	opt stack 0
   620  0000D0                     NormaliseSensorReadings@sensor_offsets:
   621                           	opt stack 0
   622  0000D0                     CalculateSensorStatuses@sensor_threshold:
   623                           	opt stack 0
   624  0000D0                     WriteTimer0@timer:
   625                           	opt stack 0
   626  0000D0                     WriteTimer1@timer:
   627                           	opt stack 0
   628  0000D0                     ___wmul@multiplicand:
   629                           	opt stack 0
   630  0000D0                     ___awdiv@divisor:
   631                           	opt stack 0
   632  0000D0                     ___awmod@divisor:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x12
   636  0000D0                     	ds	1
   637  0000D1                     ?_ReadVoltage:
   638                           	opt stack 0
   639  0000D1                     CalculateSensorSumDiscrete@index:
   640                           	opt stack 0
   641  0000D1                     WriteIntEEPROM@address:
   642                           	opt stack 0
   643  0000D1                     WriteCharEEPROM@address:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x13
   647  0000D1                     	ds	1
   648  0000D2                     ??_ReadIntEEPROM:
   649  0000D2                     ??_NormaliseSensorReadings:
   650  0000D2                     ??_CalculateSensorStatuses:
   651  0000D2                     DisplaySensorStatuses@index:
   652                           	opt stack 0
   653  0000D2                     OpenADC@config:
   654                           	opt stack 0
   655  0000D2                     ___awdiv@counter:
   656                           	opt stack 0
   657  0000D2                     ___awmod@counter:
   658                           	opt stack 0
   659  0000D2                     SetDCPWM4@DCycle:
   660                           	opt stack 0
   661  0000D2                     SetDCPWM5@DCycle:
   662                           	opt stack 0
   663  0000D2                     ___wmul@product:
   664                           	opt stack 0
   665  0000D2                     ConfigureUltrasound@echo_to_cm:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x14
   669  0000D2                     	ds	1
   670  0000D3                     ??_ReadVoltage:
   671  0000D3                     WriteCharEEPROM@data:
   672                           	opt stack 0
   673  0000D3                     ___awdiv@sign:
   674                           	opt stack 0
   675  0000D3                     ___awmod@sign:
   676                           	opt stack 0
   677  0000D3                     WriteIntEEPROM@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x15
   681  0000D3                     	ds	1
   682  0000D4                     ??_PutCharTxBuf:
   683  0000D4                     ??_PutCharRxBuf:
   684  0000D4                     ??_GetCharRxBuf:
   685  0000D4                     ?_CalculateSensorSum:
   686                           	opt stack 0
   687  0000D4                     SetDCMotorL@duty_cycle:
   688                           	opt stack 0
   689  0000D4                     SetDCMotorR@duty_cycle:
   690                           	opt stack 0
   691  0000D4                     CalculateSensorSum@sensor_readings_normalised:
   692                           	opt stack 0
   693  0000D4                     ___awdiv@quotient:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x16
   697  0000D4                     	ds	1
   698  0000D5                     PutCharTxBuf@ch:
   699                           	opt stack 0
   700  0000D5                     PutCharRxBuf@ch:
   701                           	opt stack 0
   702  0000D5                     GetCharRxBuf@ch:
   703                           	opt stack 0
   704  0000D5                     ReadIntEEPROM@data:
   705                           	opt stack 0
   706  0000D5                     ConfigureUltrasound@echo_to_in:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x17
   710  0000D5                     	ds	1
   711  0000D6                     ??_CalculateSensorSum:
   712  0000D6                     SendStatus@status_code:
   713                           	opt stack 0
   714  0000D6                     NormaliseSensorReadings@index:
   715                           	opt stack 0
   716  0000D6                     SetDCMotorPID@PIDoutput:
   717                           	opt stack 0
   718  0000D6                     SendLineMode@line_mode:
   719                           	opt stack 0
   720  0000D6                     SendOffsets@offsets_array:
   721                           	opt stack 0
   722  0000D6                     SendThreshold@sensor_threshold:
   723                           	opt stack 0
   724  0000D6                     SendDefaultPIDValues@Kp:
   725                           	opt stack 0
   726  0000D6                     SendStoredPIDValues@Kp:
   727                           	opt stack 0
   728  0000D6                     SendCurrentPIDValues@Kp:
   729                           	opt stack 0
   730  0000D6                     SendBattVoltageInitial@reading:
   731                           	opt stack 0
   732  0000D6                     SendPIDSetPointOnLine@set_point:
   733                           	opt stack 0
   734  0000D6                     ReadVoltage@result:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x18
   738  0000D6                     	ds	1
   739  0000D7                     ??_CalibrateOffsets:
   740  0000D7                     ??_SetPIDValues:
   741  0000D7                     CalculateSensorStatuses@index:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x19
   745  0000D7                     	ds	1
   746  0000D8                     ??_SetDCMotorPID:
   747  0000D8                     ??_SendOffsets:
   748  0000D8                     ??_SendThreshold:
   749  0000D8                     ??_SendBattVoltageInitial:
   750  0000D8                     ??_SendPIDSetPointOnLine:
   751  0000D8                     SendDefaultPIDValues@Kd:
   752                           	opt stack 0
   753  0000D8                     SendStoredPIDValues@Kd:
   754                           	opt stack 0
   755  0000D8                     SendCurrentPIDValues@Kd:
   756                           	opt stack 0
   757  0000D8                     CalculateSensorSum@sum:
   758                           	opt stack 0
   759  0000D8                     CalibrateThreshold@sensor_threshold_temp_ptr:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x1A
   763  0000D8                     	ds	1
   764  0000D9                     CalibrateOffsets@index:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x1B
   768  0000D9                     	ds	1
   769  0000DA                     SendOffsets@index:
   770                           	opt stack 0
   771  0000DA                     SetPIDValues@char_index:
   772                           	opt stack 0
   773  0000DA                     SendDefaultPIDValues@Ki:
   774                           	opt stack 0
   775  0000DA                     SendStoredPIDValues@Ki:
   776                           	opt stack 0
   777  0000DA                     SendCurrentPIDValues@Ki:
   778                           	opt stack 0
   779  0000DA                     CalibrateThreshold@sensor_threshold_temp:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x1C
   783  0000DA                     	ds	1
   784  0000DB                     
   785                           ; 0 bytes @ 0x1D
   786  0000DB                     	ds	1
   787  0000DC                     ??_GenerateCalibration:
   788                           
   789                           ; 0 bytes @ 0x1E
   790  0000DC                     	ds	2
   791  0000DE                     GenerateCalibration@index:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x20
   795  0000DE                     	ds	1
   796  0000DF                     ??_LoadCalibration:
   797                           
   798                           ; 0 bytes @ 0x21
   799  0000DF                     	ds	2
   800  0000E1                     LoadCalibration@index:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x23
   804  0000E1                     	ds	1
   805  0000E2                     ??_main:
   806                           
   807                           ; 0 bytes @ 0x24
   808  0000E2                     	ds	4
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           
   812                           	psect	cstackCOMRAM
   813  00002B                     __pcstackCOMRAM:
   814                           	opt stack 0
   815  00002B                     ??i1_SetChanADC:
   816  00002B                     ?i1_ReadADC:
   817                           	opt stack 0
   818  00002B                     ?i1___awmod:
   819                           	opt stack 0
   820  00002B                     Write1USART@data:
   821                           	opt stack 0
   822  00002B                     i1___awmod@dividend:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x0
   826  00002B                     	ds	1
   827  00002C                     i1SetChanADC@channel:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1
   831  00002C                     	ds	1
   832  00002D                     ??i1_ReadADC:
   833  00002D                     i1SetADCChannel@channel:
   834                           	opt stack 0
   835  00002D                     i1___awmod@divisor:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x2
   839  00002D                     	ds	2
   840  00002F                     i1___awmod@counter:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x4
   844  00002F                     	ds	1
   845  000030                     i1___awmod@sign:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x5
   849  000030                     	ds	1
   850  000031                     ??_GetCharTxBuf:
   851                           
   852                           ; 0 bytes @ 0x6
   853  000031                     	ds	1
   854  000032                     GetCharTxBuf@ch:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x7
   858  000032                     	ds	1
   859  000033                     ??_isrLP:
   860                           
   861                           ; 0 bytes @ 0x8
   862  000033                     	ds	17
   863  000044                     ?_ReadTimer1:
   864                           	opt stack 0
   865  000044                     i2WriteTimer0@timer0:
   866                           	opt stack 0
   867  000044                     i2WriteTimer1@timer1:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x19
   871  000044                     	ds	2
   872  000046                     postinc0	equ	0xFEE
   873                           wreg	equ	0xFE8
   874                           
   875                           ; 0 bytes @ 0x1B
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 686 in file "FastBuggy17_Main_Code_TUNING.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  battery_curr    4   11[BANK1 ] unsigned long 
   886 ;;  sensor_thres    2   41[BANK1 ] PTR int 
   887 ;;		 -> sensor_threshold(2), 
   888 ;;  Ki_stored       2   38[BANK1 ] int 
   889 ;;  Kd_stored       2   36[BANK1 ] int 
   890 ;;  Kp_stored       2   34[BANK1 ] int 
   891 ;;  sensor_sum      2   31[BANK1 ] int 
   892 ;;  I_temp          2   29[BANK1 ] int 
   893 ;;  D_temp          2   27[BANK1 ] int 
   894 ;;  battery_volt    2   25[BANK1 ] unsigned int 
   895 ;;  battery_volt    2   21[BANK1 ] PTR unsigned int 
   896 ;;		 -> main@battery_voltage(2), 
   897 ;;  PID_set_poin    2   19[BANK1 ] PTR int 
   898 ;;		 -> PID_set_point(2), 
   899 ;;  line_mode_pt    2   17[BANK1 ] PTR unsigned char 
   900 ;;		 -> line_mode(1), 
   901 ;;  battery_curr    2   15[BANK1 ] unsigned int 
   902 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
   903 ;;		 -> main@battery_current_acc(4), 
   904 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
   905 ;;		 -> main@battery_current(2), 
   906 ;;  PID_error_pt    2    2[BANK1 ] PTR int 
   907 ;;		 -> PID_error(2), 
   908 ;;  sensor_sum_p    2    0[BANK1 ] PTR int 
   909 ;;		 -> main@sensor_sum(2), 
   910 ;;  I_min           2    0        int 
   911 ;;  I_max           2    0        int 
   912 ;;  echo_length     2    0        unsigned int 
   913 ;;  sensor_sum_d    1   40[BANK1 ] unsigned char 
   914 ;;  stop_flag       1   33[BANK1 ] unsigned char 
   915 ;;  wall_detecte    1   24[BANK1 ] unsigned char 
   916 ;;  command_msg     1   23[BANK1 ] unsigned char 
   917 ;;  send_battery    1   10[BANK1 ] unsigned char 
   918 ;;  line_end_fla    1    9[BANK1 ] unsigned char 
   919 ;;  find_line_fl    1    8[BANK1 ] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0       4      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:       47 bytes
   934 ;; Hardware stack levels required when called:   13
   935 ;; This function calls:
   936 ;;		_BusyDistanceAcq
   937 ;;		_BusySensorAcq
   938 ;;		_CalculateSensorStatuses
   939 ;;		_CalculateSensorSum
   940 ;;		_CalculateSensorSumDiscrete
   941 ;;		_CommandAvailable
   942 ;;		_ConfigureADC
   943 ;;		_ConfigureBuggyIO
   944 ;;		_ConfigureInterrupts
   945 ;;		_ConfigurePWM
   946 ;;		_ConfigureTimer0
   947 ;;		_ConfigureTimer1
   948 ;;		_ConfigureTimer2
   949 ;;		_ConfigureUltrasound
   950 ;;		_ConfigureWireless
   951 ;;		_Delay10KTCYx
   952 ;;		_DisableMotors
   953 ;;		_DisplaySensorStatuses
   954 ;;		_EnableMotors
   955 ;;		_EnableSensorLEDS
   956 ;;		_FlashLEDS
   957 ;;		_GenerateCalibration
   958 ;;		_GetCommand
   959 ;;		_GetDistance
   960 ;;		_GetSensorReadings
   961 ;;		_LoadCalibration
   962 ;;		_LoadPIDValues
   963 ;;		_NormaliseSensorReadings
   964 ;;		_PB1pressed
   965 ;;		_PB2pressed
   966 ;;		_ReadEchoLength
   967 ;;		_ReadIntEEPROM
   968 ;;		_ReadMillis0
   969 ;;		_ReadMillis1
   970 ;;		_ReadMillis2
   971 ;;		_ReadVoltage
   972 ;;		_ResetAccumulatedCurrent
   973 ;;		_ResetMillis0
   974 ;;		_ResetMillis1
   975 ;;		_ResetMillis2
   976 ;;		_ResetMillis3
   977 ;;		_SendBattVoltageInitial
   978 ;;		_SendCurrentPIDValues
   979 ;;		_SendDefaultPIDValues
   980 ;;		_SendLineMode
   981 ;;		_SendOffsets
   982 ;;		_SendPIDSetPointOnLine
   983 ;;		_SendStatus
   984 ;;		_SendStoredPIDValues
   985 ;;		_SendThreshold
   986 ;;		_SetDCMotorL
   987 ;;		_SetDCMotorPID
   988 ;;		_SetDCMotorR
   989 ;;		_SetDirectionForward
   990 ;;		_SetForwardsMotorR
   991 ;;		_SetPIDValues
   992 ;;		_SetReverseMotorL
   993 ;;		_SetUnipolar
   994 ;;		_StopMotors
   995 ;;		___awdiv
   996 ;;		___wmul
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text0
  1003  0000F0                     __ptext0:
  1004                           	opt stack 0
  1005  0000F0                     _main:
  1006                           	opt stack 18
  1007                           
  1008                           ;FastBuggy17_Main_Code_TUNING.c: 689: unsigned char stop_flag, find_line_flag, line_end_
      +                          flag, wall_detected_flag, send_battery_stats_flag, command_msg, sensor_sum_discrete;
  1009                           ;FastBuggy17_Main_Code_TUNING.c: 690: unsigned int echo_length, battery_voltage, battery
      +                          _current;
  1010                           ;FastBuggy17_Main_Code_TUNING.c: 691: unsigned long int battery_current_acc;
  1011                           ;FastBuggy17_Main_Code_TUNING.c: 692: int sensor_sum, D_temp, I_temp, I_max, I_min, Kp_s
      +                          tored, Kd_stored, Ki_stored;
  1012                           ;FastBuggy17_Main_Code_TUNING.c: 695: unsigned char *line_mode_ptr;
  1013                           
  1014                           ;incstack = 0
  1015  0000F0  0E2A               	movlw	low _line_mode
  1016  0000F2  0101               	movlb	1	; () banked
  1017  0000F4  6F11               	movwf	main@line_mode_ptr& (0+255),b
  1018  0000F6  0E00               	movlw	high _line_mode
  1019  0000F8  0101               	movlb	1	; () banked
  1020  0000FA  6F12               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1021                           
  1022                           ;FastBuggy17_Main_Code_TUNING.c: 699: sensor_threshold_ptr = &sensor_threshold;
  1023  0000FC  0EBC               	movlw	low _sensor_threshold
  1024  0000FE  0101               	movlb	1	; () banked
  1025  000100  6F29               	movwf	main@sensor_threshold_ptr& (0+255),b
  1026  000102  0E00               	movlw	high _sensor_threshold
  1027  000104  0101               	movlb	1	; () banked
  1028  000106  6F2A               	movwf	(main@sensor_threshold_ptr+1)& (0+255),b
  1029                           
  1030                           ;FastBuggy17_Main_Code_TUNING.c: 700: sensor_sum_ptr = &sensor_sum;
  1031  000108  0E1F               	movlw	low main@sensor_sum
  1032  00010A  0101               	movlb	1	; () banked
  1033  00010C  6F00               	movwf	main@sensor_sum_ptr& (0+255),b
  1034  00010E  0E01               	movlw	high main@sensor_sum
  1035  000110  0101               	movlb	1	; () banked
  1036  000112  6F01               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1037                           
  1038                           ;FastBuggy17_Main_Code_TUNING.c: 701: PID_error_ptr = &PID_error;
  1039  000114  0EB8               	movlw	low _PID_error
  1040  000116  0101               	movlb	1	; () banked
  1041  000118  6F02               	movwf	main@PID_error_ptr& (0+255),b
  1042  00011A  0E00               	movlw	high _PID_error
  1043  00011C  0101               	movlb	1	; () banked
  1044  00011E  6F03               	movwf	(main@PID_error_ptr+1)& (0+255),b
  1045                           
  1046                           ;FastBuggy17_Main_Code_TUNING.c: 702: PID_set_point_ptr = &PID_set_point;
  1047  000120  0EBA               	movlw	low _PID_set_point
  1048  000122  0101               	movlb	1	; () banked
  1049  000124  6F13               	movwf	main@PID_set_point_ptr& (0+255),b
  1050  000126  0E00               	movlw	high _PID_set_point
  1051  000128  0101               	movlb	1	; () banked
  1052  00012A  6F14               	movwf	(main@PID_set_point_ptr+1)& (0+255),b
  1053                           
  1054                           ;FastBuggy17_Main_Code_TUNING.c: 704: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1055                           ;FastBuggy17_Main_Code_TUNING.c: 705: unsigned long int *battery_current_acc_ptr;
  1056                           ;FastBuggy17_Main_Code_TUNING.c: 707: battery_voltage_ptr = &battery_voltage;
  1057  00012C  0E19               	movlw	low main@battery_voltage
  1058  00012E  0101               	movlb	1	; () banked
  1059  000130  6F15               	movwf	main@battery_voltage_ptr& (0+255),b
  1060  000132  0E01               	movlw	high main@battery_voltage
  1061  000134  0101               	movlb	1	; () banked
  1062  000136  6F16               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1063                           
  1064                           ;FastBuggy17_Main_Code_TUNING.c: 708: battery_current_ptr = &battery_current;
  1065  000138  0E0F               	movlw	low main@battery_current
  1066  00013A  0101               	movlb	1	; () banked
  1067  00013C  6F04               	movwf	main@battery_current_ptr& (0+255),b
  1068  00013E  0E01               	movlw	high main@battery_current
  1069  000140  0101               	movlb	1	; () banked
  1070  000142  6F05               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1071                           
  1072                           ;FastBuggy17_Main_Code_TUNING.c: 709: battery_current_acc_ptr = &battery_current_acc;
  1073  000144  0E0B               	movlw	low main@battery_current_acc
  1074  000146  0101               	movlb	1	; () banked
  1075  000148  6F06               	movwf	main@battery_current_acc_ptr& (0+255),b
  1076  00014A  0E01               	movlw	high main@battery_current_acc
  1077  00014C  0101               	movlb	1	; () banked
  1078  00014E  6F07               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1079                           
  1080                           ; BSR set to: 1
  1081                           ;FastBuggy17_Main_Code_TUNING.c: 712: ConfigureUltrasound(0.0137, 0.054);
  1082  000150  0E76               	movlw	118
  1083  000152  0100               	movlb	0	; () banked
  1084  000154  6FD2               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1085  000156  0E60               	movlw	96
  1086  000158  0100               	movlb	0	; () banked
  1087  00015A  6FD3               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1088  00015C  0E3C               	movlw	60
  1089  00015E  0100               	movlb	0	; () banked
  1090  000160  6FD4               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1091  000162  0E2F               	movlw	47
  1092  000164  0100               	movlb	0	; () banked
  1093  000166  6FD5               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1094  000168  0E5D               	movlw	93
  1095  00016A  0100               	movlb	0	; () banked
  1096  00016C  6FD6               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1097  00016E  0E3D               	movlw	61
  1098  000170  0100               	movlb	0	; () banked
  1099  000172  6FD7               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1100  000174  EC61  F010         	call	_ConfigureUltrasound	;wreg free
  1101                           
  1102                           ;FastBuggy17_Main_Code_TUNING.c: 713: ConfigureBuggyIO();
  1103  000178  EC42  F011         	call	_ConfigureBuggyIO	;wreg free
  1104                           
  1105                           ;FastBuggy17_Main_Code_TUNING.c: 714: ConfigureInterrupts();
  1106  00017C  EC75  F010         	call	_ConfigureInterrupts	;wreg free
  1107                           
  1108                           ;FastBuggy17_Main_Code_TUNING.c: 715: ConfigureTimer0();
  1109  000180  EC66  F011         	call	_ConfigureTimer0	;wreg free
  1110                           
  1111                           ;FastBuggy17_Main_Code_TUNING.c: 716: ConfigureTimer1();
  1112  000184  EC4F  F011         	call	_ConfigureTimer1	;wreg free
  1113                           
  1114                           ;FastBuggy17_Main_Code_TUNING.c: 717: ConfigureTimer2();
  1115  000188  EC5E  F012         	call	_ConfigureTimer2	;wreg free
  1116                           
  1117                           ;FastBuggy17_Main_Code_TUNING.c: 718: ConfigurePWM();
  1118  00018C  EC27  F012         	call	_ConfigurePWM	;wreg free
  1119                           
  1120                           ;FastBuggy17_Main_Code_TUNING.c: 719: ConfigureADC();
  1121  000190  EC9B  F011         	call	_ConfigureADC	;wreg free
  1122                           
  1123                           ;FastBuggy17_Main_Code_TUNING.c: 720: ConfigureWireless();
  1124  000194  EC24  F011         	call	_ConfigureWireless	;wreg free
  1125                           
  1126                           ;FastBuggy17_Main_Code_TUNING.c: 722: DisableMotors();
  1127  000198  EC73  F012         	call	_DisableMotors	;wreg free
  1128                           
  1129                           ;FastBuggy17_Main_Code_TUNING.c: 724: Delay10KTCYx(100);
  1130  00019C  0E64               	movlw	100
  1131  00019E  EC06  F011         	call	_Delay10KTCYx
  1132                           
  1133                           ;FastBuggy17_Main_Code_TUNING.c: 726: battery_voltage = ReadVoltage();
  1134  0001A2  EC54  F00C         	call	_ReadVoltage	;wreg free
  1135  0001A6  C0D1  F119         	movff	?_ReadVoltage,main@battery_voltage
  1136  0001AA  C0D2  F11A         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1137                           
  1138                           ;FastBuggy17_Main_Code_TUNING.c: 728: SendStatus(0x00);
  1139  0001AE  0E00               	movlw	0
  1140  0001B0  ECCA  F00E         	call	_SendStatus
  1141                           
  1142                           ;FastBuggy17_Main_Code_TUNING.c: 730: SendBattVoltageInitial(battery_voltage_ptr);
  1143  0001B4  C115  F0D6         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1144  0001B8  C116  F0D7         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1145  0001BC  EC89  F00C         	call	_SendBattVoltageInitial	;wreg free
  1146                           
  1147                           ;FastBuggy17_Main_Code_TUNING.c: 733: LATJ = 0x1F;
  1148  0001C0  0E1F               	movlw	31
  1149  0001C2  6E91               	movwf	3985,c	;volatile
  1150                           
  1151                           ;FastBuggy17_Main_Code_TUNING.c: 734: SendStatus(0x01);
  1152  0001C4  0E01               	movlw	1
  1153  0001C6  ECCA  F00E         	call	_SendStatus
  1154  0001CA  D000               	goto	l6773
  1155  0001CC                     l6773:
  1156                           
  1157                           ;FastBuggy17_Main_Code_TUNING.c: 737: if(PB1pressed() == 1) {
  1158  0001CC  EC4D  F00D         	call	_PB1pressed	;wreg free
  1159  0001D0  06E8               	decf	wreg,f,c
  1160  0001D2  A4D8               	btfss	status,2,c
  1161  0001D4  D003               	goto	l6779
  1162                           
  1163                           ;FastBuggy17_Main_Code_TUNING.c: 738: line_mode = 0;
  1164  0001D6  0E00               	movlw	0
  1165  0001D8  D007               	goto	L1
  1166                           
  1167                           ;FastBuggy17_Main_Code_TUNING.c: 740: }
  1168                           
  1169                           ;FastBuggy17_Main_Code_TUNING.c: 739: break;
  1170  0001DA  D7F8               	goto	l6773
  1171  0001DC                     l6779:
  1172                           
  1173                           ;FastBuggy17_Main_Code_TUNING.c: 741: else if(PB2pressed() == 1) {
  1174  0001DC  ECEF  F00C         	call	_PB2pressed	;wreg free
  1175  0001E0  06E8               	decf	wreg,f,c
  1176  0001E2  A4D8               	btfss	status,2,c
  1177  0001E4  D7F3               	goto	l6773
  1178                           
  1179                           ;FastBuggy17_Main_Code_TUNING.c: 742: line_mode = 1;
  1180  0001E6  0E01               	movlw	1
  1181  0001E8                     L1:
  1182  0001E8  6E2A               	movwf	_line_mode,c
  1183                           
  1184                           ;FastBuggy17_Main_Code_TUNING.c: 743: break;
  1185  0001EA  D001               	goto	l6783
  1186  0001EC  D7EF               	goto	l6773
  1187  0001EE                     l6783:
  1188                           
  1189                           ;FastBuggy17_Main_Code_TUNING.c: 744: }
  1190                           ;FastBuggy17_Main_Code_TUNING.c: 745: }
  1191                           ;FastBuggy17_Main_Code_TUNING.c: 747: SendLineMode(line_mode_ptr);
  1192  0001EE  C111  F0D6         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1193  0001F2  C112  F0D7         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1194  0001F6  EC8F  F00E         	call	_SendLineMode	;wreg free
  1195                           
  1196                           ;FastBuggy17_Main_Code_TUNING.c: 748: FlashLEDS();
  1197  0001FA  EC4D  F010         	call	_FlashLEDS	;wreg free
  1198                           
  1199                           ;FastBuggy17_Main_Code_TUNING.c: 750: EnableSensorLEDS();
  1200  0001FE  EC68  F012         	call	_EnableSensorLEDS	;wreg free
  1201                           
  1202                           ;FastBuggy17_Main_Code_TUNING.c: 753: LATJ = 0x0F;
  1203  000202  0E0F               	movlw	15
  1204  000204  6E91               	movwf	3985,c	;volatile
  1205                           
  1206                           ;FastBuggy17_Main_Code_TUNING.c: 754: SendStatus(0x02);
  1207  000206  0E02               	movlw	2
  1208  000208  ECCA  F00E         	call	_SendStatus
  1209  00020C  D000               	goto	l6793
  1210  00020E                     l6793:
  1211                           
  1212                           ;FastBuggy17_Main_Code_TUNING.c: 757: if(PB1pressed() == 1) {
  1213  00020E  EC4D  F00D         	call	_PB1pressed	;wreg free
  1214  000212  06E8               	decf	wreg,f,c
  1215  000214  A4D8               	btfss	status,2,c
  1216  000216  D006               	goto	l6801
  1217                           
  1218                           ;FastBuggy17_Main_Code_TUNING.c: 758: FlashLEDS();
  1219  000218  EC4D  F010         	call	_FlashLEDS	;wreg free
  1220                           
  1221                           ;FastBuggy17_Main_Code_TUNING.c: 759: GenerateCalibration();
  1222  00021C  EC73  F008         	call	_GenerateCalibration	;wreg free
  1223                           
  1224                           ;FastBuggy17_Main_Code_TUNING.c: 760: break;
  1225  000220  D00C               	goto	l6807
  1226                           
  1227                           ;FastBuggy17_Main_Code_TUNING.c: 761: }
  1228  000222  D7F5               	goto	l6793
  1229  000224                     l6801:
  1230                           
  1231                           ;FastBuggy17_Main_Code_TUNING.c: 762: else if(PB2pressed() == 1) {
  1232  000224  ECEF  F00C         	call	_PB2pressed	;wreg free
  1233  000228  06E8               	decf	wreg,f,c
  1234  00022A  A4D8               	btfss	status,2,c
  1235  00022C  D7F0               	goto	l6793
  1236                           
  1237                           ;FastBuggy17_Main_Code_TUNING.c: 763: FlashLEDS();
  1238  00022E  EC4D  F010         	call	_FlashLEDS	;wreg free
  1239                           
  1240                           ;FastBuggy17_Main_Code_TUNING.c: 764: LoadCalibration();
  1241  000232  ECBB  F007         	call	_LoadCalibration	;wreg free
  1242                           
  1243                           ;FastBuggy17_Main_Code_TUNING.c: 765: break;
  1244  000236  D001               	goto	l6807
  1245  000238  D7EA               	goto	l6793
  1246  00023A                     l6807:
  1247                           
  1248                           ;FastBuggy17_Main_Code_TUNING.c: 766: }
  1249                           ;FastBuggy17_Main_Code_TUNING.c: 768: }
  1250                           ;FastBuggy17_Main_Code_TUNING.c: 770: SendOffsets(sensor_offsets);
  1251  00023A  0E9A               	movlw	low _sensor_offsets
  1252  00023C  0100               	movlb	0	; () banked
  1253  00023E  6FD6               	movwf	SendOffsets@offsets_array& (0+255),b
  1254  000240  0E00               	movlw	high _sensor_offsets
  1255  000242  0100               	movlb	0	; () banked
  1256  000244  6FD7               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1257  000246  EC71  F009         	call	_SendOffsets	;wreg free
  1258                           
  1259                           ;FastBuggy17_Main_Code_TUNING.c: 771: SendThreshold(sensor_threshold_ptr);
  1260  00024A  C129  F0D6         	movff	main@sensor_threshold_ptr,SendThreshold@sensor_threshold
  1261  00024E  C12A  F0D7         	movff	main@sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  1262  000252  EC49  F00B         	call	_SendThreshold	;wreg free
  1263                           
  1264                           ;FastBuggy17_Main_Code_TUNING.c: 772: SendPIDSetPointOnLine(PID_set_point_ptr);
  1265  000256  C113  F0D6         	movff	main@PID_set_point_ptr,SendPIDSetPointOnLine@set_point
  1266  00025A  C114  F0D7         	movff	main@PID_set_point_ptr+1,SendPIDSetPointOnLine@set_point+1
  1267  00025E  EC7F  F00B         	call	_SendPIDSetPointOnLine	;wreg free
  1268                           
  1269                           ;FastBuggy17_Main_Code_TUNING.c: 774: FlashLEDS();
  1270  000262  EC4D  F010         	call	_FlashLEDS	;wreg free
  1271                           
  1272                           ;FastBuggy17_Main_Code_TUNING.c: 777: LATJ = 0x03;
  1273  000266  0E03               	movlw	3
  1274  000268  6E91               	movwf	3985,c	;volatile
  1275                           
  1276                           ;FastBuggy17_Main_Code_TUNING.c: 778: SendStatus(0x06);
  1277  00026A  0E06               	movlw	6
  1278  00026C  ECCA  F00E         	call	_SendStatus
  1279                           
  1280                           ;FastBuggy17_Main_Code_TUNING.c: 780: SendDefaultPIDValues(20, 0, 0);
  1281  000270  0E00               	movlw	0
  1282  000272  0100               	movlb	0	; () banked
  1283  000274  6FD7               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1284  000276  0E14               	movlw	20
  1285  000278  6FD6               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1286  00027A  0E00               	movlw	0
  1287  00027C  0100               	movlb	0	; () banked
  1288  00027E  6FD9               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1289  000280  0E00               	movlw	0
  1290  000282  6FD8               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1291  000284  0E00               	movlw	0
  1292  000286  0100               	movlb	0	; () banked
  1293  000288  6FDB               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1294  00028A  0E00               	movlw	0
  1295  00028C  6FDA               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1296  00028E  ECEA  F00B         	call	_SendDefaultPIDValues	;wreg free
  1297                           
  1298                           ;FastBuggy17_Main_Code_TUNING.c: 782: Kp_stored = ReadIntEEPROM(0x0010);
  1299  000292  0E00               	movlw	0
  1300  000294  0100               	movlb	0	; () banked
  1301  000296  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1302  000298  0E10               	movlw	16
  1303  00029A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1304  00029C  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  1305  0002A0  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  1306  0002A4  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1307                           
  1308                           ;FastBuggy17_Main_Code_TUNING.c: 783: Kd_stored = ReadIntEEPROM(0x0012);
  1309  0002A8  0E00               	movlw	0
  1310  0002AA  0100               	movlb	0	; () banked
  1311  0002AC  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1312  0002AE  0E12               	movlw	18
  1313  0002B0  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1314  0002B2  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  1315  0002B6  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  1316  0002BA  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1317                           
  1318                           ;FastBuggy17_Main_Code_TUNING.c: 784: Ki_stored = ReadIntEEPROM(0x0014);
  1319  0002BE  0E00               	movlw	0
  1320  0002C0  0100               	movlb	0	; () banked
  1321  0002C2  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1322  0002C4  0E14               	movlw	20
  1323  0002C6  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1324  0002C8  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  1325  0002CC  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  1326  0002D0  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1327                           
  1328                           ;FastBuggy17_Main_Code_TUNING.c: 786: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1329  0002D4  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1330  0002D8  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1331  0002DC  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1332  0002E0  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1333  0002E4  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1334  0002E8  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1335  0002EC  ECB5  F00B         	call	_SendStoredPIDValues	;wreg free
  1336  0002F0  D000               	goto	l6825
  1337  0002F2                     l6825:
  1338                           
  1339                           ;FastBuggy17_Main_Code_TUNING.c: 789: if(PB1pressed() == 1) {
  1340  0002F2  EC4D  F00D         	call	_PB1pressed	;wreg free
  1341  0002F6  06E8               	decf	wreg,f,c
  1342  0002F8  A4D8               	btfss	status,2,c
  1343  0002FA  D008               	goto	l6835
  1344                           
  1345                           ;FastBuggy17_Main_Code_TUNING.c: 790: FlashLEDS();
  1346  0002FC  EC4D  F010         	call	_FlashLEDS	;wreg free
  1347                           
  1348                           ;FastBuggy17_Main_Code_TUNING.c: 791: LATJ = 0x03;
  1349  000300  0E03               	movlw	3
  1350  000302  6E91               	movwf	3985,c	;volatile
  1351                           
  1352                           ;FastBuggy17_Main_Code_TUNING.c: 792: SetPIDValues();
  1353  000304  EC49  F004         	call	_SetPIDValues	;wreg free
  1354                           
  1355                           ;FastBuggy17_Main_Code_TUNING.c: 793: break;
  1356  000308  D00E               	goto	l6843
  1357                           
  1358                           ;FastBuggy17_Main_Code_TUNING.c: 794: }
  1359  00030A  D7F3               	goto	l6825
  1360  00030C                     l6835:
  1361                           
  1362                           ;FastBuggy17_Main_Code_TUNING.c: 795: else if(PB2pressed() == 1) {
  1363  00030C  ECEF  F00C         	call	_PB2pressed	;wreg free
  1364  000310  06E8               	decf	wreg,f,c
  1365  000312  A4D8               	btfss	status,2,c
  1366  000314  D7EE               	goto	l6825
  1367                           
  1368                           ;FastBuggy17_Main_Code_TUNING.c: 796: FlashLEDS();
  1369  000316  EC4D  F010         	call	_FlashLEDS	;wreg free
  1370                           
  1371                           ;FastBuggy17_Main_Code_TUNING.c: 797: LATJ = 0x03;
  1372  00031A  0E03               	movlw	3
  1373  00031C  6E91               	movwf	3985,c	;volatile
  1374                           
  1375                           ;FastBuggy17_Main_Code_TUNING.c: 798: LoadPIDValues();
  1376  00031E  ECEC  F005         	call	_LoadPIDValues	;wreg free
  1377                           
  1378                           ;FastBuggy17_Main_Code_TUNING.c: 799: break;
  1379  000322  D001               	goto	l6843
  1380  000324  D7E6               	goto	l6825
  1381  000326                     l6843:
  1382                           
  1383                           ;FastBuggy17_Main_Code_TUNING.c: 800: }
  1384                           ;FastBuggy17_Main_Code_TUNING.c: 801: }
  1385                           ;FastBuggy17_Main_Code_TUNING.c: 803: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1386  000326  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1387  00032A  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1388  00032E  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1389  000332  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1390  000336  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1391  00033A  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1392  00033E  EC1F  F00C         	call	_SendCurrentPIDValues	;wreg free
  1393  000342  D000               	goto	l6845
  1394  000344                     l6845:
  1395                           
  1396                           ;FastBuggy17_Main_Code_TUNING.c: 809: FlashLEDS();
  1397  000344  EC4D  F010         	call	_FlashLEDS	;wreg free
  1398                           
  1399                           ;FastBuggy17_Main_Code_TUNING.c: 811: LATJ = 0x01;
  1400  000348  0E01               	movlw	1
  1401  00034A  6E91               	movwf	3985,c	;volatile
  1402                           
  1403                           ;FastBuggy17_Main_Code_TUNING.c: 812: SendStatus(0x09);
  1404  00034C  0E09               	movlw	9
  1405  00034E  ECCA  F00E         	call	_SendStatus
  1406  000352  D000               	goto	l6851
  1407  000354                     l6851:
  1408                           
  1409                           ;FastBuggy17_Main_Code_TUNING.c: 815: if(PB1pressed() == 1) {
  1410  000354  EC4D  F00D         	call	_PB1pressed	;wreg free
  1411  000358  06E8               	decf	wreg,f,c
  1412  00035A  B4D8               	btfsc	status,2,c
  1413  00035C  D00F               	goto	l6861
  1414  00035E  D001               	goto	l6855
  1415                           
  1416                           ;FastBuggy17_Main_Code_TUNING.c: 816: break;
  1417  000360  D00D               	goto	l6861
  1418  000362                     l6855:
  1419                           
  1420                           ;FastBuggy17_Main_Code_TUNING.c: 817: }
  1421                           ;FastBuggy17_Main_Code_TUNING.c: 818: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1422  000362  EC20  F012         	call	_CommandAvailable	;wreg free
  1423  000366  06E8               	decf	wreg,f,c
  1424  000368  A4D8               	btfss	status,2,c
  1425  00036A  D7F4               	goto	l6851
  1426  00036C  EC5A  F012         	call	_GetCommand	;wreg free
  1427  000370  0A02               	xorlw	2
  1428  000372  B4D8               	btfsc	status,2,c
  1429  000374  D003               	goto	l6861
  1430  000376  D7EE               	goto	l6851
  1431                           
  1432                           ;FastBuggy17_Main_Code_TUNING.c: 819: break;
  1433  000378  D001               	goto	l6861
  1434  00037A  D7EC               	goto	l6851
  1435  00037C                     l6861:
  1436                           
  1437                           ;FastBuggy17_Main_Code_TUNING.c: 820: }
  1438                           ;FastBuggy17_Main_Code_TUNING.c: 821: }
  1439                           ;FastBuggy17_Main_Code_TUNING.c: 824: PID_error = 0;
  1440  00037C  0E00               	movlw	0
  1441  00037E  0100               	movlb	0	; () banked
  1442  000380  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1443  000382  0E00               	movlw	0
  1444  000384  6FB8               	movwf	_PID_error& (0+255),b
  1445                           
  1446                           ;FastBuggy17_Main_Code_TUNING.c: 825: PID_output = 0;
  1447  000386  0E00               	movlw	0
  1448  000388  0100               	movlb	0	; () banked
  1449  00038A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1450  00038C  0E00               	movlw	0
  1451  00038E  6F98               	movwf	_PID_output& (0+255),b
  1452                           
  1453                           ;FastBuggy17_Main_Code_TUNING.c: 826: D_temp = 0;
  1454  000390  0E00               	movlw	0
  1455  000392  0101               	movlb	1	; () banked
  1456  000394  6F1C               	movwf	(main@D_temp+1)& (0+255),b
  1457  000396  0E00               	movlw	0
  1458  000398  6F1B               	movwf	main@D_temp& (0+255),b
  1459                           
  1460                           ;FastBuggy17_Main_Code_TUNING.c: 827: I_temp = 0;
  1461  00039A  0E00               	movlw	0
  1462  00039C  0101               	movlb	1	; () banked
  1463  00039E  6F1E               	movwf	(main@I_temp+1)& (0+255),b
  1464  0003A0  0E00               	movlw	0
  1465  0003A2  6F1D               	movwf	main@I_temp& (0+255),b
  1466                           
  1467                           ;FastBuggy17_Main_Code_TUNING.c: 829: stop_flag = 0;
  1468  0003A4  0E00               	movlw	0
  1469  0003A6  0101               	movlb	1	; () banked
  1470  0003A8  6F21               	movwf	main@stop_flag& (0+255),b
  1471                           
  1472                           ;FastBuggy17_Main_Code_TUNING.c: 830: find_line_flag = 0;
  1473  0003AA  0E00               	movlw	0
  1474  0003AC  0101               	movlb	1	; () banked
  1475  0003AE  6F08               	movwf	main@find_line_flag& (0+255),b
  1476                           
  1477                           ;FastBuggy17_Main_Code_TUNING.c: 831: line_end_flag = 0;
  1478  0003B0  0E00               	movlw	0
  1479  0003B2  0101               	movlb	1	; () banked
  1480  0003B4  6F09               	movwf	main@line_end_flag& (0+255),b
  1481                           
  1482                           ;FastBuggy17_Main_Code_TUNING.c: 832: wall_detected_flag = 0;
  1483  0003B6  0E00               	movlw	0
  1484  0003B8  0101               	movlb	1	; () banked
  1485  0003BA  6F18               	movwf	main@wall_detected_flag& (0+255),b
  1486                           
  1487                           ;FastBuggy17_Main_Code_TUNING.c: 833: send_battery_stats_flag = 0;
  1488  0003BC  0E00               	movlw	0
  1489  0003BE  0101               	movlb	1	; () banked
  1490  0003C0  6F0A               	movwf	main@send_battery_stats_flag& (0+255),b
  1491                           
  1492                           ;FastBuggy17_Main_Code_TUNING.c: 835: LATJ = 0x00;
  1493  0003C2  0E00               	movlw	0
  1494  0003C4  6E91               	movwf	3985,c	;volatile
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;FastBuggy17_Main_Code_TUNING.c: 837: FlashLEDS();
  1498  0003C6  EC4D  F010         	call	_FlashLEDS	;wreg free
  1499                           
  1500                           ;FastBuggy17_Main_Code_TUNING.c: 838: SendStatus(0x0A);
  1501  0003CA  0E0A               	movlw	10
  1502  0003CC  ECCA  F00E         	call	_SendStatus
  1503                           
  1504                           ;FastBuggy17_Main_Code_TUNING.c: 840: ResetAccumulatedCurrent();
  1505  0003D0  EC0B  F010         	call	_ResetAccumulatedCurrent	;wreg free
  1506                           
  1507                           ;FastBuggy17_Main_Code_TUNING.c: 842: ResetMillis0();
  1508  0003D4  EC38  F012         	call	_ResetMillis0	;wreg free
  1509                           
  1510                           ;FastBuggy17_Main_Code_TUNING.c: 843: ResetMillis1();
  1511  0003D8  EC33  F012         	call	_ResetMillis1	;wreg free
  1512                           
  1513                           ;FastBuggy17_Main_Code_TUNING.c: 844: ResetMillis2();
  1514  0003DC  EC4C  F012         	call	_ResetMillis2	;wreg free
  1515                           
  1516                           ;FastBuggy17_Main_Code_TUNING.c: 845: ResetMillis3();
  1517  0003E0  EC2E  F012         	call	_ResetMillis3	;wreg free
  1518                           
  1519                           ;FastBuggy17_Main_Code_TUNING.c: 847: GetDistance();
  1520  0003E4  EC91  F011         	call	_GetDistance	;wreg free
  1521                           
  1522                           ;FastBuggy17_Main_Code_TUNING.c: 849: SetUnipolar();
  1523  0003E8  EC62  F012         	call	_SetUnipolar	;wreg free
  1524                           
  1525                           ;FastBuggy17_Main_Code_TUNING.c: 850: StopMotors();
  1526  0003EC  ECF7  F010         	call	_StopMotors	;wreg free
  1527                           
  1528                           ;FastBuggy17_Main_Code_TUNING.c: 851: SetDirectionForward();
  1529  0003F0  EC65  F012         	call	_SetDirectionForward	;wreg free
  1530                           
  1531                           ;FastBuggy17_Main_Code_TUNING.c: 852: EnableMotors();
  1532  0003F4  EC71  F012         	call	_EnableMotors	;wreg free
  1533  0003F8  D000               	goto	l6887
  1534  0003FA                     l6887:
  1535                           
  1536                           ;FastBuggy17_Main_Code_TUNING.c: 857: ResetMillis1();
  1537  0003FA  EC33  F012         	call	_ResetMillis1	;wreg free
  1538                           
  1539                           ;FastBuggy17_Main_Code_TUNING.c: 860: GetSensorReadings();
  1540  0003FE  EC5B  F011         	call	_GetSensorReadings	;wreg free
  1541                           
  1542                           ;FastBuggy17_Main_Code_TUNING.c: 862: while(BusySensorAcq());
  1543  000402  D000               	goto	l6891
  1544  000404                     l6891:
  1545  000404  ECEB  F011         	call	_BusySensorAcq	;wreg free
  1546  000408  0900               	iorlw	0
  1547  00040A  A4D8               	btfss	status,2,c
  1548  00040C  D7FB               	goto	l6891
  1549                           
  1550                           ;FastBuggy17_Main_Code_TUNING.c: 863: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1551  00040E  0EAE               	movlw	low _sensor_readings_raw
  1552  000410  0100               	movlb	0	; () banked
  1553  000412  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1554  000414  0E00               	movlw	high _sensor_readings_raw
  1555  000416  0100               	movlb	0	; () banked
  1556  000418  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1557  00041A  0E9A               	movlw	low _sensor_offsets
  1558  00041C  0100               	movlb	0	; () banked
  1559  00041E  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1560  000420  0E00               	movlw	high _sensor_offsets
  1561  000422  0100               	movlb	0	; () banked
  1562  000424  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1563  000426  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  1564                           
  1565                           ;FastBuggy17_Main_Code_TUNING.c: 864: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1566  00042A  0EA4               	movlw	low _sensor_readings_normalised
  1567  00042C  0100               	movlb	0	; () banked
  1568  00042E  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1569  000430  0E00               	movlw	high _sensor_readings_normalised
  1570  000432  0100               	movlb	0	; () banked
  1571  000434  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1572  000436  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1573  00043A  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1574  00043E  ECED  F004         	call	_CalculateSensorStatuses	;wreg free
  1575                           
  1576                           ;FastBuggy17_Main_Code_TUNING.c: 866: sensor_sum = CalculateSensorSum(sensor_readings_no
      +                          rmalised);
  1577  000442  0EA4               	movlw	low _sensor_readings_normalised
  1578  000444  0100               	movlb	0	; () banked
  1579  000446  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  1580  000448  0E00               	movlw	high _sensor_readings_normalised
  1581  00044A  0100               	movlb	0	; () banked
  1582  00044C  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  1583  00044E  EC70  F005         	call	_CalculateSensorSum	;wreg free
  1584  000452  C0D4  F11F         	movff	?_CalculateSensorSum,main@sensor_sum
  1585  000456  C0D5  F120         	movff	?_CalculateSensorSum+1,main@sensor_sum+1
  1586                           
  1587                           ;FastBuggy17_Main_Code_TUNING.c: 867: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  1588  00045A  0E25               	movlw	low _sensor_statuses
  1589  00045C  0100               	movlb	0	; () banked
  1590  00045E  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  1591  000460  0E00               	movlw	high _sensor_statuses
  1592  000462  0100               	movlb	0	; () banked
  1593  000464  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  1594  000466  EC6F  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  1595  00046A  0101               	movlb	1	; () banked
  1596  00046C  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1597                           
  1598                           ; BSR set to: 1
  1599                           ;FastBuggy17_Main_Code_TUNING.c: 870: PID_error = (PID_set_point - sensor_sum) / 100;
  1600  00046E  C11F  F0E2         	movff	main@sensor_sum,??_main
  1601  000472  C120  F0E3         	movff	main@sensor_sum+1,??_main+1
  1602  000476  0100               	movlb	0	; () banked
  1603  000478  1FE2               	comf	??_main& (0+255),f,b
  1604  00047A  1FE3               	comf	(??_main+1)& (0+255),f,b
  1605  00047C  4BE2               	infsnz	??_main& (0+255),f,b
  1606  00047E  2BE3               	incf	(??_main+1)& (0+255),f,b
  1607  000480  0100               	movlb	0	; () banked
  1608  000482  51BA               	movf	_PID_set_point& (0+255),w,b
  1609  000484  0100               	movlb	0	; () banked
  1610  000486  25E2               	addwf	??_main& (0+255),w,b
  1611  000488  0100               	movlb	0	; () banked
  1612  00048A  6FCE               	movwf	___awdiv@dividend& (0+255),b
  1613  00048C  0100               	movlb	0	; () banked
  1614  00048E  51BB               	movf	(_PID_set_point+1)& (0+255),w,b
  1615  000490  0100               	movlb	0	; () banked
  1616  000492  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1617  000494  0100               	movlb	0	; () banked
  1618  000496  6FCF               	movwf	(___awdiv@dividend+1)& (0+255),b
  1619  000498  0E00               	movlw	0
  1620  00049A  0100               	movlb	0	; () banked
  1621  00049C  6FD1               	movwf	(___awdiv@divisor+1)& (0+255),b
  1622  00049E  0E64               	movlw	100
  1623  0004A0  6FD0               	movwf	___awdiv@divisor& (0+255),b
  1624  0004A2  EC53  F007         	call	___awdiv	;wreg free
  1625  0004A6  C0CE  F0B8         	movff	?___awdiv,_PID_error
  1626  0004AA  C0CF  F0B9         	movff	?___awdiv+1,_PID_error+1
  1627                           
  1628                           ;FastBuggy17_Main_Code_TUNING.c: 871: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1629  0004AE  C096  F0CE         	movff	_PID_Kp,___wmul@multiplier
  1630  0004B2  C097  F0CF         	movff	_PID_Kp+1,___wmul@multiplier+1
  1631  0004B6  C0B8  F0D0         	movff	_PID_error,___wmul@multiplicand
  1632  0004BA  C0B9  F0D1         	movff	_PID_error+1,___wmul@multiplicand+1
  1633  0004BE  EC1F  F00F         	call	___wmul	;wreg free
  1634  0004C2  C0CE  F0E2         	movff	?___wmul,??_main
  1635  0004C6  C0CF  F0E3         	movff	?___wmul+1,??_main+1
  1636  0004CA  C0B8  F0E4         	movff	_PID_error,??_main+2
  1637  0004CE  C0B9  F0E5         	movff	_PID_error+1,??_main+3
  1638  0004D2  0100               	movlb	0	; () banked
  1639  0004D4  1FE4               	comf	(??_main+2)& (0+255),f,b
  1640  0004D6  1FE5               	comf	(??_main+3)& (0+255),f,b
  1641  0004D8  4BE4               	infsnz	(??_main+2)& (0+255),f,b
  1642  0004DA  2BE5               	incf	(??_main+3)& (0+255),f,b
  1643  0004DC  0101               	movlb	1	; () banked
  1644  0004DE  511B               	movf	main@D_temp& (0+255),w,b
  1645  0004E0  0100               	movlb	0	; () banked
  1646  0004E2  25E4               	addwf	(??_main+2)& (0+255),w,b
  1647  0004E4  0100               	movlb	0	; () banked
  1648  0004E6  6FCE               	movwf	___wmul@multiplier& (0+255),b
  1649  0004E8  0101               	movlb	1	; () banked
  1650  0004EA  511C               	movf	(main@D_temp+1)& (0+255),w,b
  1651  0004EC  0100               	movlb	0	; () banked
  1652  0004EE  21E5               	addwfc	(??_main+3)& (0+255),w,b
  1653  0004F0  0100               	movlb	0	; () banked
  1654  0004F2  6FCF               	movwf	(___wmul@multiplier+1)& (0+255),b
  1655  0004F4  C092  F0D0         	movff	_PID_Kd,___wmul@multiplicand
  1656  0004F8  C093  F0D1         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1657  0004FC  EC1F  F00F         	call	___wmul	;wreg free
  1658  000500  0100               	movlb	0	; () banked
  1659  000502  51CE               	movf	?___wmul& (0+255),w,b
  1660  000504  0100               	movlb	0	; () banked
  1661  000506  27E2               	addwf	??_main& (0+255),f,b
  1662  000508  0100               	movlb	0	; () banked
  1663  00050A  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1664  00050C  0100               	movlb	0	; () banked
  1665  00050E  23E3               	addwfc	(??_main+1)& (0+255),f,b
  1666  000510  C094  F0CE         	movff	_PID_Ki,___wmul@multiplier
  1667  000514  C095  F0CF         	movff	_PID_Ki+1,___wmul@multiplier+1
  1668  000518  C11D  F0D0         	movff	main@I_temp,___wmul@multiplicand
  1669  00051C  C11E  F0D1         	movff	main@I_temp+1,___wmul@multiplicand+1
  1670  000520  EC1F  F00F         	call	___wmul	;wreg free
  1671  000524  0100               	movlb	0	; () banked
  1672  000526  51CE               	movf	?___wmul& (0+255),w,b
  1673  000528  0100               	movlb	0	; () banked
  1674  00052A  25E2               	addwf	??_main& (0+255),w,b
  1675  00052C  0100               	movlb	0	; () banked
  1676  00052E  6F98               	movwf	_PID_output& (0+255),b
  1677  000530  0100               	movlb	0	; () banked
  1678  000532  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1679  000534  0100               	movlb	0	; () banked
  1680  000536  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1681  000538  0100               	movlb	0	; () banked
  1682  00053A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;FastBuggy17_Main_Code_TUNING.c: 872: D_temp = PID_error;
  1686  00053C  C0B8  F11B         	movff	_PID_error,main@D_temp
  1687  000540  C0B9  F11C         	movff	_PID_error+1,main@D_temp+1
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;FastBuggy17_Main_Code_TUNING.c: 873: I_temp += PID_error;
  1691  000544  0100               	movlb	0	; () banked
  1692  000546  51B8               	movf	_PID_error& (0+255),w,b
  1693  000548  0101               	movlb	1	; () banked
  1694  00054A  271D               	addwf	main@I_temp& (0+255),f,b
  1695  00054C  0100               	movlb	0	; () banked
  1696  00054E  51B9               	movf	(_PID_error+1)& (0+255),w,b
  1697  000550  0101               	movlb	1	; () banked
  1698  000552  231E               	addwfc	(main@I_temp+1)& (0+255),f,b
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;FastBuggy17_Main_Code_TUNING.c: 875: SetDCMotorPID(PID_output);
  1702  000554  C098  F0D6         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1703  000558  C099  F0D7         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1704  00055C  ECCB  F008         	call	_SetDCMotorPID	;wreg free
  1705                           
  1706                           ;FastBuggy17_Main_Code_TUNING.c: 876: DisplaySensorStatuses(sensor_statuses);
  1707  000560  0E25               	movlw	low _sensor_statuses
  1708  000562  0100               	movlb	0	; () banked
  1709  000564  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1710  000566  0E00               	movlw	high _sensor_statuses
  1711  000568  0100               	movlb	0	; () banked
  1712  00056A  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1713  00056C  EC7C  F00D         	call	_DisplaySensorStatuses	;wreg free
  1714                           
  1715                           ;FastBuggy17_Main_Code_TUNING.c: 879: if((ReadMillis0() > 3) && (BusyDistanceAcq() == 0)
      +                           && (wall_detected_flag == 0)) {
  1716  000570  EC42  F012         	call	_ReadMillis0	;wreg free
  1717  000574  0100               	movlb	0	; () banked
  1718  000576  51CF               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1719  000578  E105               	bnz	u6130
  1720  00057A  0E04               	movlw	4
  1721  00057C  0100               	movlb	0	; () banked
  1722  00057E  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1723  000580  A0D8               	btfss	status,0,c
  1724  000582  D0C2               	goto	l6979
  1725  000584                     u6130:
  1726                           
  1727                           ; BSR set to: 0
  1728  000584  ECFB  F011         	call	_BusyDistanceAcq	;wreg free
  1729  000588  0900               	iorlw	0
  1730  00058A  A4D8               	btfss	status,2,c
  1731  00058C  D0BD               	goto	l6979
  1732  00058E  0101               	movlb	1	; () banked
  1733  000590  5118               	movf	main@wall_detected_flag& (0+255),w,b
  1734  000592  0101               	movlb	1	; () banked
  1735  000594  A4D8               	btfss	status,2,c
  1736  000596  D0B8               	goto	l6979
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;FastBuggy17_Main_Code_TUNING.c: 880: ResetMillis0();
  1740  000598  EC38  F012         	call	_ResetMillis0	;wreg free
  1741                           
  1742                           ;FastBuggy17_Main_Code_TUNING.c: 882: if((ReadEchoLength() < 1200)) {
  1743  00059C  EC47  F012         	call	_ReadEchoLength	;wreg free
  1744  0005A0  0EB0               	movlw	176
  1745  0005A2  0100               	movlb	0	; () banked
  1746  0005A4  5DCE               	subwf	?_ReadEchoLength& (0+255),w,b
  1747  0005A6  0E04               	movlw	4
  1748  0005A8  0100               	movlb	0	; () banked
  1749  0005AA  59CF               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1750  0005AC  B0D8               	btfsc	status,0,c
  1751  0005AE  D0A9               	goto	l6977
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;FastBuggy17_Main_Code_TUNING.c: 883: wall_detected_flag = 1;
  1755  0005B0  0E01               	movlw	1
  1756  0005B2  0101               	movlb	1	; () banked
  1757  0005B4  6F18               	movwf	main@wall_detected_flag& (0+255),b
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;FastBuggy17_Main_Code_TUNING.c: 887: SetDCMotorL(526);
  1761  0005B6  0E02               	movlw	2
  1762  0005B8  0100               	movlb	0	; () banked
  1763  0005BA  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1764  0005BC  0E0E               	movlw	14
  1765  0005BE  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1766  0005C0  EC12  F012         	call	_SetDCMotorL	;wreg free
  1767                           
  1768                           ;FastBuggy17_Main_Code_TUNING.c: 888: SetDCMotorR(526);
  1769  0005C4  0E02               	movlw	2
  1770  0005C6  0100               	movlb	0	; () banked
  1771  0005C8  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1772  0005CA  0E0E               	movlw	14
  1773  0005CC  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1774  0005CE  EC0B  F012         	call	_SetDCMotorR	;wreg free
  1775                           
  1776                           ;FastBuggy17_Main_Code_TUNING.c: 890: Delay10KTCYx(150);
  1777  0005D2  0E96               	movlw	150
  1778  0005D4  EC06  F011         	call	_Delay10KTCYx
  1779                           
  1780                           ;FastBuggy17_Main_Code_TUNING.c: 895: PID_error = 0;
  1781  0005D8  0E00               	movlw	0
  1782  0005DA  0100               	movlb	0	; () banked
  1783  0005DC  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1784  0005DE  0E00               	movlw	0
  1785  0005E0  6FB8               	movwf	_PID_error& (0+255),b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;FastBuggy17_Main_Code_TUNING.c: 896: PID_output = 0;
  1789  0005E2  0E00               	movlw	0
  1790  0005E4  0100               	movlb	0	; () banked
  1791  0005E6  6F99               	movwf	(_PID_output+1)& (0+255),b
  1792  0005E8  0E00               	movlw	0
  1793  0005EA  6F98               	movwf	_PID_output& (0+255),b
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;FastBuggy17_Main_Code_TUNING.c: 897: D_temp = 0;
  1797  0005EC  0E00               	movlw	0
  1798  0005EE  0101               	movlb	1	; () banked
  1799  0005F0  6F1C               	movwf	(main@D_temp+1)& (0+255),b
  1800  0005F2  0E00               	movlw	0
  1801  0005F4  6F1B               	movwf	main@D_temp& (0+255),b
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;FastBuggy17_Main_Code_TUNING.c: 898: I_temp = 0;
  1805  0005F6  0E00               	movlw	0
  1806  0005F8  0101               	movlb	1	; () banked
  1807  0005FA  6F1E               	movwf	(main@I_temp+1)& (0+255),b
  1808  0005FC  0E00               	movlw	0
  1809  0005FE  6F1D               	movwf	main@I_temp& (0+255),b
  1810                           
  1811                           ; BSR set to: 1
  1812                           ;FastBuggy17_Main_Code_TUNING.c: 900: SetForwardsMotorR();
  1813  000600  EC6D  F012         	call	_SetForwardsMotorR	;wreg free
  1814                           
  1815                           ;FastBuggy17_Main_Code_TUNING.c: 901: SetReverseMotorL();
  1816  000604  EC6B  F012         	call	_SetReverseMotorL	;wreg free
  1817                           
  1818                           ;FastBuggy17_Main_Code_TUNING.c: 903: SetDCMotorL(270);
  1819  000608  0E01               	movlw	1
  1820  00060A  0100               	movlb	0	; () banked
  1821  00060C  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1822  00060E  0E0E               	movlw	14
  1823  000610  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1824  000612  EC12  F012         	call	_SetDCMotorL	;wreg free
  1825                           
  1826                           ;FastBuggy17_Main_Code_TUNING.c: 904: SetDCMotorR(380);
  1827  000616  0E01               	movlw	1
  1828  000618  0100               	movlb	0	; () banked
  1829  00061A  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1830  00061C  0E7C               	movlw	124
  1831  00061E  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1832  000620  EC0B  F012         	call	_SetDCMotorR	;wreg free
  1833                           
  1834                           ;FastBuggy17_Main_Code_TUNING.c: 908: sensor_sum_discrete = 0;
  1835  000624  0E00               	movlw	0
  1836  000626  0101               	movlb	1	; () banked
  1837  000628  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1838                           
  1839                           ;FastBuggy17_Main_Code_TUNING.c: 910: Delay10KTCYx(150);
  1840  00062A  0E96               	movlw	150
  1841  00062C  EC06  F011         	call	_Delay10KTCYx
  1842                           
  1843                           ;FastBuggy17_Main_Code_TUNING.c: 914: GetSensorReadings();
  1844  000630  EC5B  F011         	call	_GetSensorReadings	;wreg free
  1845                           
  1846                           ;FastBuggy17_Main_Code_TUNING.c: 915: while(BusySensorAcq());
  1847  000634  D000               	goto	l6951
  1848  000636                     l6951:
  1849  000636  ECEB  F011         	call	_BusySensorAcq	;wreg free
  1850  00063A  0900               	iorlw	0
  1851  00063C  A4D8               	btfss	status,2,c
  1852  00063E  D7FB               	goto	l6951
  1853                           
  1854                           ;FastBuggy17_Main_Code_TUNING.c: 916: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1855  000640  0EAE               	movlw	low _sensor_readings_raw
  1856  000642  0100               	movlb	0	; () banked
  1857  000644  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1858  000646  0E00               	movlw	high _sensor_readings_raw
  1859  000648  0100               	movlb	0	; () banked
  1860  00064A  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1861  00064C  0E9A               	movlw	low _sensor_offsets
  1862  00064E  0100               	movlb	0	; () banked
  1863  000650  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1864  000652  0E00               	movlw	high _sensor_offsets
  1865  000654  0100               	movlb	0	; () banked
  1866  000656  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1867  000658  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  1868                           
  1869                           ;FastBuggy17_Main_Code_TUNING.c: 917: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1870  00065C  0EA4               	movlw	low _sensor_readings_normalised
  1871  00065E  0100               	movlb	0	; () banked
  1872  000660  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1873  000662  0E00               	movlw	high _sensor_readings_normalised
  1874  000664  0100               	movlb	0	; () banked
  1875  000666  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1876  000668  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1877  00066C  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1878  000670  ECED  F004         	call	_CalculateSensorStatuses	;wreg free
  1879                           
  1880                           ;FastBuggy17_Main_Code_TUNING.c: 919: while(sensor_statuses[2] != 1) {
  1881  000674  D02B               	goto	l6967
  1882  000676                     l6957:
  1883                           
  1884                           ;FastBuggy17_Main_Code_TUNING.c: 921: GetSensorReadings();
  1885  000676  EC5B  F011         	call	_GetSensorReadings	;wreg free
  1886                           
  1887                           ;FastBuggy17_Main_Code_TUNING.c: 922: while(BusySensorAcq());
  1888  00067A  D000               	goto	l6959
  1889  00067C                     l6959:
  1890  00067C  ECEB  F011         	call	_BusySensorAcq	;wreg free
  1891  000680  0900               	iorlw	0
  1892  000682  A4D8               	btfss	status,2,c
  1893  000684  D7FB               	goto	l6959
  1894                           
  1895                           ;FastBuggy17_Main_Code_TUNING.c: 923: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1896  000686  0EAE               	movlw	low _sensor_readings_raw
  1897  000688  0100               	movlb	0	; () banked
  1898  00068A  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1899  00068C  0E00               	movlw	high _sensor_readings_raw
  1900  00068E  0100               	movlb	0	; () banked
  1901  000690  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1902  000692  0E9A               	movlw	low _sensor_offsets
  1903  000694  0100               	movlb	0	; () banked
  1904  000696  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1905  000698  0E00               	movlw	high _sensor_offsets
  1906  00069A  0100               	movlb	0	; () banked
  1907  00069C  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1908  00069E  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  1909                           
  1910                           ;FastBuggy17_Main_Code_TUNING.c: 924: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1911  0006A2  0EA4               	movlw	low _sensor_readings_normalised
  1912  0006A4  0100               	movlb	0	; () banked
  1913  0006A6  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1914  0006A8  0E00               	movlw	high _sensor_readings_normalised
  1915  0006AA  0100               	movlb	0	; () banked
  1916  0006AC  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1917  0006AE  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1918  0006B2  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1919  0006B6  ECED  F004         	call	_CalculateSensorStatuses	;wreg free
  1920                           
  1921                           ;FastBuggy17_Main_Code_TUNING.c: 928: DisplaySensorStatuses(sensor_statuses);
  1922  0006BA  0E25               	movlw	low _sensor_statuses
  1923  0006BC  0100               	movlb	0	; () banked
  1924  0006BE  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1925  0006C0  0E00               	movlw	high _sensor_statuses
  1926  0006C2  0100               	movlb	0	; () banked
  1927  0006C4  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1928  0006C6  EC7C  F00D         	call	_DisplaySensorStatuses	;wreg free
  1929  0006CA  D000               	goto	l6967
  1930  0006CC                     l6967:
  1931  0006CC  0427               	decf	_sensor_statuses+2,w,c
  1932  0006CE  A4D8               	btfss	status,2,c
  1933  0006D0  D7D2               	goto	l6957
  1934                           
  1935                           ;FastBuggy17_Main_Code_TUNING.c: 929: }
  1936                           ;FastBuggy17_Main_Code_TUNING.c: 931: DisableMotors();
  1937  0006D2  EC73  F012         	call	_DisableMotors	;wreg free
  1938                           
  1939                           ;FastBuggy17_Main_Code_TUNING.c: 932: SetDCMotorL(526);
  1940  0006D6  0E02               	movlw	2
  1941  0006D8  0100               	movlb	0	; () banked
  1942  0006DA  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1943  0006DC  0E0E               	movlw	14
  1944  0006DE  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1945  0006E0  EC12  F012         	call	_SetDCMotorL	;wreg free
  1946                           
  1947                           ;FastBuggy17_Main_Code_TUNING.c: 933: SetDCMotorR(526);
  1948  0006E4  0E02               	movlw	2
  1949  0006E6  0100               	movlb	0	; () banked
  1950  0006E8  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1951  0006EA  0E0E               	movlw	14
  1952  0006EC  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1953  0006EE  EC0B  F012         	call	_SetDCMotorR	;wreg free
  1954                           
  1955                           ;FastBuggy17_Main_Code_TUNING.c: 934: SetDirectionForward();
  1956  0006F2  EC65  F012         	call	_SetDirectionForward	;wreg free
  1957                           
  1958                           ;FastBuggy17_Main_Code_TUNING.c: 935: EnableMotors();
  1959  0006F6  EC71  F012         	call	_EnableMotors	;wreg free
  1960                           
  1961                           ;FastBuggy17_Main_Code_TUNING.c: 937: Delay10KTCYx(150);
  1962  0006FA  0E96               	movlw	150
  1963  0006FC  EC06  F011         	call	_Delay10KTCYx
  1964                           
  1965                           ;FastBuggy17_Main_Code_TUNING.c: 941: }
  1966  000700  D06D               	goto	l7015
  1967  000702                     l6977:
  1968                           
  1969                           ;FastBuggy17_Main_Code_TUNING.c: 942: else {
  1970                           ;FastBuggy17_Main_Code_TUNING.c: 943: GetDistance();
  1971  000702  EC91  F011         	call	_GetDistance	;wreg free
  1972                           
  1973                           ;FastBuggy17_Main_Code_TUNING.c: 944: }
  1974                           ;FastBuggy17_Main_Code_TUNING.c: 945: }
  1975  000706  D06A               	goto	l7015
  1976  000708                     l6979:
  1977                           
  1978                           ;FastBuggy17_Main_Code_TUNING.c: 949: else if(sensor_sum_discrete == 0) {
  1979  000708  0101               	movlb	1	; () banked
  1980  00070A  5128               	movf	main@sensor_sum_discrete& (0+255),w,b
  1981  00070C  0101               	movlb	1	; () banked
  1982  00070E  A4D8               	btfss	status,2,c
  1983  000710  D047               	goto	l7001
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;FastBuggy17_Main_Code_TUNING.c: 950: ResetMillis2();
  1987  000712  EC4C  F012         	call	_ResetMillis2	;wreg free
  1988                           
  1989                           ;FastBuggy17_Main_Code_TUNING.c: 951: while(ReadMillis2() < 125);
  1990  000716  D000               	goto	l6983
  1991  000718                     l6983:
  1992  000718  EC51  F012         	call	_ReadMillis2	;wreg free
  1993  00071C  0100               	movlb	0	; () banked
  1994  00071E  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  1995  000720  E107               	bnz	l6985
  1996  000722  0E7D               	movlw	125
  1997  000724  0100               	movlb	0	; () banked
  1998  000726  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  1999  000728  B0D8               	btfsc	status,0,c
  2000  00072A  D002               	goto	l6985
  2001  00072C  D7F5               	goto	l6983
  2002  00072E  D000               	goto	l6985
  2003  000730                     l6985:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;FastBuggy17_Main_Code_TUNING.c: 953: GetSensorReadings();
  2007  000730  EC5B  F011         	call	_GetSensorReadings	;wreg free
  2008                           
  2009                           ;FastBuggy17_Main_Code_TUNING.c: 954: while(BusySensorAcq());
  2010  000734  D000               	goto	l6987
  2011  000736                     l6987:
  2012  000736  ECEB  F011         	call	_BusySensorAcq	;wreg free
  2013  00073A  0900               	iorlw	0
  2014  00073C  A4D8               	btfss	status,2,c
  2015  00073E  D7FB               	goto	l6987
  2016                           
  2017                           ;FastBuggy17_Main_Code_TUNING.c: 955: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  2018  000740  0EAE               	movlw	low _sensor_readings_raw
  2019  000742  0100               	movlb	0	; () banked
  2020  000744  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  2021  000746  0E00               	movlw	high _sensor_readings_raw
  2022  000748  0100               	movlb	0	; () banked
  2023  00074A  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  2024  00074C  0E9A               	movlw	low _sensor_offsets
  2025  00074E  0100               	movlb	0	; () banked
  2026  000750  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  2027  000752  0E00               	movlw	high _sensor_offsets
  2028  000754  0100               	movlb	0	; () banked
  2029  000756  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  2030  000758  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  2031                           
  2032                           ;FastBuggy17_Main_Code_TUNING.c: 956: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  2033  00075C  0EA4               	movlw	low _sensor_readings_normalised
  2034  00075E  0100               	movlb	0	; () banked
  2035  000760  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  2036  000762  0E00               	movlw	high _sensor_readings_normalised
  2037  000764  0100               	movlb	0	; () banked
  2038  000766  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  2039  000768  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  2040  00076C  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  2041  000770  ECED  F004         	call	_CalculateSensorStatuses	;wreg free
  2042                           
  2043                           ;FastBuggy17_Main_Code_TUNING.c: 958: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  2044  000774  0E25               	movlw	low _sensor_statuses
  2045  000776  0100               	movlb	0	; () banked
  2046  000778  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  2047  00077A  0E00               	movlw	high _sensor_statuses
  2048  00077C  0100               	movlb	0	; () banked
  2049  00077E  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  2050  000780  EC6F  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  2051  000784  0101               	movlb	1	; () banked
  2052  000786  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  2053                           
  2054                           ; BSR set to: 1
  2055                           ;FastBuggy17_Main_Code_TUNING.c: 960: if(sensor_sum_discrete == 0) {
  2056  000788  0101               	movlb	1	; () banked
  2057  00078A  5128               	movf	main@sensor_sum_discrete& (0+255),w,b
  2058  00078C  0101               	movlb	1	; () banked
  2059  00078E  A4D8               	btfss	status,2,c
  2060  000790  D025               	goto	l7015
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;FastBuggy17_Main_Code_TUNING.c: 961: stop_flag = 1;
  2064  000792  0E01               	movlw	1
  2065  000794  0101               	movlb	1	; () banked
  2066  000796  6F21               	movwf	main@stop_flag& (0+255),b
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;FastBuggy17_Main_Code_TUNING.c: 962: StopMotors();
  2070  000798  ECF7  F010         	call	_StopMotors	;wreg free
  2071                           
  2072                           ;FastBuggy17_Main_Code_TUNING.c: 963: break;
  2073  00079C  D031               	goto	l7023
  2074                           
  2075                           ;FastBuggy17_Main_Code_TUNING.c: 964: }
  2076                           ;FastBuggy17_Main_Code_TUNING.c: 966: }
  2077  00079E  D01E               	goto	l7015
  2078  0007A0                     l7001:
  2079                           
  2080                           ;FastBuggy17_Main_Code_TUNING.c: 969: else if(CommandAvailable() == 1) {
  2081  0007A0  EC20  F012         	call	_CommandAvailable	;wreg free
  2082  0007A4  06E8               	decf	wreg,f,c
  2083  0007A6  A4D8               	btfss	status,2,c
  2084  0007A8  D00B               	goto	l7009
  2085                           
  2086                           ;FastBuggy17_Main_Code_TUNING.c: 970: command_msg = GetCommand();
  2087  0007AA  EC5A  F012         	call	_GetCommand	;wreg free
  2088  0007AE  0101               	movlb	1	; () banked
  2089  0007B0  6F17               	movwf	main@command_msg& (0+255),b
  2090                           
  2091                           ; BSR set to: 1
  2092                           ;FastBuggy17_Main_Code_TUNING.c: 971: if(command_msg == 0x04) {
  2093  0007B2  0E04               	movlw	4
  2094  0007B4  0101               	movlb	1	; () banked
  2095  0007B6  1917               	xorwf	main@command_msg& (0+255),w,b
  2096  0007B8  A4D8               	btfss	status,2,c
  2097  0007BA  D010               	goto	l7015
  2098  0007BC  D00B               	goto	l7013
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;FastBuggy17_Main_Code_TUNING.c: 973: }
  2102                           ;FastBuggy17_Main_Code_TUNING.c: 975: }
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;FastBuggy17_Main_Code_TUNING.c: 972: stop_flag = 1;
  2106  0007BE  D00E               	goto	l7015
  2107  0007C0                     l7009:
  2108                           
  2109                           ;FastBuggy17_Main_Code_TUNING.c: 978: else if(PB1pressed() == 1 || PB2pressed() == 1) {
  2110  0007C0  EC4D  F00D         	call	_PB1pressed	;wreg free
  2111  0007C4  06E8               	decf	wreg,f,c
  2112  0007C6  B4D8               	btfsc	status,2,c
  2113  0007C8  D005               	goto	l7013
  2114  0007CA  ECEF  F00C         	call	_PB2pressed	;wreg free
  2115  0007CE  06E8               	decf	wreg,f,c
  2116  0007D0  A4D8               	btfss	status,2,c
  2117  0007D2  D004               	goto	l7015
  2118  0007D4                     l7013:
  2119                           
  2120                           ;FastBuggy17_Main_Code_TUNING.c: 979: stop_flag = 1;
  2121  0007D4  0E01               	movlw	1
  2122  0007D6  0101               	movlb	1	; () banked
  2123  0007D8  6F21               	movwf	main@stop_flag& (0+255),b
  2124                           
  2125                           ; BSR set to: 1
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;FastBuggy17_Main_Code_TUNING.c: 980: }
  2129                           ;FastBuggy17_Main_Code_TUNING.c: 1012: while(ReadMillis1() <= 0);
  2130                           
  2131                           ; BSR set to: 1
  2132                           
  2133                           ; BSR set to: 1
  2134                           
  2135                           ; BSR set to: 1
  2136  0007DA  D000               	goto	l7015
  2137  0007DC                     l7015:
  2138  0007DC  EC3D  F012         	call	_ReadMillis1	;wreg free
  2139  0007E0  0100               	movlb	0	; () banked
  2140  0007E2  51CE               	movf	?_ReadMillis1& (0+255),w,b
  2141  0007E4  0100               	movlb	0	; () banked
  2142  0007E6  11CF               	iorwf	(?_ReadMillis1+1)& (0+255),w,b
  2143  0007E8  B4D8               	btfsc	status,2,c
  2144  0007EA  D7F8               	goto	l7015
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;FastBuggy17_Main_Code_TUNING.c: 1014: if(stop_flag == 1) {
  2148                           
  2149                           ; BSR set to: 0
  2150  0007EC  0101               	movlb	1	; () banked
  2151  0007EE  0521               	decf	main@stop_flag& (0+255),w,b
  2152  0007F0  A4D8               	btfss	status,2,c
  2153  0007F2  D603               	goto	l6887
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;FastBuggy17_Main_Code_TUNING.c: 1015: StopMotors();
  2157  0007F4  ECF7  F010         	call	_StopMotors	;wreg free
  2158                           
  2159                           ;FastBuggy17_Main_Code_TUNING.c: 1016: DisableMotors();
  2160  0007F8  EC73  F012         	call	_DisableMotors	;wreg free
  2161                           
  2162                           ;FastBuggy17_Main_Code_TUNING.c: 1017: break;
  2163  0007FC  D001               	goto	l7023
  2164  0007FE  D5FD               	goto	l6887
  2165  000800                     l7023:
  2166                           
  2167                           ;FastBuggy17_Main_Code_TUNING.c: 1018: }
  2168                           ;FastBuggy17_Main_Code_TUNING.c: 1020: }
  2169                           ;FastBuggy17_Main_Code_TUNING.c: 1023: FlashLEDS();
  2170  000800  EC4D  F010         	call	_FlashLEDS	;wreg free
  2171                           
  2172                           ;FastBuggy17_Main_Code_TUNING.c: 1024: LATJ = 0x03;
  2173  000804  0E03               	movlw	3
  2174  000806  6E91               	movwf	3985,c	;volatile
  2175                           
  2176                           ;FastBuggy17_Main_Code_TUNING.c: 1025: SendStatus(0x05);
  2177  000808  0E05               	movlw	5
  2178  00080A  ECCA  F00E         	call	_SendStatus
  2179                           
  2180                           ;FastBuggy17_Main_Code_TUNING.c: 1027: Kp_stored = ReadIntEEPROM(0x0010);
  2181  00080E  0E00               	movlw	0
  2182  000810  0100               	movlb	0	; () banked
  2183  000812  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2184  000814  0E10               	movlw	16
  2185  000816  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2186  000818  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  2187  00081C  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  2188  000820  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2189                           
  2190                           ;FastBuggy17_Main_Code_TUNING.c: 1028: Kd_stored = ReadIntEEPROM(0x0012);
  2191  000824  0E00               	movlw	0
  2192  000826  0100               	movlb	0	; () banked
  2193  000828  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2194  00082A  0E12               	movlw	18
  2195  00082C  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2196  00082E  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  2197  000832  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  2198  000836  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2199                           
  2200                           ;FastBuggy17_Main_Code_TUNING.c: 1029: Ki_stored = ReadIntEEPROM(0x0014);
  2201  00083A  0E00               	movlw	0
  2202  00083C  0100               	movlb	0	; () banked
  2203  00083E  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2204  000840  0E14               	movlw	20
  2205  000842  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2206  000844  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  2207  000848  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  2208  00084C  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2209                           
  2210                           ;FastBuggy17_Main_Code_TUNING.c: 1031: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_stor
      +                          ed);
  2211  000850  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2212  000854  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2213  000858  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2214  00085C  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2215  000860  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2216  000864  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2217  000868  ECB5  F00B         	call	_SendStoredPIDValues	;wreg free
  2218                           
  2219                           ;FastBuggy17_Main_Code_TUNING.c: 1033: SetPIDValues();
  2220  00086C  EC49  F004         	call	_SetPIDValues	;wreg free
  2221                           
  2222                           ;FastBuggy17_Main_Code_TUNING.c: 1035: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2223  000870  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2224  000874  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2225  000878  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2226  00087C  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2227  000880  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2228  000884  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2229  000888  EC1F  F00C         	call	_SendCurrentPIDValues	;wreg free
  2230  00088C  D55B               	goto	l6845
  2231  00088E  EF76  F000         	goto	start
  2232  000892                     __end_of_main:
  2233                           	opt stack 0
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function ___awdiv *****************
  2239 ;; Defined at:
  2240 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  dividend        2   16[BANK0 ] int 
  2243 ;;  divisor         2   18[BANK0 ] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  quotient        2   22[BANK0 ] int 
  2246 ;;  sign            1   21[BANK0 ] unsigned char 
  2247 ;;  counter         1   20[BANK0 ] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   16[BANK0 ] int 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        8 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    7
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text1
  2272  000EA6                     __ptext1:
  2273                           	opt stack 0
  2274  000EA6                     ___awdiv:
  2275                           	opt stack 23
  2276                           
  2277                           ;incstack = 0
  2278  000EA6  0E00               	movlw	0
  2279  000EA8  0100               	movlb	0	; () banked
  2280  000EAA  6FD3               	movwf	___awdiv@sign& (0+255),b
  2281                           
  2282                           ; BSR set to: 0
  2283  000EAC  0100               	movlb	0	; () banked
  2284  000EAE  AFD1               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2285  000EB0  D009               	goto	l6539
  2286                           
  2287                           ; BSR set to: 0
  2288  000EB2  0100               	movlb	0	; () banked
  2289  000EB4  6DD0               	negf	___awdiv@divisor& (0+255),b
  2290  000EB6  1FD1               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2291  000EB8  B0D8               	btfsc	status,0,c
  2292  000EBA  2BD1               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2293                           
  2294                           ; BSR set to: 0
  2295  000EBC  0E01               	movlw	1
  2296  000EBE  0100               	movlb	0	; () banked
  2297  000EC0  6FD3               	movwf	___awdiv@sign& (0+255),b
  2298  000EC2  D000               	goto	l6539
  2299  000EC4                     l6539:
  2300                           
  2301                           ; BSR set to: 0
  2302  000EC4  0100               	movlb	0	; () banked
  2303  000EC6  AFCF               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2304  000EC8  D009               	goto	l6545
  2305                           
  2306                           ; BSR set to: 0
  2307  000ECA  0100               	movlb	0	; () banked
  2308  000ECC  6DCE               	negf	___awdiv@dividend& (0+255),b
  2309  000ECE  1FCF               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2310  000ED0  B0D8               	btfsc	status,0,c
  2311  000ED2  2BCF               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2312                           
  2313                           ; BSR set to: 0
  2314  000ED4  0E01               	movlw	1
  2315  000ED6  0100               	movlb	0	; () banked
  2316  000ED8  1BD3               	xorwf	___awdiv@sign& (0+255),f,b
  2317  000EDA  D000               	goto	l6545
  2318  000EDC                     l6545:
  2319                           
  2320                           ; BSR set to: 0
  2321  000EDC  0E00               	movlw	0
  2322  000EDE  0100               	movlb	0	; () banked
  2323  000EE0  6FD5               	movwf	(___awdiv@quotient+1)& (0+255),b
  2324  000EE2  0E00               	movlw	0
  2325  000EE4  6FD4               	movwf	___awdiv@quotient& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328  000EE6  0100               	movlb	0	; () banked
  2329  000EE8  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2330  000EEA  0100               	movlb	0	; () banked
  2331  000EEC  11D1               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2332  000EEE  B4D8               	btfsc	status,2,c
  2333  000EF0  D031               	goto	l6567
  2334                           
  2335                           ; BSR set to: 0
  2336  000EF2  0E01               	movlw	1
  2337  000EF4  0100               	movlb	0	; () banked
  2338  000EF6  6FD2               	movwf	___awdiv@counter& (0+255),b
  2339  000EF8  D007               	goto	l6553
  2340  000EFA                     l6551:
  2341                           
  2342                           ; BSR set to: 0
  2343  000EFA  0100               	movlb	0	; () banked
  2344  000EFC  90D8               	bcf	status,0,c
  2345  000EFE  37D0               	rlcf	___awdiv@divisor& (0+255),f,b
  2346  000F00  37D1               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2347  000F02  0100               	movlb	0	; () banked
  2348  000F04  2BD2               	incf	___awdiv@counter& (0+255),f,b
  2349  000F06  D000               	goto	l6553
  2350  000F08                     l6553:
  2351                           
  2352                           ; BSR set to: 0
  2353  000F08  0100               	movlb	0	; () banked
  2354  000F0A  BFD1               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2355  000F0C  D002               	goto	l6555
  2356  000F0E  D7F5               	goto	l6551
  2357                           
  2358                           ; BSR set to: 0
  2359  000F10  D000               	goto	l6555
  2360  000F12                     l6555:
  2361                           
  2362                           ; BSR set to: 0
  2363  000F12  0100               	movlb	0	; () banked
  2364  000F14  90D8               	bcf	status,0,c
  2365  000F16  37D4               	rlcf	___awdiv@quotient& (0+255),f,b
  2366  000F18  37D5               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2367                           
  2368                           ; BSR set to: 0
  2369  000F1A  0100               	movlb	0	; () banked
  2370  000F1C  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2371  000F1E  0100               	movlb	0	; () banked
  2372  000F20  5DCE               	subwf	___awdiv@dividend& (0+255),w,b
  2373  000F22  0100               	movlb	0	; () banked
  2374  000F24  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2375  000F26  0100               	movlb	0	; () banked
  2376  000F28  59CF               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2377  000F2A  A0D8               	btfss	status,0,c
  2378  000F2C  D00B               	goto	l6563
  2379                           
  2380                           ; BSR set to: 0
  2381  000F2E  0100               	movlb	0	; () banked
  2382  000F30  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2383  000F32  0100               	movlb	0	; () banked
  2384  000F34  5FCE               	subwf	___awdiv@dividend& (0+255),f,b
  2385  000F36  0100               	movlb	0	; () banked
  2386  000F38  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2387  000F3A  0100               	movlb	0	; () banked
  2388  000F3C  5BCF               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2389                           
  2390                           ; BSR set to: 0
  2391  000F3E  0100               	movlb	0	; () banked
  2392  000F40  81D4               	bsf	___awdiv@quotient& (0+255),0,b
  2393  000F42  D000               	goto	l6563
  2394  000F44                     l6563:
  2395                           
  2396                           ; BSR set to: 0
  2397  000F44  0100               	movlb	0	; () banked
  2398  000F46  90D8               	bcf	status,0,c
  2399  000F48  33D1               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2400  000F4A  33D0               	rrcf	___awdiv@divisor& (0+255),f,b
  2401                           
  2402                           ; BSR set to: 0
  2403  000F4C  0100               	movlb	0	; () banked
  2404  000F4E  2FD2               	decfsz	___awdiv@counter& (0+255),f,b
  2405  000F50  D7E0               	goto	l6555
  2406                           
  2407                           ; BSR set to: 0
  2408  000F52  D000               	goto	l6567
  2409  000F54                     l6567:
  2410                           
  2411                           ; BSR set to: 0
  2412  000F54  0100               	movlb	0	; () banked
  2413  000F56  51D3               	movf	___awdiv@sign& (0+255),w,b
  2414  000F58  0100               	movlb	0	; () banked
  2415  000F5A  B4D8               	btfsc	status,2,c
  2416  000F5C  D006               	goto	l6571
  2417                           
  2418                           ; BSR set to: 0
  2419  000F5E  0100               	movlb	0	; () banked
  2420  000F60  6DD4               	negf	___awdiv@quotient& (0+255),b
  2421  000F62  1FD5               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2422  000F64  B0D8               	btfsc	status,0,c
  2423  000F66  2BD5               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2424  000F68  D000               	goto	l6571
  2425  000F6A                     l6571:
  2426                           
  2427                           ; BSR set to: 0
  2428  000F6A  C0D4  F0CE         	movff	___awdiv@quotient,?___awdiv
  2429  000F6E  C0D5  F0CF         	movff	___awdiv@quotient+1,?___awdiv+1
  2430  000F72  D000               	goto	l1441
  2431  000F74                     l1441:
  2432                           
  2433                           ; BSR set to: 0
  2434  000F74  0012               	return		;funcret
  2435  000F76                     __end_of___awdiv:
  2436                           	opt stack 0
  2437                           postinc0	equ	0xFEE
  2438                           wreg	equ	0xFE8
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _StopMotors *****************
  2442 ;; Defined at:
  2443 ;;		line 128 in file "Motors.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;		None               void
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    9
  2464 ;; This function calls:
  2465 ;;		_SetDCMotorL
  2466 ;;		_SetDCMotorR
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text2
  2473  0021EE                     __ptext2:
  2474                           	opt stack 0
  2475  0021EE                     _StopMotors:
  2476                           	opt stack 21
  2477                           
  2478                           ;Motors.c: 130: SetDCMotorR(526);
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;incstack = 0
  2482  0021EE  0E02               	movlw	2
  2483  0021F0  0100               	movlb	0	; () banked
  2484  0021F2  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2485  0021F4  0E0E               	movlw	14
  2486  0021F6  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2487  0021F8  EC0B  F012         	call	_SetDCMotorR	;wreg free
  2488                           
  2489                           ;Motors.c: 131: SetDCMotorL(526);
  2490  0021FC  0E02               	movlw	2
  2491  0021FE  0100               	movlb	0	; () banked
  2492  002200  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2493  002202  0E0E               	movlw	14
  2494  002204  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2495  002206  EC12  F012         	call	_SetDCMotorL	;wreg free
  2496  00220A  0012               	return		;funcret
  2497  00220C                     __end_of_StopMotors:
  2498                           	opt stack 0
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           status	equ	0xFD8
  2502                           
  2503 ;; *************** function _SetUnipolar *****************
  2504 ;; Defined at:
  2505 ;;		line 121 in file "Motors.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		None
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    7
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text3
  2534  0024C4                     __ptext3:
  2535                           	opt stack 0
  2536  0024C4                     _SetUnipolar:
  2537                           	opt stack 23
  2538                           
  2539                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2540                           
  2541                           ;incstack = 0
  2542  0024C4  908C               	bcf	3980,0,c	;volatile
  2543                           
  2544                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2545  0024C6  948C               	bcf	3980,2,c	;volatile
  2546  0024C8  0012               	return		;funcret
  2547  0024CA                     __end_of_SetUnipolar:
  2548                           	opt stack 0
  2549                           postinc0	equ	0xFEE
  2550                           wreg	equ	0xFE8
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function _SetReverseMotorL *****************
  2554 ;; Defined at:
  2555 ;;		line 96 in file "Motors.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		None
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    7
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text4
  2584  0024D6                     __ptext4:
  2585                           	opt stack 0
  2586  0024D6                     _SetReverseMotorL:
  2587                           	opt stack 23
  2588                           
  2589                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2590                           
  2591                           ;incstack = 0
  2592  0024D6  968C               	bcf	3980,3,c	;volatile
  2593  0024D8  0012               	return		;funcret
  2594  0024DA                     __end_of_SetReverseMotorL:
  2595                           	opt stack 0
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _SetForwardsMotorR *****************
  2601 ;; Defined at:
  2602 ;;		line 78 in file "Motors.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;		None               void
  2609 ;; Registers used:
  2610 ;;		None
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    7
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text5
  2631  0024DA                     __ptext5:
  2632                           	opt stack 0
  2633  0024DA                     _SetForwardsMotorR:
  2634                           	opt stack 23
  2635                           
  2636                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2637                           
  2638                           ;incstack = 0
  2639  0024DA  828C               	bsf	3980,1,c	;volatile
  2640  0024DC  0012               	return		;funcret
  2641  0024DE                     __end_of_SetForwardsMotorR:
  2642                           	opt stack 0
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function _SetDirectionForward *****************
  2648 ;; Defined at:
  2649 ;;		line 64 in file "Motors.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		None
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    7
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text6
  2678  0024CA                     __ptext6:
  2679                           	opt stack 0
  2680  0024CA                     _SetDirectionForward:
  2681                           	opt stack 23
  2682                           
  2683                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2684                           
  2685                           ;incstack = 0
  2686  0024CA  868C               	bsf	3980,3,c	;volatile
  2687                           
  2688                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2689  0024CC  828C               	bsf	3980,1,c	;volatile
  2690  0024CE  0012               	return		;funcret
  2691  0024D0                     __end_of_SetDirectionForward:
  2692                           	opt stack 0
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           status	equ	0xFD8
  2696                           
  2697 ;; *************** function _SetDCMotorPID *****************
  2698 ;; Defined at:
  2699 ;;		line 47 in file "Motors.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  PIDoutput       2   24[BANK0 ] int 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;		None               void
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;Total ram usage:        4 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    9
  2720 ;; This function calls:
  2721 ;;		_SetDCMotorL
  2722 ;;		_SetDCMotorR
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text7
  2729  001196                     __ptext7:
  2730                           	opt stack 0
  2731  001196                     _SetDCMotorPID:
  2732                           	opt stack 21
  2733                           
  2734                           ;Motors.c: 49: if(PIDoutput < 0) {
  2735                           
  2736                           ;incstack = 0
  2737  001196  0100               	movlb	0	; () banked
  2738  001198  AFD7               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2739  00119A  D01D               	goto	l6287
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;Motors.c: 50: SetDCMotorL(280 - PIDoutput);
  2743  00119C  C0D6  F0D8         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2744  0011A0  C0D7  F0D9         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2745  0011A4  0100               	movlb	0	; () banked
  2746  0011A6  1FD8               	comf	??_SetDCMotorPID& (0+255),f,b
  2747  0011A8  1FD9               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2748  0011AA  4BD8               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2749  0011AC  2BD9               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2750  0011AE  0E18               	movlw	24
  2751  0011B0  0100               	movlb	0	; () banked
  2752  0011B2  25D8               	addwf	??_SetDCMotorPID& (0+255),w,b
  2753  0011B4  0100               	movlb	0	; () banked
  2754  0011B6  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2755  0011B8  0E01               	movlw	1
  2756  0011BA  0100               	movlb	0	; () banked
  2757  0011BC  21D9               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2758  0011BE  0100               	movlb	0	; () banked
  2759  0011C0  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2760  0011C2  EC12  F012         	call	_SetDCMotorL	;wreg free
  2761                           
  2762                           ;Motors.c: 51: SetDCMotorR(280);
  2763  0011C6  0E01               	movlw	1
  2764  0011C8  0100               	movlb	0	; () banked
  2765  0011CA  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2766  0011CC  0E18               	movlw	24
  2767  0011CE  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2768  0011D0  EC0B  F012         	call	_SetDCMotorR	;wreg free
  2769                           
  2770                           ;Motors.c: 52: }
  2771  0011D4  D033               	goto	l128
  2772  0011D6                     l6287:
  2773                           
  2774                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2775  0011D6  0100               	movlb	0	; () banked
  2776  0011D8  BFD7               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2777  0011DA  D01B               	goto	l6291
  2778  0011DC  0100               	movlb	0	; () banked
  2779  0011DE  51D7               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2780  0011E0  E104               	bnz	u5360
  2781  0011E2  0100               	movlb	0	; () banked
  2782  0011E4  05D6               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2783  0011E6  A0D8               	btfss	status,0,c
  2784  0011E8  D014               	goto	l6291
  2785  0011EA                     u5360:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;Motors.c: 54: SetDCMotorL(280);
  2789  0011EA  0E01               	movlw	1
  2790  0011EC  0100               	movlb	0	; () banked
  2791  0011EE  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2792  0011F0  0E18               	movlw	24
  2793  0011F2  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2794  0011F4  EC12  F012         	call	_SetDCMotorL	;wreg free
  2795                           
  2796                           ;Motors.c: 55: SetDCMotorR(280 + PIDoutput);
  2797  0011F8  0E18               	movlw	24
  2798  0011FA  0100               	movlb	0	; () banked
  2799  0011FC  25D6               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2800  0011FE  0100               	movlb	0	; () banked
  2801  001200  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2802  001202  0E01               	movlw	1
  2803  001204  0100               	movlb	0	; () banked
  2804  001206  21D7               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2805  001208  0100               	movlb	0	; () banked
  2806  00120A  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2807  00120C  EC0B  F012         	call	_SetDCMotorR	;wreg free
  2808                           
  2809                           ;Motors.c: 56: }
  2810  001210  D015               	goto	l128
  2811  001212                     l6291:
  2812                           
  2813                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2814  001212  0100               	movlb	0	; () banked
  2815  001214  51D6               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2816  001216  0100               	movlb	0	; () banked
  2817  001218  11D7               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2818  00121A  A4D8               	btfss	status,2,c
  2819  00121C  D00F               	goto	l128
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;Motors.c: 58: SetDCMotorL(280);
  2823  00121E  0E01               	movlw	1
  2824  001220  0100               	movlb	0	; () banked
  2825  001222  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2826  001224  0E18               	movlw	24
  2827  001226  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2828  001228  EC12  F012         	call	_SetDCMotorL	;wreg free
  2829                           
  2830                           ;Motors.c: 59: SetDCMotorR(280);
  2831  00122C  0E01               	movlw	1
  2832  00122E  0100               	movlb	0	; () banked
  2833  001230  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2834  001232  0E18               	movlw	24
  2835  001234  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2836  001236  EC0B  F012         	call	_SetDCMotorR	;wreg free
  2837  00123A  D000               	goto	l128
  2838  00123C                     l128:
  2839  00123C  0012               	return		;funcret
  2840  00123E                     __end_of_SetDCMotorPID:
  2841                           	opt stack 0
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _SetDCMotorR *****************
  2847 ;; Defined at:
  2848 ;;		line 19 in file "Motors.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        2 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    8
  2869 ;; This function calls:
  2870 ;;		_SetDCPWM4
  2871 ;; This function is called by:
  2872 ;;		_SetDCMotorPID
  2873 ;;		_StopMotors
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text8
  2879  002416                     __ptext8:
  2880                           	opt stack 0
  2881  002416                     _SetDCMotorR:
  2882                           	opt stack 21
  2883                           
  2884                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2885                           
  2886                           ;incstack = 0
  2887  002416  C0D4  F0CE         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2888  00241A  C0D5  F0CF         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2889  00241E  ECC9  F00D         	call	_SetDCPWM4	;wreg free
  2890  002422  0012               	return		;funcret
  2891  002424                     __end_of_SetDCMotorR:
  2892                           	opt stack 0
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           status	equ	0xFD8
  2896                           
  2897 ;; *************** function _SetDCPWM4 *****************
  2898 ;; Defined at:
  2899 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    7
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_SetDCMotorR
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text9
  2928  001B92                     __ptext9:
  2929                           	opt stack 0
  2930  001B92                     _SetDCPWM4:
  2931                           	opt stack 21
  2932                           
  2933                           ;incstack = 0
  2934  001B92  C0CE  F0D0         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2935  001B96  C0CF  F0D1         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2936  001B9A  0E06               	movlw	6
  2937  001B9C                     u4775:
  2938  001B9C  90D8               	bcf	status,0,c
  2939  001B9E  0100               	movlb	0	; () banked
  2940  001BA0  37D0               	rlcf	??_SetDCPWM4& (0+255),f,b
  2941  001BA2  37D1               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2942  001BA4  2EE8               	decfsz	wreg,f,c
  2943  001BA6  D7FA               	goto	u4775
  2944  001BA8  C0D0  F0D2         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2945  001BAC  C0D1  F0D3         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2946                           
  2947                           ; BSR set to: 0
  2948  001BB0  C0D3  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2949  001BB4  C0D2  F0D0         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2950  001BB8  0100               	movlb	0	; () banked
  2951  001BBA  90D8               	bcf	status,0,c
  2952  001BBC  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  2953  001BBE  0100               	movlb	0	; () banked
  2954  001BC0  90D8               	bcf	status,0,c
  2955  001BC2  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  2956  001BC4  0E30               	movlw	48
  2957  001BC6  0100               	movlb	0	; () banked
  2958  001BC8  17D0               	andwf	??_SetDCPWM4& (0+255),f,b
  2959  001BCA  5073               	movf	3955,w,c	;volatile
  2960  001BCC  0BCF               	andlw	207
  2961  001BCE  0100               	movlb	0	; () banked
  2962  001BD0  11D0               	iorwf	??_SetDCPWM4& (0+255),w,b
  2963  001BD2  6E73               	movwf	3955,c	;volatile
  2964                           
  2965                           ; BSR set to: 0
  2966  001BD4  0012               	return		;funcret
  2967  001BD6                     __end_of_SetDCPWM4:
  2968                           	opt stack 0
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _SetDCMotorL *****************
  2974 ;; Defined at:
  2975 ;;		line 6 in file "Motors.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    8
  2996 ;; This function calls:
  2997 ;;		_SetDCPWM5
  2998 ;; This function is called by:
  2999 ;;		_SetDCMotorPID
  3000 ;;		_StopMotors
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text10
  3006  002424                     __ptext10:
  3007                           	opt stack 0
  3008  002424                     _SetDCMotorL:
  3009                           	opt stack 21
  3010                           
  3011                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;incstack = 0
  3015  002424  C0D4  F0CE         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3016  002428  C0D5  F0CF         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3017  00242C  ECEB  F00D         	call	_SetDCPWM5	;wreg free
  3018  002430  0012               	return		;funcret
  3019  002432                     __end_of_SetDCMotorL:
  3020                           	opt stack 0
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _SetDCPWM5 *****************
  3026 ;; Defined at:
  3027 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        6 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    7
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_SetDCMotorL
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text11
  3056  001BD6                     __ptext11:
  3057                           	opt stack 0
  3058  001BD6                     _SetDCPWM5:
  3059                           	opt stack 21
  3060                           
  3061                           ;incstack = 0
  3062  001BD6  C0CE  F0D0         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3063  001BDA  C0CF  F0D1         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3064  001BDE  0E06               	movlw	6
  3065  001BE0                     u4765:
  3066  001BE0  90D8               	bcf	status,0,c
  3067  001BE2  0100               	movlb	0	; () banked
  3068  001BE4  37D0               	rlcf	??_SetDCPWM5& (0+255),f,b
  3069  001BE6  37D1               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3070  001BE8  2EE8               	decfsz	wreg,f,c
  3071  001BEA  D7FA               	goto	u4765
  3072  001BEC  C0D0  F0D2         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3073  001BF0  C0D1  F0D3         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3074                           
  3075                           ; BSR set to: 0
  3076  001BF4  C0D3  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3077  001BF8  C0D2  F0D0         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3078  001BFC  0100               	movlb	0	; () banked
  3079  001BFE  90D8               	bcf	status,0,c
  3080  001C00  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3081  001C02  0100               	movlb	0	; () banked
  3082  001C04  90D8               	bcf	status,0,c
  3083  001C06  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3084  001C08  0E30               	movlw	48
  3085  001C0A  0100               	movlb	0	; () banked
  3086  001C0C  17D0               	andwf	??_SetDCPWM5& (0+255),f,b
  3087  001C0E  5070               	movf	3952,w,c	;volatile
  3088  001C10  0BCF               	andlw	207
  3089  001C12  0100               	movlb	0	; () banked
  3090  001C14  11D0               	iorwf	??_SetDCPWM5& (0+255),w,b
  3091  001C16  6E70               	movwf	3952,c	;volatile
  3092                           
  3093                           ; BSR set to: 0
  3094  001C18  0012               	return		;funcret
  3095  001C1A                     __end_of_SetDCPWM5:
  3096                           	opt stack 0
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _SendThreshold *****************
  3102 ;; Defined at:
  3103 ;;		line 186 in file "Wireless.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  sensor_thres    2   24[BANK0 ] PTR const int 
  3106 ;;		 -> sensor_threshold(2), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;Total ram usage:        4 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    9
  3125 ;; This function calls:
  3126 ;;		_BusyTx
  3127 ;;		_FlushTxBuf
  3128 ;;		_PutCharTxBuf
  3129 ;;		_StartTx
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text12
  3136  001692                     __ptext12:
  3137                           	opt stack 0
  3138  001692                     _SendThreshold:
  3139                           	opt stack 21
  3140                           
  3141                           ;Wireless.c: 187: while(BusyTx());
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;incstack = 0
  3145  001692  D000               	goto	l6371
  3146  001694                     l6371:
  3147  001694  ECE3  F011         	call	_BusyTx	;wreg free
  3148  001698  0900               	iorlw	0
  3149  00169A  A4D8               	btfss	status,2,c
  3150  00169C  D7FB               	goto	l6371
  3151                           
  3152                           ;Wireless.c: 188: FlushTxBuf();
  3153  00169E  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3154                           
  3155                           ;Wireless.c: 190: PutCharTxBuf(0xAA);
  3156  0016A2  0EAA               	movlw	170
  3157  0016A4  EC2E  F00E         	call	_PutCharTxBuf
  3158                           
  3159                           ;Wireless.c: 191: PutCharTxBuf(0x31);
  3160  0016A8  0E31               	movlw	49
  3161  0016AA  EC2E  F00E         	call	_PutCharTxBuf
  3162                           
  3163                           ;Wireless.c: 193: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  3164  0016AE  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3165  0016B2  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3166  0016B6  CFDE F0D8          	movff	postinc2,??_SendThreshold
  3167  0016BA  CFDD F0D9          	movff	postdec2,??_SendThreshold+1
  3168  0016BE  C0D9  F0D8         	movff	??_SendThreshold+1,??_SendThreshold
  3169  0016C2  0100               	movlb	0	; () banked
  3170  0016C4  6BD9               	clrf	(??_SendThreshold+1)& (0+255),b
  3171  0016C6  BFD8               	btfsc	??_SendThreshold& (0+255),7,b
  3172  0016C8  69D9               	setf	(??_SendThreshold+1)& (0+255),b
  3173  0016CA  0100               	movlb	0	; () banked
  3174  0016CC  51D8               	movf	??_SendThreshold& (0+255),w,b
  3175  0016CE  EC2E  F00E         	call	_PutCharTxBuf
  3176                           
  3177                           ;Wireless.c: 194: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  3178  0016D2  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3179  0016D6  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3180  0016DA  50DF               	movf	indf2,w,c
  3181  0016DC  EC2E  F00E         	call	_PutCharTxBuf
  3182                           
  3183                           ;Wireless.c: 196: PutCharTxBuf('\r');
  3184  0016E0  0E0D               	movlw	13
  3185  0016E2  EC2E  F00E         	call	_PutCharTxBuf
  3186                           
  3187                           ;Wireless.c: 197: PutCharTxBuf('\n');
  3188  0016E6  0E0A               	movlw	10
  3189  0016E8  EC2E  F00E         	call	_PutCharTxBuf
  3190                           
  3191                           ;Wireless.c: 198: while (BusyTx());
  3192  0016EC  D000               	goto	l6375
  3193  0016EE                     l6375:
  3194  0016EE  ECE3  F011         	call	_BusyTx	;wreg free
  3195  0016F2  0900               	iorlw	0
  3196  0016F4  A4D8               	btfss	status,2,c
  3197  0016F6  D7FB               	goto	l6375
  3198                           
  3199                           ;Wireless.c: 199: StartTx();
  3200  0016F8  EC56  F012         	call	_StartTx	;wreg free
  3201  0016FC  0012               	return		;funcret
  3202  0016FE                     __end_of_SendThreshold:
  3203                           	opt stack 0
  3204                           postinc0	equ	0xFEE
  3205                           wreg	equ	0xFE8
  3206                           indf2	equ	0xFDF
  3207                           postinc2	equ	0xFDE
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _SendStoredPIDValues *****************
  3214 ;; Defined at:
  3215 ;;		line 223 in file "Wireless.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  Kp              2   24[BANK0 ] int 
  3218 ;;  Kd              2   26[BANK0 ] int 
  3219 ;;  Ki              2   28[BANK0 ] int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;		None               void
  3224 ;; Registers used:
  3225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3231 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;Total ram usage:        6 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    9
  3238 ;; This function calls:
  3239 ;;		_BusyTx
  3240 ;;		_FlushTxBuf
  3241 ;;		_PutCharTxBuf
  3242 ;;		_StartTx
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text13
  3249  00176A                     __ptext13:
  3250                           	opt stack 0
  3251  00176A                     _SendStoredPIDValues:
  3252                           	opt stack 21
  3253                           
  3254                           ;Wireless.c: 224: while(BusyTx());
  3255                           
  3256                           ;incstack = 0
  3257  00176A  D000               	goto	l6391
  3258  00176C                     l6391:
  3259  00176C  ECE3  F011         	call	_BusyTx	;wreg free
  3260  001770  0900               	iorlw	0
  3261  001772  A4D8               	btfss	status,2,c
  3262  001774  D7FB               	goto	l6391
  3263                           
  3264                           ;Wireless.c: 225: FlushTxBuf();
  3265  001776  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3266                           
  3267                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3268  00177A  0EAA               	movlw	170
  3269  00177C  EC2E  F00E         	call	_PutCharTxBuf
  3270                           
  3271                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3272  001780  0E42               	movlw	66
  3273  001782  EC2E  F00E         	call	_PutCharTxBuf
  3274                           
  3275                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3276  001786  0100               	movlb	0	; () banked
  3277  001788  51D7               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3278  00178A  EC2E  F00E         	call	_PutCharTxBuf
  3279                           
  3280                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3281  00178E  0100               	movlb	0	; () banked
  3282  001790  51D6               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3283  001792  EC2E  F00E         	call	_PutCharTxBuf
  3284                           
  3285                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3286  001796  0100               	movlb	0	; () banked
  3287  001798  51D9               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3288  00179A  EC2E  F00E         	call	_PutCharTxBuf
  3289                           
  3290                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3291  00179E  0100               	movlb	0	; () banked
  3292  0017A0  51D8               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3293  0017A2  EC2E  F00E         	call	_PutCharTxBuf
  3294                           
  3295                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3296  0017A6  0100               	movlb	0	; () banked
  3297  0017A8  51DB               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3298  0017AA  EC2E  F00E         	call	_PutCharTxBuf
  3299                           
  3300                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3301  0017AE  0100               	movlb	0	; () banked
  3302  0017B0  51DA               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3303  0017B2  EC2E  F00E         	call	_PutCharTxBuf
  3304                           
  3305                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3306  0017B6  0E0D               	movlw	13
  3307  0017B8  EC2E  F00E         	call	_PutCharTxBuf
  3308                           
  3309                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3310  0017BC  0E0A               	movlw	10
  3311  0017BE  EC2E  F00E         	call	_PutCharTxBuf
  3312                           
  3313                           ;Wireless.c: 239: while (BusyTx());
  3314  0017C2  D000               	goto	l6395
  3315  0017C4                     l6395:
  3316  0017C4  ECE3  F011         	call	_BusyTx	;wreg free
  3317  0017C8  0900               	iorlw	0
  3318  0017CA  A4D8               	btfss	status,2,c
  3319  0017CC  D7FB               	goto	l6395
  3320                           
  3321                           ;Wireless.c: 240: StartTx();
  3322  0017CE  EC56  F012         	call	_StartTx	;wreg free
  3323  0017D2  0012               	return		;funcret
  3324  0017D4                     __end_of_SendStoredPIDValues:
  3325                           	opt stack 0
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           indf2	equ	0xFDF
  3329                           postinc2	equ	0xFDE
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _SendPIDSetPointOnLine *****************
  3336 ;; Defined at:
  3337 ;;		line 335 in file "Wireless.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  set_point       2   24[BANK0 ] PTR const int 
  3340 ;;		 -> PID_set_point(2), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;Total ram usage:        4 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    9
  3359 ;; This function calls:
  3360 ;;		_BusyTx
  3361 ;;		_FlushTxBuf
  3362 ;;		_PutCharTxBuf
  3363 ;;		_StartTx
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text14
  3370  0016FE                     __ptext14:
  3371                           	opt stack 0
  3372  0016FE                     _SendPIDSetPointOnLine:
  3373                           	opt stack 21
  3374                           
  3375                           ;Wireless.c: 336: while(BusyTx());
  3376                           
  3377                           ;incstack = 0
  3378  0016FE  D000               	goto	l6421
  3379  001700                     l6421:
  3380  001700  ECE3  F011         	call	_BusyTx	;wreg free
  3381  001704  0900               	iorlw	0
  3382  001706  A4D8               	btfss	status,2,c
  3383  001708  D7FB               	goto	l6421
  3384                           
  3385                           ;Wireless.c: 337: FlushTxBuf();
  3386  00170A  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3387                           
  3388                           ;Wireless.c: 339: PutCharTxBuf(0xAA);
  3389  00170E  0EAA               	movlw	170
  3390  001710  EC2E  F00E         	call	_PutCharTxBuf
  3391                           
  3392                           ;Wireless.c: 340: PutCharTxBuf(0x07);
  3393  001714  0E07               	movlw	7
  3394  001716  EC2E  F00E         	call	_PutCharTxBuf
  3395                           
  3396                           ;Wireless.c: 342: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3397  00171A  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3398  00171E  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3399  001722  CFDE F0D8          	movff	postinc2,??_SendPIDSetPointOnLine
  3400  001726  CFDD F0D9          	movff	postdec2,??_SendPIDSetPointOnLine+1
  3401  00172A  C0D9  F0D8         	movff	??_SendPIDSetPointOnLine+1,??_SendPIDSetPointOnLine
  3402  00172E  0100               	movlb	0	; () banked
  3403  001730  6BD9               	clrf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3404  001732  BFD8               	btfsc	??_SendPIDSetPointOnLine& (0+255),7,b
  3405  001734  69D9               	setf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3406  001736  0100               	movlb	0	; () banked
  3407  001738  51D8               	movf	??_SendPIDSetPointOnLine& (0+255),w,b
  3408  00173A  EC2E  F00E         	call	_PutCharTxBuf
  3409                           
  3410                           ;Wireless.c: 343: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3411  00173E  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3412  001742  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3413  001746  50DF               	movf	indf2,w,c
  3414  001748  EC2E  F00E         	call	_PutCharTxBuf
  3415                           
  3416                           ;Wireless.c: 345: PutCharTxBuf('\r');
  3417  00174C  0E0D               	movlw	13
  3418  00174E  EC2E  F00E         	call	_PutCharTxBuf
  3419                           
  3420                           ;Wireless.c: 346: PutCharTxBuf('\n');
  3421  001752  0E0A               	movlw	10
  3422  001754  EC2E  F00E         	call	_PutCharTxBuf
  3423                           
  3424                           ;Wireless.c: 347: while (BusyTx());
  3425  001758  D000               	goto	l6425
  3426  00175A                     l6425:
  3427  00175A  ECE3  F011         	call	_BusyTx	;wreg free
  3428  00175E  0900               	iorlw	0
  3429  001760  A4D8               	btfss	status,2,c
  3430  001762  D7FB               	goto	l6425
  3431                           
  3432                           ;Wireless.c: 348: StartTx();
  3433  001764  EC56  F012         	call	_StartTx	;wreg free
  3434  001768  0012               	return		;funcret
  3435  00176A                     __end_of_SendPIDSetPointOnLine:
  3436                           	opt stack 0
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _SendOffsets *****************
  3447 ;; Defined at:
  3448 ;;		line 165 in file "Wireless.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  3451 ;;		 -> sensor_offsets(10), 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  index           1   28[BANK0 ] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;Total ram usage:        5 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    9
  3470 ;; This function calls:
  3471 ;;		_BusyTx
  3472 ;;		_FlushTxBuf
  3473 ;;		_PutCharTxBuf
  3474 ;;		_StartTx
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text15
  3481  0012E2                     __ptext15:
  3482                           	opt stack 0
  3483  0012E2                     _SendOffsets:
  3484                           	opt stack 21
  3485                           
  3486                           ;Wireless.c: 166: unsigned char index;
  3487                           ;Wireless.c: 168: while(BusyTx());
  3488                           
  3489                           ;incstack = 0
  3490  0012E2  D000               	goto	l6347
  3491  0012E4                     l6347:
  3492  0012E4  ECE3  F011         	call	_BusyTx	;wreg free
  3493  0012E8  0900               	iorlw	0
  3494  0012EA  A4D8               	btfss	status,2,c
  3495  0012EC  D7FB               	goto	l6347
  3496                           
  3497                           ;Wireless.c: 169: FlushTxBuf();
  3498  0012EE  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3499                           
  3500                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  3501  0012F2  0EAA               	movlw	170
  3502  0012F4  EC2E  F00E         	call	_PutCharTxBuf
  3503                           
  3504                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  3505  0012F8  0E21               	movlw	33
  3506  0012FA  EC2E  F00E         	call	_PutCharTxBuf
  3507                           
  3508                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  3509  0012FE  0E00               	movlw	0
  3510  001300  0100               	movlb	0	; () banked
  3511  001302  6FDA               	movwf	SendOffsets@index& (0+255),b
  3512  001304                     l6353:
  3513                           
  3514                           ; BSR set to: 0
  3515  001304  0E04               	movlw	4
  3516  001306  0100               	movlb	0	; () banked
  3517  001308  65DA               	cpfsgt	SendOffsets@index& (0+255),b
  3518  00130A  D001               	goto	l6357
  3519                           
  3520                           ; BSR set to: 0
  3521  00130C  D02C               	goto	l6363
  3522  00130E                     l6357:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3526  00130E  0100               	movlb	0	; () banked
  3527  001310  51DA               	movf	SendOffsets@index& (0+255),w,b
  3528  001312  0D02               	mullw	2
  3529  001314  50F3               	movf	prodl,w,c
  3530  001316  0100               	movlb	0	; () banked
  3531  001318  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3532  00131A  6ED9               	movwf	fsr2l,c
  3533  00131C  50F4               	movf	prodh,w,c
  3534  00131E  0100               	movlb	0	; () banked
  3535  001320  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3536  001322  6EDA               	movwf	fsr2h,c
  3537  001324  CFDE F0D8          	movff	postinc2,??_SendOffsets
  3538  001328  CFDD F0D9          	movff	postdec2,??_SendOffsets+1
  3539  00132C  C0D9  F0D8         	movff	??_SendOffsets+1,??_SendOffsets
  3540  001330  0100               	movlb	0	; () banked
  3541  001332  6BD9               	clrf	(??_SendOffsets+1)& (0+255),b
  3542  001334  BFD8               	btfsc	??_SendOffsets& (0+255),7,b
  3543  001336  69D9               	setf	(??_SendOffsets+1)& (0+255),b
  3544  001338  0100               	movlb	0	; () banked
  3545  00133A  51D8               	movf	??_SendOffsets& (0+255),w,b
  3546  00133C  EC2E  F00E         	call	_PutCharTxBuf
  3547                           
  3548                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3549  001340  0100               	movlb	0	; () banked
  3550  001342  51DA               	movf	SendOffsets@index& (0+255),w,b
  3551  001344  0D02               	mullw	2
  3552  001346  50F3               	movf	prodl,w,c
  3553  001348  0100               	movlb	0	; () banked
  3554  00134A  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3555  00134C  6ED9               	movwf	fsr2l,c
  3556  00134E  50F4               	movf	prodh,w,c
  3557  001350  0100               	movlb	0	; () banked
  3558  001352  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3559  001354  6EDA               	movwf	fsr2h,c
  3560  001356  50DF               	movf	indf2,w,c
  3561  001358  0DFF               	mullw	255
  3562  00135A  50F3               	movf	prodl,w,c
  3563  00135C  EC2E  F00E         	call	_PutCharTxBuf
  3564  001360  0100               	movlb	0	; () banked
  3565  001362  2BDA               	incf	SendOffsets@index& (0+255),f,b
  3566  001364  D7CF               	goto	l6353
  3567  001366                     l6363:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;Wireless.c: 177: }
  3571                           ;Wireless.c: 179: PutCharTxBuf('\r');
  3572  001366  0E0D               	movlw	13
  3573  001368  EC2E  F00E         	call	_PutCharTxBuf
  3574                           
  3575                           ;Wireless.c: 180: PutCharTxBuf('\n');
  3576  00136C  0E0A               	movlw	10
  3577  00136E  EC2E  F00E         	call	_PutCharTxBuf
  3578                           
  3579                           ;Wireless.c: 181: while(BusyTx());
  3580  001372  D000               	goto	l6365
  3581  001374                     l6365:
  3582  001374  ECE3  F011         	call	_BusyTx	;wreg free
  3583  001378  0900               	iorlw	0
  3584  00137A  A4D8               	btfss	status,2,c
  3585  00137C  D7FB               	goto	l6365
  3586                           
  3587                           ;Wireless.c: 182: StartTx();
  3588  00137E  EC56  F012         	call	_StartTx	;wreg free
  3589  001382  0012               	return		;funcret
  3590  001384                     __end_of_SendOffsets:
  3591                           	opt stack 0
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           postinc0	equ	0xFEE
  3595                           wreg	equ	0xFE8
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           postdec2	equ	0xFDD
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _SendLineMode *****************
  3604 ;; Defined at:
  3605 ;;		line 152 in file "Wireless.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3608 ;;		 -> line_mode(1), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;		None               void
  3613 ;; Registers used:
  3614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    9
  3627 ;; This function calls:
  3628 ;;		_BusyTx
  3629 ;;		_FlushTxBuf
  3630 ;;		_PutCharTxBuf
  3631 ;;		_StartTx
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text16
  3638  001D1E                     __ptext16:
  3639                           	opt stack 0
  3640  001D1E                     _SendLineMode:
  3641                           	opt stack 21
  3642                           
  3643                           ;Wireless.c: 153: while(BusyTx());
  3644                           
  3645                           ;incstack = 0
  3646  001D1E  D000               	goto	l6339
  3647  001D20                     l6339:
  3648  001D20  ECE3  F011         	call	_BusyTx	;wreg free
  3649  001D24  0900               	iorlw	0
  3650  001D26  A4D8               	btfss	status,2,c
  3651  001D28  D7FB               	goto	l6339
  3652                           
  3653                           ;Wireless.c: 154: FlushTxBuf();
  3654  001D2A  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3655                           
  3656                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3657  001D2E  0EAA               	movlw	170
  3658  001D30  EC2E  F00E         	call	_PutCharTxBuf
  3659                           
  3660                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3661  001D34  0E11               	movlw	17
  3662  001D36  EC2E  F00E         	call	_PutCharTxBuf
  3663                           
  3664                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3665  001D3A  C0D6  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3666  001D3E  C0D7  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3667  001D42  50DF               	movf	indf2,w,c
  3668  001D44  EC2E  F00E         	call	_PutCharTxBuf
  3669                           
  3670                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3671  001D48  0E0D               	movlw	13
  3672  001D4A  EC2E  F00E         	call	_PutCharTxBuf
  3673                           
  3674                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3675  001D4E  0E0A               	movlw	10
  3676  001D50  EC2E  F00E         	call	_PutCharTxBuf
  3677                           
  3678                           ;Wireless.c: 162: StartTx();
  3679  001D54  EC56  F012         	call	_StartTx	;wreg free
  3680  001D58  0012               	return		;funcret
  3681  001D5A                     __end_of_SendLineMode:
  3682                           	opt stack 0
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           postinc0	equ	0xFEE
  3686                           wreg	equ	0xFE8
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _SendDefaultPIDValues *****************
  3695 ;; Defined at:
  3696 ;;		line 203 in file "Wireless.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  Kp              2   24[BANK0 ] int 
  3699 ;;  Kd              2   26[BANK0 ] int 
  3700 ;;  Ki              2   28[BANK0 ] int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;		None               void
  3705 ;; Registers used:
  3706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        6 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    9
  3719 ;; This function calls:
  3720 ;;		_BusyTx
  3721 ;;		_FlushTxBuf
  3722 ;;		_PutCharTxBuf
  3723 ;;		_StartTx
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text17
  3730  0017D4                     __ptext17:
  3731                           	opt stack 0
  3732  0017D4                     _SendDefaultPIDValues:
  3733                           	opt stack 21
  3734                           
  3735                           ;Wireless.c: 204: while(BusyTx());
  3736                           
  3737                           ;incstack = 0
  3738  0017D4  D000               	goto	l6381
  3739  0017D6                     l6381:
  3740  0017D6  ECE3  F011         	call	_BusyTx	;wreg free
  3741  0017DA  0900               	iorlw	0
  3742  0017DC  A4D8               	btfss	status,2,c
  3743  0017DE  D7FB               	goto	l6381
  3744                           
  3745                           ;Wireless.c: 205: FlushTxBuf();
  3746  0017E0  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3747                           
  3748                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3749  0017E4  0EAA               	movlw	170
  3750  0017E6  EC2E  F00E         	call	_PutCharTxBuf
  3751                           
  3752                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3753  0017EA  0E41               	movlw	65
  3754  0017EC  EC2E  F00E         	call	_PutCharTxBuf
  3755                           
  3756                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3757  0017F0  0100               	movlb	0	; () banked
  3758  0017F2  51D7               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3759  0017F4  EC2E  F00E         	call	_PutCharTxBuf
  3760                           
  3761                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3762  0017F8  0100               	movlb	0	; () banked
  3763  0017FA  51D6               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3764  0017FC  EC2E  F00E         	call	_PutCharTxBuf
  3765                           
  3766                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3767  001800  0100               	movlb	0	; () banked
  3768  001802  51D9               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3769  001804  EC2E  F00E         	call	_PutCharTxBuf
  3770                           
  3771                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3772  001808  0100               	movlb	0	; () banked
  3773  00180A  51D8               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3774  00180C  EC2E  F00E         	call	_PutCharTxBuf
  3775                           
  3776                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3777  001810  0100               	movlb	0	; () banked
  3778  001812  51DB               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3779  001814  EC2E  F00E         	call	_PutCharTxBuf
  3780                           
  3781                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3782  001818  0100               	movlb	0	; () banked
  3783  00181A  51DA               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3784  00181C  EC2E  F00E         	call	_PutCharTxBuf
  3785                           
  3786                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3787  001820  0E0D               	movlw	13
  3788  001822  EC2E  F00E         	call	_PutCharTxBuf
  3789                           
  3790                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3791  001826  0E0A               	movlw	10
  3792  001828  EC2E  F00E         	call	_PutCharTxBuf
  3793                           
  3794                           ;Wireless.c: 219: while (BusyTx());
  3795  00182C  D000               	goto	l6385
  3796  00182E                     l6385:
  3797  00182E  ECE3  F011         	call	_BusyTx	;wreg free
  3798  001832  0900               	iorlw	0
  3799  001834  A4D8               	btfss	status,2,c
  3800  001836  D7FB               	goto	l6385
  3801                           
  3802                           ;Wireless.c: 220: StartTx();
  3803  001838  EC56  F012         	call	_StartTx	;wreg free
  3804  00183C  0012               	return		;funcret
  3805  00183E                     __end_of_SendDefaultPIDValues:
  3806                           	opt stack 0
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _SendCurrentPIDValues *****************
  3819 ;; Defined at:
  3820 ;;		line 243 in file "Wireless.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  Kp              2   24[BANK0 ] int 
  3823 ;;  Kd              2   26[BANK0 ] int 
  3824 ;;  Ki              2   28[BANK0 ] int 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3836 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;Total ram usage:        6 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    9
  3843 ;; This function calls:
  3844 ;;		_BusyTx
  3845 ;;		_FlushTxBuf
  3846 ;;		_PutCharTxBuf
  3847 ;;		_StartTx
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text18
  3854  00183E                     __ptext18:
  3855                           	opt stack 0
  3856  00183E                     _SendCurrentPIDValues:
  3857                           	opt stack 21
  3858                           
  3859                           ;Wireless.c: 244: while(BusyTx());
  3860                           
  3861                           ;incstack = 0
  3862  00183E  D000               	goto	l6401
  3863  001840                     l6401:
  3864  001840  ECE3  F011         	call	_BusyTx	;wreg free
  3865  001844  0900               	iorlw	0
  3866  001846  A4D8               	btfss	status,2,c
  3867  001848  D7FB               	goto	l6401
  3868                           
  3869                           ;Wireless.c: 245: FlushTxBuf();
  3870  00184A  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3871                           
  3872                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3873  00184E  0EAA               	movlw	170
  3874  001850  EC2E  F00E         	call	_PutCharTxBuf
  3875                           
  3876                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3877  001854  0E43               	movlw	67
  3878  001856  EC2E  F00E         	call	_PutCharTxBuf
  3879                           
  3880                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3881  00185A  0100               	movlb	0	; () banked
  3882  00185C  51D7               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3883  00185E  EC2E  F00E         	call	_PutCharTxBuf
  3884                           
  3885                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3886  001862  0100               	movlb	0	; () banked
  3887  001864  51D6               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3888  001866  EC2E  F00E         	call	_PutCharTxBuf
  3889                           
  3890                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3891  00186A  0100               	movlb	0	; () banked
  3892  00186C  51D9               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3893  00186E  EC2E  F00E         	call	_PutCharTxBuf
  3894                           
  3895                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3896  001872  0100               	movlb	0	; () banked
  3897  001874  51D8               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3898  001876  EC2E  F00E         	call	_PutCharTxBuf
  3899                           
  3900                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3901  00187A  0100               	movlb	0	; () banked
  3902  00187C  51DB               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3903  00187E  EC2E  F00E         	call	_PutCharTxBuf
  3904                           
  3905                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3906  001882  0100               	movlb	0	; () banked
  3907  001884  51DA               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3908  001886  EC2E  F00E         	call	_PutCharTxBuf
  3909                           
  3910                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3911  00188A  0E0D               	movlw	13
  3912  00188C  EC2E  F00E         	call	_PutCharTxBuf
  3913                           
  3914                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3915  001890  0E0A               	movlw	10
  3916  001892  EC2E  F00E         	call	_PutCharTxBuf
  3917                           
  3918                           ;Wireless.c: 259: while (BusyTx());
  3919  001896  D000               	goto	l6405
  3920  001898                     l6405:
  3921  001898  ECE3  F011         	call	_BusyTx	;wreg free
  3922  00189C  0900               	iorlw	0
  3923  00189E  A4D8               	btfss	status,2,c
  3924  0018A0  D7FB               	goto	l6405
  3925                           
  3926                           ;Wireless.c: 260: StartTx();
  3927  0018A2  EC56  F012         	call	_StartTx	;wreg free
  3928  0018A6  0012               	return		;funcret
  3929  0018A8                     __end_of_SendCurrentPIDValues:
  3930                           	opt stack 0
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           postdec2	equ	0xFDD
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _SendBattVoltageInitial *****************
  3943 ;; Defined at:
  3944 ;;		line 263 in file "Wireless.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3947 ;;		 -> main@battery_voltage(2), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;		None               void
  3952 ;; Registers used:
  3953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;Total ram usage:        4 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    9
  3966 ;; This function calls:
  3967 ;;		_BusyTx
  3968 ;;		_FlushTxBuf
  3969 ;;		_PutCharTxBuf
  3970 ;;		_StartTx
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text19
  3977  001912                     __ptext19:
  3978                           	opt stack 0
  3979  001912                     _SendBattVoltageInitial:
  3980                           	opt stack 21
  3981                           
  3982                           ;Wireless.c: 264: while(BusyTx());
  3983                           
  3984                           ;incstack = 0
  3985  001912  D000               	goto	l6411
  3986  001914                     l6411:
  3987  001914  ECE3  F011         	call	_BusyTx	;wreg free
  3988  001918  0900               	iorlw	0
  3989  00191A  A4D8               	btfss	status,2,c
  3990  00191C  D7FB               	goto	l6411
  3991                           
  3992                           ;Wireless.c: 265: FlushTxBuf();
  3993  00191E  EC57  F00F         	call	_FlushTxBuf	;wreg free
  3994                           
  3995                           ;Wireless.c: 267: PutCharTxBuf(0xAA);
  3996  001922  0EAA               	movlw	170
  3997  001924  EC2E  F00E         	call	_PutCharTxBuf
  3998                           
  3999                           ;Wireless.c: 268: PutCharTxBuf(0x06);
  4000  001928  0E06               	movlw	6
  4001  00192A  EC2E  F00E         	call	_PutCharTxBuf
  4002                           
  4003                           ;Wireless.c: 270: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  4004  00192E  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4005  001932  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4006  001936  CFDE F0D8          	movff	postinc2,??_SendBattVoltageInitial
  4007  00193A  CFDD F0D9          	movff	postdec2,??_SendBattVoltageInitial+1
  4008  00193E  C0D9  F0D8         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  4009  001942  0100               	movlb	0	; () banked
  4010  001944  6BD9               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  4011  001946  0100               	movlb	0	; () banked
  4012  001948  51D8               	movf	??_SendBattVoltageInitial& (0+255),w,b
  4013  00194A  EC2E  F00E         	call	_PutCharTxBuf
  4014                           
  4015                           ;Wireless.c: 271: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  4016  00194E  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4017  001952  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4018  001956  50DF               	movf	indf2,w,c
  4019  001958  EC2E  F00E         	call	_PutCharTxBuf
  4020                           
  4021                           ;Wireless.c: 273: PutCharTxBuf('\r');
  4022  00195C  0E0D               	movlw	13
  4023  00195E  EC2E  F00E         	call	_PutCharTxBuf
  4024                           
  4025                           ;Wireless.c: 274: PutCharTxBuf('\n');
  4026  001962  0E0A               	movlw	10
  4027  001964  EC2E  F00E         	call	_PutCharTxBuf
  4028                           
  4029                           ;Wireless.c: 275: while (BusyTx());
  4030  001968  D000               	goto	l6415
  4031  00196A                     l6415:
  4032  00196A  ECE3  F011         	call	_BusyTx	;wreg free
  4033  00196E  0900               	iorlw	0
  4034  001970  A4D8               	btfss	status,2,c
  4035  001972  D7FB               	goto	l6415
  4036                           
  4037                           ;Wireless.c: 276: StartTx();
  4038  001974  EC56  F012         	call	_StartTx	;wreg free
  4039  001978  0012               	return		;funcret
  4040  00197A                     __end_of_SendBattVoltageInitial:
  4041                           	opt stack 0
  4042                           prodh	equ	0xFF4
  4043                           prodl	equ	0xFF3
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           postdec2	equ	0xFDD
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function _ResetMillis3 *****************
  4054 ;; Defined at:
  4055 ;;		line 50 in file "MillisecondTimer.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;		None               void
  4062 ;; Registers used:
  4063 ;;		wreg, status,2
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    7
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text20
  4084  00245C                     __ptext20:
  4085                           	opt stack 0
  4086  00245C                     _ResetMillis3:
  4087                           	opt stack 23
  4088                           
  4089                           ;MillisecondTimer.c: 52: millisecond_COUNT3 = 0;
  4090                           
  4091                           ;incstack = 0
  4092  00245C  0E00               	movlw	0
  4093  00245E  6E14               	movwf	_millisecond_COUNT3+1,c	;volatile
  4094  002460  0E00               	movlw	0
  4095  002462  6E13               	movwf	_millisecond_COUNT3,c	;volatile
  4096  002464  0012               	return		;funcret
  4097  002466                     __end_of_ResetMillis3:
  4098                           	opt stack 0
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           indf2	equ	0xFDF
  4104                           postinc2	equ	0xFDE
  4105                           postdec2	equ	0xFDD
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           
  4110 ;; *************** function _ResetMillis1 *****************
  4111 ;; Defined at:
  4112 ;;		line 39 in file "MillisecondTimer.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;		None               void
  4119 ;; Registers used:
  4120 ;;		wreg, status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    7
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text21
  4141  002466                     __ptext21:
  4142                           	opt stack 0
  4143  002466                     _ResetMillis1:
  4144                           	opt stack 23
  4145                           
  4146                           ;MillisecondTimer.c: 41: millisecond_COUNT1 = 0;
  4147                           
  4148                           ;incstack = 0
  4149  002466  0E00               	movlw	0
  4150  002468  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4151  00246A  0E00               	movlw	0
  4152  00246C  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4153  00246E  0012               	return		;funcret
  4154  002470                     __end_of_ResetMillis1:
  4155                           	opt stack 0
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           indf2	equ	0xFDF
  4161                           postinc2	equ	0xFDE
  4162                           postdec2	equ	0xFDD
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _ResetMillis0 *****************
  4168 ;; Defined at:
  4169 ;;		line 33 in file "MillisecondTimer.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, status,2
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    7
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text22
  4198  002470                     __ptext22:
  4199                           	opt stack 0
  4200  002470                     _ResetMillis0:
  4201                           	opt stack 23
  4202                           
  4203                           ;MillisecondTimer.c: 35: millisecond_COUNT0 = 0;
  4204                           
  4205                           ;incstack = 0
  4206  002470  0E00               	movlw	0
  4207  002472  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4208  002474  0E00               	movlw	0
  4209  002476  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4210  002478  0012               	return		;funcret
  4211  00247A                     __end_of_ResetMillis0:
  4212                           	opt stack 0
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           indf2	equ	0xFDF
  4218                           postinc2	equ	0xFDE
  4219                           postdec2	equ	0xFDD
  4220                           fsr2h	equ	0xFDA
  4221                           fsr2l	equ	0xFD9
  4222                           status	equ	0xFD8
  4223                           
  4224 ;; *************** function _ResetAccumulatedCurrent *****************
  4225 ;; Defined at:
  4226 ;;		line 103 in file "BatteryLib/ds2781.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    9
  4247 ;; This function calls:
  4248 ;;		_OWReset
  4249 ;;		_OWWriteByte
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text23
  4256  002016                     __ptext23:
  4257                           	opt stack 0
  4258  002016                     _ResetAccumulatedCurrent:
  4259                           	opt stack 21
  4260                           
  4261                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4262                           
  4263                           ;incstack = 0
  4264  002016  ECE7  F00E         	call	_OWReset	;wreg free
  4265  00201A  06E8               	decf	wreg,f,c
  4266  00201C  A4D8               	btfss	status,2,c
  4267  00201E  D010               	goto	l487
  4268                           
  4269                           ;ds2781.c: 106: {
  4270                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4271  002020  0ECC               	movlw	204
  4272  002022  EC21  F010         	call	_OWWriteByte
  4273                           
  4274                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4275  002026  0E6C               	movlw	108
  4276  002028  EC21  F010         	call	_OWWriteByte
  4277                           
  4278                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4279  00202C  0E10               	movlw	16
  4280  00202E  EC21  F010         	call	_OWWriteByte
  4281                           
  4282                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4283  002032  0E00               	movlw	0
  4284  002034  EC21  F010         	call	_OWWriteByte
  4285                           
  4286                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4287  002038  0E00               	movlw	0
  4288  00203A  EC21  F010         	call	_OWWriteByte
  4289  00203E  D000               	goto	l487
  4290  002040                     l487:
  4291  002040  0012               	return		;funcret
  4292  002042                     __end_of_ResetAccumulatedCurrent:
  4293                           	opt stack 0
  4294                           prodh	equ	0xFF4
  4295                           prodl	equ	0xFF3
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           indf2	equ	0xFDF
  4299                           postinc2	equ	0xFDE
  4300                           postdec2	equ	0xFDD
  4301                           fsr2h	equ	0xFDA
  4302                           fsr2l	equ	0xFD9
  4303                           status	equ	0xFD8
  4304                           
  4305 ;; *************** function _ReadVoltage *****************
  4306 ;; Defined at:
  4307 ;;		line 33 in file "BatteryLib/ds2781.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  result          2   24[BANK0 ] unsigned short 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2   19[BANK0 ] unsigned short 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;Total ram usage:        7 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    9
  4328 ;; This function calls:
  4329 ;;		_OWReadByte
  4330 ;;		_OWReset
  4331 ;;		_OWWriteByte
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text24
  4338  0018A8                     __ptext24:
  4339                           	opt stack 0
  4340  0018A8                     _ReadVoltage:
  4341                           	opt stack 21
  4342                           
  4343                           ;ds2781.c: 35: WORD result = 0;
  4344                           
  4345                           ;incstack = 0
  4346  0018A8  0E00               	movlw	0
  4347  0018AA  0100               	movlb	0	; () banked
  4348  0018AC  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4349  0018AE  0E00               	movlw	0
  4350  0018B0  6FD6               	movwf	ReadVoltage@result& (0+255),b
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4354  0018B2  ECE7  F00E         	call	_OWReset	;wreg free
  4355  0018B6  06E8               	decf	wreg,f,c
  4356  0018B8  A4D8               	btfss	status,2,c
  4357  0018BA  D017               	goto	l6435
  4358                           
  4359                           ;ds2781.c: 37: {
  4360                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4361  0018BC  0ECC               	movlw	204
  4362  0018BE  EC21  F010         	call	_OWWriteByte
  4363                           
  4364                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4365  0018C2  0E69               	movlw	105
  4366  0018C4  EC21  F010         	call	_OWWriteByte
  4367                           
  4368                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4369  0018C8  0E0C               	movlw	12
  4370  0018CA  EC21  F010         	call	_OWWriteByte
  4371                           
  4372                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4373  0018CE  EC03  F00F         	call	_OWReadByte	;wreg free
  4374  0018D2  0100               	movlb	0	; () banked
  4375  0018D4  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4376  0018D6  6BD6               	clrf	ReadVoltage@result& (0+255),b
  4377                           
  4378                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4379  0018D8  EC03  F00F         	call	_OWReadByte	;wreg free
  4380  0018DC  0100               	movlb	0	; () banked
  4381  0018DE  6FD3               	movwf	??_ReadVoltage& (0+255),b
  4382  0018E0  0100               	movlb	0	; () banked
  4383  0018E2  51D3               	movf	??_ReadVoltage& (0+255),w,b
  4384  0018E4  0100               	movlb	0	; () banked
  4385  0018E6  13D6               	iorwf	ReadVoltage@result& (0+255),f,b
  4386  0018E8  D000               	goto	l6435
  4387  0018EA                     l6435:
  4388                           
  4389                           ;ds2781.c: 43: }
  4390                           ;ds2781.c: 44: return (result >> 5);
  4391  0018EA  C0D6  F0D3         	movff	ReadVoltage@result,??_ReadVoltage
  4392  0018EE  C0D7  F0D4         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4393  0018F2  0E05               	movlw	5
  4394  0018F4  0100               	movlb	0	; () banked
  4395  0018F6  6FD5               	movwf	(??_ReadVoltage+2)& (0+255),b
  4396  0018F8                     u5565:
  4397  0018F8  0100               	movlb	0	; () banked
  4398  0018FA  90D8               	bcf	status,0,c
  4399  0018FC  33D4               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4400  0018FE  33D3               	rrcf	??_ReadVoltage& (0+255),f,b
  4401  001900  0100               	movlb	0	; () banked
  4402  001902  2FD5               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4403  001904  D7F9               	goto	u5565
  4404  001906  C0D3  F0D1         	movff	??_ReadVoltage,?_ReadVoltage
  4405  00190A  C0D4  F0D2         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4406  00190E  D000               	goto	l475
  4407  001910                     l475:
  4408                           
  4409                           ; BSR set to: 0
  4410  001910  0012               	return		;funcret
  4411  001912                     __end_of_ReadVoltage:
  4412                           	opt stack 0
  4413                           prodh	equ	0xFF4
  4414                           prodl	equ	0xFF3
  4415                           postinc0	equ	0xFEE
  4416                           wreg	equ	0xFE8
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           postdec2	equ	0xFDD
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _OWWriteByte *****************
  4425 ;; Defined at:
  4426 ;;		line 143 in file "BatteryLib/OneWire.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  byte            1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  byte            1   17[BANK0 ] unsigned char 
  4431 ;;  i               1   18[BANK0 ] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;		None               void
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;Total ram usage:        2 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    8
  4448 ;; This function calls:
  4449 ;;		_OWWriteBit
  4450 ;; This function is called by:
  4451 ;;		_ReadVoltage
  4452 ;;		_ResetAccumulatedCurrent
  4453 ;;		_ReadCurrent
  4454 ;;		_ReadAccumulatedCurrent
  4455 ;;		_ReadNetAddress
  4456 ;;		_ReadTemperature
  4457 ;;		_ReadCurrentOffset
  4458 ;;		_WriteCurrentOffset
  4459 ;;		_AdjustCurrentOffset
  4460 ;;		_UpdateControlRegister
  4461 ;;		_ReadRAM
  4462 ;;		_WriteRAM
  4463 ;;		_CopyEEPROM
  4464 ;;		_RecallEEPROM
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text25
  4469  002042                     __ptext25:
  4470                           	opt stack 0
  4471  002042                     _OWWriteByte:
  4472                           	opt stack 21
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;incstack = 0
  4476                           ;OWWriteByte@byte stored from wreg
  4477  002042  0100               	movlb	0	; () banked
  4478  002044  6FCF               	movwf	OWWriteByte@byte& (0+255),b
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;OneWire.c: 145: BYTE i;
  4482                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4483  002046  0E00               	movlw	0
  4484  002048  0100               	movlb	0	; () banked
  4485  00204A  6FD0               	movwf	OWWriteByte@i& (0+255),b
  4486  00204C                     l6027:
  4487                           
  4488                           ; BSR set to: 0
  4489  00204C  0E07               	movlw	7
  4490  00204E  0100               	movlb	0	; () banked
  4491  002050  65D0               	cpfsgt	OWWriteByte@i& (0+255),b
  4492  002052  D001               	goto	l6031
  4493                           
  4494                           ; BSR set to: 0
  4495  002054  D00B               	goto	l562
  4496  002056                     l6031:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;OneWire.c: 148: {
  4500                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4501  002056  0100               	movlb	0	; () banked
  4502  002058  51CF               	movf	OWWriteByte@byte& (0+255),w,b
  4503  00205A  0B01               	andlw	1
  4504  00205C  ECAD  F00E         	call	_OWWriteBit
  4505                           
  4506                           ;OneWire.c: 150: byte >>= 1;
  4507  002060  0100               	movlb	0	; () banked
  4508  002062  90D8               	bcf	status,0,c
  4509  002064  33CF               	rrcf	OWWriteByte@byte& (0+255),f,b
  4510                           
  4511                           ; BSR set to: 0
  4512  002066  0100               	movlb	0	; () banked
  4513  002068  2BD0               	incf	OWWriteByte@i& (0+255),f,b
  4514  00206A  D7F0               	goto	l6027
  4515  00206C                     l562:
  4516                           
  4517                           ; BSR set to: 0
  4518  00206C  0012               	return		;funcret
  4519  00206E                     __end_of_OWWriteByte:
  4520                           	opt stack 0
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           indf2	equ	0xFDF
  4526                           postinc2	equ	0xFDE
  4527                           postdec2	equ	0xFDD
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _OWWriteBit *****************
  4533 ;; Defined at:
  4534 ;;		line 72 in file "BatteryLib/OneWire.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  b               1    wreg     unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  b               1   16[BANK0 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;		None               void
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    7
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_OWWriteByte
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text26
  4563  001D5A                     __ptext26:
  4564                           	opt stack 0
  4565  001D5A                     _OWWriteBit:
  4566                           	opt stack 21
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;incstack = 0
  4570                           ;OWWriteBit@b stored from wreg
  4571  001D5A  0100               	movlb	0	; () banked
  4572  001D5C  6FCE               	movwf	OWWriteBit@b& (0+255),b
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;OneWire.c: 74: if (b)
  4576  001D5E  0100               	movlb	0	; () banked
  4577  001D60  51CE               	movf	OWWriteBit@b& (0+255),w,b
  4578  001D62  0100               	movlb	0	; () banked
  4579  001D64  B4D8               	btfsc	status,2,c
  4580  001D66  D00A               	goto	l552
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;OneWire.c: 75: {
  4584                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4585  001D68  9690               	bcf	3984,3,c	;volatile
  4586                           
  4587                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4588  001D6A  9699               	bcf	3993,3,c	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4592  001D6C  0E04               	movlw	4
  4593  001D6E                     u6307:
  4594  001D6E  2EE8               	decfsz	wreg,f,c
  4595  001D70  D7FE               	goto	u6307
  4596                           
  4597                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4598  001D72  8699               	bsf	3993,3,c	;volatile
  4599                           
  4600                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4601  001D74  0E35               	movlw	53
  4602  001D76                     u6317:
  4603  001D76  2EE8               	decfsz	wreg,f,c
  4604  001D78  D7FE               	goto	u6317
  4605  001D7A  D009               	goto	L2
  4606  001D7C                     l552:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;OneWire.c: 87: else
  4610                           ;OneWire.c: 88: {
  4611                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4612  001D7C  9690               	bcf	3984,3,c	;volatile
  4613                           
  4614                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4615  001D7E  9699               	bcf	3993,3,c	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4619  001D80  0E32               	movlw	50
  4620  001D82                     u6327:
  4621  001D82  2EE8               	decfsz	wreg,f,c
  4622  001D84  D7FE               	goto	u6327
  4623                           
  4624                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4625  001D86  8699               	bsf	3993,3,c	;volatile
  4626                           
  4627                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4628  001D88  0E08               	movlw	8
  4629  001D8A                     u6337:
  4630  001D8A  2EE8               	decfsz	wreg,f,c
  4631  001D8C  D7FE               	goto	u6337
  4632  001D8E                     L2:
  4633  001D8E  F000               	nop	
  4634  001D90  D000               	goto	l554
  4635  001D92                     l554:
  4636  001D92  0012               	return		;funcret
  4637  001D94                     __end_of_OWWriteBit:
  4638                           	opt stack 0
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           postinc0	equ	0xFEE
  4642                           wreg	equ	0xFE8
  4643                           indf2	equ	0xFDF
  4644                           postinc2	equ	0xFDE
  4645                           postdec2	equ	0xFDD
  4646                           fsr2h	equ	0xFDA
  4647                           fsr2l	equ	0xFD9
  4648                           status	equ	0xFD8
  4649                           
  4650 ;; *************** function _OWReset *****************
  4651 ;; Defined at:
  4652 ;;		line 41 in file "BatteryLib/OneWire.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  result          1   16[BANK0 ] enum E6350
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      enum E6350
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;Total ram usage:        1 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    7
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_ReadVoltage
  4677 ;;		_ResetAccumulatedCurrent
  4678 ;;		_ReadCurrent
  4679 ;;		_ReadAccumulatedCurrent
  4680 ;;		_ReadNetAddress
  4681 ;;		_ReadTemperature
  4682 ;;		_ReadCurrentOffset
  4683 ;;		_WriteCurrentOffset
  4684 ;;		_AdjustCurrentOffset
  4685 ;;		_UpdateControlRegister
  4686 ;;		_ReadRAM
  4687 ;;		_WriteRAM
  4688 ;;		_CopyEEPROM
  4689 ;;		_RecallEEPROM
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text27
  4694  001DCE                     __ptext27:
  4695                           	opt stack 0
  4696  001DCE                     _OWReset:
  4697                           	opt stack 22
  4698                           
  4699                           ;OneWire.c: 43: BOOL result = FALSE;
  4700                           
  4701                           ;incstack = 0
  4702  001DCE  0E00               	movlw	0
  4703  001DD0  0100               	movlb	0	; () banked
  4704  001DD2  6FCE               	movwf	OWReset@result& (0+255),b
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4708  001DD4  9690               	bcf	3984,3,c	;volatile
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4712  001DD6  9699               	bcf	3993,3,c	;volatile
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4716  001DD8  0EF0               	movlw	240
  4717  001DDA                     u6347:
  4718  001DDA  D000               	nop2	
  4719  001DDC  2EE8               	decfsz	wreg,f,c
  4720  001DDE  D7FD               	goto	u6347
  4721                           
  4722                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4723  001DE0  8699               	bsf	3993,3,c	;volatile
  4724                           
  4725                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4726  001DE2  0E38               	movlw	56
  4727  001DE4                     u6357:
  4728  001DE4  2EE8               	decfsz	wreg,f,c
  4729  001DE6  D7FE               	goto	u6357
  4730  001DE8  D000               	nop2		;nop
  4731                           
  4732                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4733  001DEA  B690               	btfsc	3984,3,c	;volatile
  4734  001DEC  D004               	goto	l6019
  4735                           
  4736                           ;OneWire.c: 54: {
  4737                           ;OneWire.c: 55: result = TRUE;
  4738  001DEE  0E01               	movlw	1
  4739  001DF0  0100               	movlb	0	; () banked
  4740  001DF2  6FCE               	movwf	OWReset@result& (0+255),b
  4741  001DF4  D000               	goto	l6019
  4742  001DF6                     l6019:
  4743                           
  4744                           ;OneWire.c: 56: }
  4745                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4746  001DF6  0EFD               	movlw	253
  4747  001DF8                     u6367:
  4748  001DF8  F000               	nop	
  4749  001DFA  2EE8               	decfsz	wreg,f,c
  4750  001DFC  D7FD               	goto	u6367
  4751                           
  4752                           ;OneWire.c: 59: return result;
  4753  001DFE  0100               	movlb	0	; () banked
  4754  001E00  51CE               	movf	OWReset@result& (0+255),w,b
  4755  001E02  D000               	goto	l549
  4756  001E04                     l549:
  4757                           
  4758                           ; BSR set to: 0
  4759  001E04  0012               	return		;funcret
  4760  001E06                     __end_of_OWReset:
  4761                           	opt stack 0
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           indf2	equ	0xFDF
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function _OWReadByte *****************
  4774 ;; Defined at:
  4775 ;;		line 163 in file "BatteryLib/OneWire.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  i               1   18[BANK0 ] unsigned char 
  4780 ;;  result          1   17[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      unsigned char 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        2 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    8
  4797 ;; This function calls:
  4798 ;;		_OWReadBit
  4799 ;; This function is called by:
  4800 ;;		_ReadVoltage
  4801 ;;		_ReadCurrent
  4802 ;;		_ReadAccumulatedCurrent
  4803 ;;		_ReadTemperature
  4804 ;;		_ReadCurrentOffset
  4805 ;;		_AdjustCurrentOffset
  4806 ;;		_ReadRAM
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text28
  4811  001E06                     __ptext28:
  4812                           	opt stack 0
  4813  001E06                     _OWReadByte:
  4814                           	opt stack 21
  4815                           
  4816                           ;OneWire.c: 165: BYTE i, result=0;
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;incstack = 0
  4820  001E06  0E00               	movlw	0
  4821  001E08  0100               	movlb	0	; () banked
  4822  001E0A  6FCF               	movwf	OWReadByte@result& (0+255),b
  4823                           
  4824                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4825  001E0C  0E00               	movlw	0
  4826  001E0E  0100               	movlb	0	; () banked
  4827  001E10  6FD0               	movwf	OWReadByte@i& (0+255),b
  4828  001E12                     l6041:
  4829                           
  4830                           ; BSR set to: 0
  4831  001E12  0E07               	movlw	7
  4832  001E14  0100               	movlb	0	; () banked
  4833  001E16  65D0               	cpfsgt	OWReadByte@i& (0+255),b
  4834  001E18  D001               	goto	l6045
  4835                           
  4836                           ; BSR set to: 0
  4837  001E1A  D00D               	goto	l6053
  4838  001E1C                     l6045:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;OneWire.c: 168: {
  4842                           ;OneWire.c: 169: result >>= 1;
  4843  001E1C  0100               	movlb	0	; () banked
  4844  001E1E  90D8               	bcf	status,0,c
  4845  001E20  33CF               	rrcf	OWReadByte@result& (0+255),f,b
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;OneWire.c: 171: if (OWReadBit())
  4849  001E22  ECF3  F00F         	call	_OWReadBit	;wreg free
  4850  001E26  0900               	iorlw	0
  4851  001E28  B4D8               	btfsc	status,2,c
  4852  001E2A  D002               	goto	l567
  4853                           
  4854                           ;OneWire.c: 172: result |= 0x80;
  4855  001E2C  0100               	movlb	0	; () banked
  4856  001E2E  8FCF               	bsf	OWReadByte@result& (0+255),7,b
  4857  001E30                     l567:
  4858  001E30  0100               	movlb	0	; () banked
  4859  001E32  2BD0               	incf	OWReadByte@i& (0+255),f,b
  4860  001E34  D7EE               	goto	l6041
  4861  001E36                     l6053:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;OneWire.c: 173: }
  4865                           ;OneWire.c: 174: return result;
  4866  001E36  0100               	movlb	0	; () banked
  4867  001E38  51CF               	movf	OWReadByte@result& (0+255),w,b
  4868  001E3A  D000               	goto	l568
  4869  001E3C                     l568:
  4870                           
  4871                           ; BSR set to: 0
  4872  001E3C  0012               	return		;funcret
  4873  001E3E                     __end_of_OWReadByte:
  4874                           	opt stack 0
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           indf2	equ	0xFDF
  4880                           postinc2	equ	0xFDE
  4881                           postdec2	equ	0xFDD
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886 ;; *************** function _OWReadBit *****************
  4887 ;; Defined at:
  4888 ;;		line 112 in file "BatteryLib/OneWire.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  result          1   16[BANK0 ] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;Total ram usage:        1 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    7
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_OWReadByte
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text29
  4917  001FE6                     __ptext29:
  4918                           	opt stack 0
  4919  001FE6                     _OWReadBit:
  4920                           	opt stack 21
  4921                           
  4922                           ;OneWire.c: 114: BYTE result;
  4923                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;incstack = 0
  4927  001FE6  9690               	bcf	3984,3,c	;volatile
  4928                           
  4929                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4930  001FE8  9699               	bcf	3993,3,c	;volatile
  4931                           
  4932                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4933  001FEA  0E04               	movlw	4
  4934  001FEC                     u6377:
  4935  001FEC  2EE8               	decfsz	wreg,f,c
  4936  001FEE  D7FE               	goto	u6377
  4937                           
  4938                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4939  001FF0  8699               	bsf	3993,3,c	;volatile
  4940                           
  4941                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4942  001FF2  0E08               	movlw	8
  4943  001FF4                     u6387:
  4944  001FF4  2EE8               	decfsz	wreg,f,c
  4945  001FF6  D7FE               	goto	u6387
  4946  001FF8  F000               	nop	
  4947                           
  4948                           ;OneWire.c: 127: result = PORTHbits.RH3;
  4949  001FFA  0E00               	movlw	0
  4950  001FFC  B687               	btfsc	3975,3,c	;volatile
  4951  001FFE  0E01               	movlw	1
  4952  002000  0100               	movlb	0	; () banked
  4953  002002  6FCE               	movwf	OWReadBit@result& (0+255),b
  4954                           
  4955                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  4956  002004  0E2D               	movlw	45
  4957  002006                     u6397:
  4958  002006  2EE8               	decfsz	wreg,f,c
  4959  002008  D7FE               	goto	u6397
  4960  00200A  D000               	nop2		;nop
  4961                           
  4962                           ;OneWire.c: 131: return result & 0x01;
  4963  00200C  0100               	movlb	0	; () banked
  4964  00200E  51CE               	movf	OWReadBit@result& (0+255),w,b
  4965  002010  0B01               	andlw	1
  4966  002012  D000               	goto	l557
  4967  002014                     l557:
  4968                           
  4969                           ; BSR set to: 0
  4970  002014  0012               	return		;funcret
  4971  002016                     __end_of_OWReadBit:
  4972                           	opt stack 0
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           indf2	equ	0xFDF
  4978                           postinc2	equ	0xFDE
  4979                           postdec2	equ	0xFDD
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _ReadMillis1 *****************
  4985 ;; Defined at:
  4986 ;;		line 13 in file "MillisecondTimer.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   16[BANK0 ] unsigned int 
  4993 ;; Registers used:
  4994 ;;		None
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;Total ram usage:        2 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    7
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text30
  5015  00247A                     __ptext30:
  5016                           	opt stack 0
  5017  00247A                     _ReadMillis1:
  5018                           	opt stack 23
  5019                           
  5020                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;incstack = 0
  5024  00247A  C00F  F0CE         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  5025  00247E  C010  F0CF         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  5026  002482  0012               	return		;funcret
  5027  002484                     __end_of_ReadMillis1:
  5028                           	opt stack 0
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           postinc0	equ	0xFEE
  5032                           wreg	equ	0xFE8
  5033                           indf2	equ	0xFDF
  5034                           postinc2	equ	0xFDE
  5035                           postdec2	equ	0xFDD
  5036                           fsr2h	equ	0xFDA
  5037                           fsr2l	equ	0xFD9
  5038                           status	equ	0xFD8
  5039                           
  5040 ;; *************** function _ReadMillis0 *****************
  5041 ;; Defined at:
  5042 ;;		line 7 in file "MillisecondTimer.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  2   16[BANK0 ] unsigned int 
  5049 ;; Registers used:
  5050 ;;		None
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;Total ram usage:        2 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    7
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_main
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text31
  5071  002484                     __ptext31:
  5072                           	opt stack 0
  5073  002484                     _ReadMillis0:
  5074                           	opt stack 23
  5075                           
  5076                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  5077                           
  5078                           ;incstack = 0
  5079  002484  C00D  F0CE         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  5080  002488  C00E  F0CF         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  5081  00248C  0012               	return		;funcret
  5082  00248E                     __end_of_ReadMillis0:
  5083                           	opt stack 0
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function _ReadEchoLength *****************
  5096 ;; Defined at:
  5097 ;;		line 85 in file "Ultrasound.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2   16[BANK0 ] unsigned int 
  5104 ;; Registers used:
  5105 ;;		None
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;Total ram usage:        2 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    7
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text32
  5126  00248E                     __ptext32:
  5127                           	opt stack 0
  5128  00248E                     _ReadEchoLength:
  5129                           	opt stack 23
  5130                           
  5131                           ;Ultrasound.c: 87: return (echo_time);
  5132                           
  5133                           ;incstack = 0
  5134  00248E  C00B  F0CE         	movff	_echo_time,?_ReadEchoLength	;volatile
  5135  002492  C00C  F0CF         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  5136  002496  0012               	return		;funcret
  5137  002498                     __end_of_ReadEchoLength:
  5138                           	opt stack 0
  5139                           prodh	equ	0xFF4
  5140                           prodl	equ	0xFF3
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           indf2	equ	0xFDF
  5144                           postinc2	equ	0xFDE
  5145                           postdec2	equ	0xFDD
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _LoadPIDValues *****************
  5151 ;; Defined at:
  5152 ;;		line 609 in file "FastBuggy17_Main_Code_TUNING.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;		None               void
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:   11
  5173 ;; This function calls:
  5174 ;;		_PB1pressed
  5175 ;;		_PB2pressed
  5176 ;;		_ReadCharEEPROM
  5177 ;;		_ReadIntEEPROM
  5178 ;;		_SendStatus
  5179 ;;		_SetPIDValues
  5180 ;;		_WriteCharEEPROM
  5181 ;;		_WriteIntEEPROM
  5182 ;; This function is called by:
  5183 ;;		_main
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text33
  5188  000BD8                     __ptext33:
  5189                           	opt stack 0
  5190  000BD8                     _LoadPIDValues:
  5191                           	opt stack 19
  5192                           
  5193                           ;FastBuggy17_Main_Code_TUNING.c: 610: SendStatus(0x07);
  5194                           
  5195                           ;incstack = 0
  5196  000BD8  0E07               	movlw	7
  5197  000BDA  ECCA  F00E         	call	_SendStatus
  5198  000BDE  D000               	goto	l6509
  5199  000BE0                     l6509:
  5200                           
  5201                           ;FastBuggy17_Main_Code_TUNING.c: 613: if(PB1pressed() == 1) {
  5202  000BE0  EC4D  F00D         	call	_PB1pressed	;wreg free
  5203  000BE4  06E8               	decf	wreg,f,c
  5204  000BE6  A4D8               	btfss	status,2,c
  5205  000BE8  D03C               	goto	l6523
  5206                           
  5207                           ;FastBuggy17_Main_Code_TUNING.c: 614: PID_Kp = 20;
  5208  000BEA  0E00               	movlw	0
  5209  000BEC  0100               	movlb	0	; () banked
  5210  000BEE  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5211  000BF0  0E14               	movlw	20
  5212  000BF2  6F96               	movwf	_PID_Kp& (0+255),b
  5213                           
  5214                           ;FastBuggy17_Main_Code_TUNING.c: 615: PID_Kd = 0;
  5215  000BF4  0E00               	movlw	0
  5216  000BF6  0100               	movlb	0	; () banked
  5217  000BF8  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5218  000BFA  0E00               	movlw	0
  5219  000BFC  6F92               	movwf	_PID_Kd& (0+255),b
  5220                           
  5221                           ;FastBuggy17_Main_Code_TUNING.c: 616: PID_Ki = 0;
  5222  000BFE  0E00               	movlw	0
  5223  000C00  0100               	movlb	0	; () banked
  5224  000C02  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5225  000C04  0E00               	movlw	0
  5226  000C06  6F94               	movwf	_PID_Ki& (0+255),b
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;FastBuggy17_Main_Code_TUNING.c: 617: WriteIntEEPROM(0x0010, PID_Kp);
  5230  000C08  0E00               	movlw	0
  5231  000C0A  0100               	movlb	0	; () banked
  5232  000C0C  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5233  000C0E  0E10               	movlw	16
  5234  000C10  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5235  000C12  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5236  000C16  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5237  000C1A  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5238                           
  5239                           ;FastBuggy17_Main_Code_TUNING.c: 618: WriteIntEEPROM(0x0012, PID_Kd);
  5240  000C1E  0E00               	movlw	0
  5241  000C20  0100               	movlb	0	; () banked
  5242  000C22  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5243  000C24  0E12               	movlw	18
  5244  000C26  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5245  000C28  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5246  000C2C  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5247  000C30  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5248                           
  5249                           ;FastBuggy17_Main_Code_TUNING.c: 619: WriteIntEEPROM(0x0014, PID_Ki);
  5250  000C34  0E00               	movlw	0
  5251  000C36  0100               	movlb	0	; () banked
  5252  000C38  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5253  000C3A  0E14               	movlw	20
  5254  000C3C  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5255  000C3E  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5256  000C42  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5257  000C46  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5258                           
  5259                           ;FastBuggy17_Main_Code_TUNING.c: 621: WriteCharEEPROM(0x000D, 1);
  5260  000C4A  0E00               	movlw	0
  5261  000C4C  0100               	movlb	0	; () banked
  5262  000C4E  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5263  000C50  0E0D               	movlw	13
  5264  000C52  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5265  000C54  0E01               	movlw	1
  5266  000C56  0100               	movlb	0	; () banked
  5267  000C58  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5268  000C5A  ECA5  F011         	call	_WriteCharEEPROM	;wreg free
  5269                           
  5270                           ;FastBuggy17_Main_Code_TUNING.c: 622: break;
  5271  000C5E  D036               	goto	l943
  5272                           
  5273                           ;FastBuggy17_Main_Code_TUNING.c: 623: }
  5274  000C60  D7BF               	goto	l6509
  5275  000C62                     l6523:
  5276                           
  5277                           ;FastBuggy17_Main_Code_TUNING.c: 624: else if(PB2pressed() == 1) {
  5278  000C62  ECEF  F00C         	call	_PB2pressed	;wreg free
  5279  000C66  06E8               	decf	wreg,f,c
  5280  000C68  A4D8               	btfss	status,2,c
  5281  000C6A  D7BA               	goto	l6509
  5282                           
  5283                           ;FastBuggy17_Main_Code_TUNING.c: 625: if(ReadCharEEPROM(0x000D) == 0xFF) {
  5284  000C6C  0E00               	movlw	0
  5285  000C6E  0100               	movlb	0	; () banked
  5286  000C70  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5287  000C72  0E0D               	movlw	13
  5288  000C74  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  5289  000C76  ECDB  F011         	call	_ReadCharEEPROM	;wreg free
  5290  000C7A  0AFF               	xorlw	255
  5291  000C7C  A4D8               	btfss	status,2,c
  5292  000C7E  D003               	goto	l6529
  5293                           
  5294                           ;FastBuggy17_Main_Code_TUNING.c: 626: SetPIDValues();
  5295  000C80  EC49  F004         	call	_SetPIDValues	;wreg free
  5296                           
  5297                           ;FastBuggy17_Main_Code_TUNING.c: 627: }
  5298  000C84  D023               	goto	l943
  5299  000C86                     l6529:
  5300                           
  5301                           ;FastBuggy17_Main_Code_TUNING.c: 628: else {
  5302                           ;FastBuggy17_Main_Code_TUNING.c: 629: PID_Kp = ReadIntEEPROM(0x0010);
  5303  000C86  0E00               	movlw	0
  5304  000C88  0100               	movlb	0	; () banked
  5305  000C8A  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5306  000C8C  0E10               	movlw	16
  5307  000C8E  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5308  000C90  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  5309  000C94  C0D0  F096         	movff	?_ReadIntEEPROM,_PID_Kp
  5310  000C98  C0D1  F097         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5311                           
  5312                           ;FastBuggy17_Main_Code_TUNING.c: 630: PID_Kd = ReadIntEEPROM(0x0012);
  5313  000C9C  0E00               	movlw	0
  5314  000C9E  0100               	movlb	0	; () banked
  5315  000CA0  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5316  000CA2  0E12               	movlw	18
  5317  000CA4  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5318  000CA6  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  5319  000CAA  C0D0  F092         	movff	?_ReadIntEEPROM,_PID_Kd
  5320  000CAE  C0D1  F093         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5321                           
  5322                           ;FastBuggy17_Main_Code_TUNING.c: 631: PID_Ki = ReadIntEEPROM(0x0014);
  5323  000CB2  0E00               	movlw	0
  5324  000CB4  0100               	movlb	0	; () banked
  5325  000CB6  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5326  000CB8  0E14               	movlw	20
  5327  000CBA  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5328  000CBC  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  5329  000CC0  C0D0  F094         	movff	?_ReadIntEEPROM,_PID_Ki
  5330  000CC4  C0D1  F095         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5331                           
  5332                           ;FastBuggy17_Main_Code_TUNING.c: 632: }
  5333                           ;FastBuggy17_Main_Code_TUNING.c: 633: break;
  5334  000CC8  D001               	goto	l943
  5335  000CCA  D78A               	goto	l6509
  5336  000CCC                     l943:
  5337  000CCC  0012               	return		;funcret
  5338  000CCE                     __end_of_LoadPIDValues:
  5339                           	opt stack 0
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _SetPIDValues *****************
  5352 ;; Defined at:
  5353 ;;		line 573 in file "FastBuggy17_Main_Code_TUNING.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  char_index      1   28[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;		None               void
  5360 ;; Registers used:
  5361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;Total ram usage:        4 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   10
  5374 ;; This function calls:
  5375 ;;		_FlushRxBuf
  5376 ;;		_GetCharRxBuf
  5377 ;;		_PutCharRxBuf
  5378 ;;		_Read1USART
  5379 ;;		_SendStatus
  5380 ;;		_WriteCharEEPROM
  5381 ;;		_WriteIntEEPROM
  5382 ;; This function is called by:
  5383 ;;		_LoadPIDValues
  5384 ;;		_main
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text34
  5389  000892                     __ptext34:
  5390                           	opt stack 0
  5391  000892                     _SetPIDValues:
  5392                           	opt stack 20
  5393                           
  5394                           ;FastBuggy17_Main_Code_TUNING.c: 574: SendStatus(0x08);
  5395                           
  5396                           ;incstack = 0
  5397  000892  0E08               	movlw	8
  5398  000894  ECCA  F00E         	call	_SendStatus
  5399                           
  5400                           ;FastBuggy17_Main_Code_TUNING.c: 576: unsigned char char_index;
  5401                           ;FastBuggy17_Main_Code_TUNING.c: 578: FlushRxBuf();
  5402  000898  EC72  F00F         	call	_FlushRxBuf	;wreg free
  5403                           
  5404                           ;FastBuggy17_Main_Code_TUNING.c: 580: while((PIR1bits.RCIF) == 0);
  5405  00089C  D000               	goto	l918
  5406  00089E                     l918:
  5407  00089E  AA9E               	btfss	3998,5,c	;volatile
  5408  0008A0  D7FE               	goto	l918
  5409                           
  5410                           ;FastBuggy17_Main_Code_TUNING.c: 582: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5411  0008A2  0E00               	movlw	0
  5412  0008A4  0100               	movlb	0	; () banked
  5413  0008A6  6FDA               	movwf	SetPIDValues@char_index& (0+255),b
  5414  0008A8                     l6215:
  5415                           
  5416                           ; BSR set to: 0
  5417  0008A8  0E08               	movlw	8
  5418  0008AA  0100               	movlb	0	; () banked
  5419  0008AC  65DA               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5420  0008AE  D002               	goto	l923
  5421                           
  5422                           ; BSR set to: 0
  5423  0008B0  D00B               	goto	l6225
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;FastBuggy17_Main_Code_TUNING.c: 583: while(!(PIR1bits.RCIF));
  5427  0008B2  D000               	goto	l923
  5428  0008B4                     l923:
  5429  0008B4  AA9E               	btfss	3998,5,c	;volatile
  5430  0008B6  D7FE               	goto	l923
  5431                           
  5432                           ;FastBuggy17_Main_Code_TUNING.c: 585: PutCharRxBuf(Read1USART());
  5433  0008B8  EC89  F010         	call	_Read1USART	;wreg free
  5434  0008BC  EC0D  F00E         	call	_PutCharRxBuf
  5435  0008C0  0100               	movlb	0	; () banked
  5436  0008C2  2BDA               	incf	SetPIDValues@char_index& (0+255),f,b
  5437  0008C4  D7F1               	goto	l6215
  5438                           
  5439                           ; BSR set to: 0
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;FastBuggy17_Main_Code_TUNING.c: 586: }
  5443                           ;FastBuggy17_Main_Code_TUNING.c: 588: while(GetCharRxBuf() != 0xAA);
  5444                           
  5445                           ; BSR set to: 0
  5446  0008C6  D000               	goto	l6225
  5447  0008C8                     l6225:
  5448  0008C8  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5449  0008CC  0AAA               	xorlw	170
  5450  0008CE  B4D8               	btfsc	status,2,c
  5451  0008D0  D002               	goto	l6227
  5452  0008D2  D7FA               	goto	l6225
  5453                           
  5454                           ;FastBuggy17_Main_Code_TUNING.c: 589: while(GetCharRxBuf() != 0x01);
  5455  0008D4  D000               	goto	l6227
  5456  0008D6                     l6227:
  5457  0008D6  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5458  0008DA  06E8               	decf	wreg,f,c
  5459  0008DC  A4D8               	btfss	status,2,c
  5460  0008DE  D7FB               	goto	l6227
  5461                           
  5462                           ;FastBuggy17_Main_Code_TUNING.c: 591: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5463  0008E0  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5464  0008E4  0100               	movlb	0	; () banked
  5465  0008E6  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5466  0008E8  0100               	movlb	0	; () banked
  5467  0008EA  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5468  0008EC  0100               	movlb	0	; () banked
  5469  0008EE  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5470  0008F0  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5471  0008F2  0E00               	movlw	0
  5472  0008F4  0100               	movlb	0	; () banked
  5473  0008F6  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5474  0008F8  0100               	movlb	0	; () banked
  5475  0008FA  6F96               	movwf	_PID_Kp& (0+255),b
  5476  0008FC  0EFF               	movlw	255
  5477  0008FE  0100               	movlb	0	; () banked
  5478  000900  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5479  000902  0100               	movlb	0	; () banked
  5480  000904  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5481                           
  5482                           ;FastBuggy17_Main_Code_TUNING.c: 592: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5483  000906  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5484  00090A  0100               	movlb	0	; () banked
  5485  00090C  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5486  00090E  0100               	movlb	0	; () banked
  5487  000910  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5488  000912  0100               	movlb	0	; () banked
  5489  000914  1396               	iorwf	_PID_Kp& (0+255),f,b
  5490                           
  5491                           ;FastBuggy17_Main_Code_TUNING.c: 594: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5492  000916  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5493  00091A  0100               	movlb	0	; () banked
  5494  00091C  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5495  00091E  0100               	movlb	0	; () banked
  5496  000920  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5497  000922  0100               	movlb	0	; () banked
  5498  000924  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5499  000926  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5500  000928  0E00               	movlw	0
  5501  00092A  0100               	movlb	0	; () banked
  5502  00092C  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5503  00092E  0100               	movlb	0	; () banked
  5504  000930  6F92               	movwf	_PID_Kd& (0+255),b
  5505  000932  0EFF               	movlw	255
  5506  000934  0100               	movlb	0	; () banked
  5507  000936  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5508  000938  0100               	movlb	0	; () banked
  5509  00093A  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5510                           
  5511                           ;FastBuggy17_Main_Code_TUNING.c: 595: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5512  00093C  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5513  000940  0100               	movlb	0	; () banked
  5514  000942  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5515  000944  0100               	movlb	0	; () banked
  5516  000946  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5517  000948  0100               	movlb	0	; () banked
  5518  00094A  1392               	iorwf	_PID_Kd& (0+255),f,b
  5519                           
  5520                           ;FastBuggy17_Main_Code_TUNING.c: 597: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5521  00094C  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5522  000950  0100               	movlb	0	; () banked
  5523  000952  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5524  000954  0100               	movlb	0	; () banked
  5525  000956  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5526  000958  0100               	movlb	0	; () banked
  5527  00095A  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5528  00095C  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5529  00095E  0E00               	movlw	0
  5530  000960  0100               	movlb	0	; () banked
  5531  000962  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5532  000964  0100               	movlb	0	; () banked
  5533  000966  6F94               	movwf	_PID_Ki& (0+255),b
  5534  000968  0EFF               	movlw	255
  5535  00096A  0100               	movlb	0	; () banked
  5536  00096C  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5537  00096E  0100               	movlb	0	; () banked
  5538  000970  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5539                           
  5540                           ;FastBuggy17_Main_Code_TUNING.c: 598: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5541  000972  ECA6  F00D         	call	_GetCharRxBuf	;wreg free
  5542  000976  0100               	movlb	0	; () banked
  5543  000978  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5544  00097A  0100               	movlb	0	; () banked
  5545  00097C  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5546  00097E  0100               	movlb	0	; () banked
  5547  000980  1394               	iorwf	_PID_Ki& (0+255),f,b
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;FastBuggy17_Main_Code_TUNING.c: 600: WriteIntEEPROM(0x0010, PID_Kp);
  5551  000982  0E00               	movlw	0
  5552  000984  0100               	movlb	0	; () banked
  5553  000986  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5554  000988  0E10               	movlw	16
  5555  00098A  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5556  00098C  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5557  000990  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5558  000994  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5559                           
  5560                           ;FastBuggy17_Main_Code_TUNING.c: 601: WriteIntEEPROM(0x0012, PID_Kd);
  5561  000998  0E00               	movlw	0
  5562  00099A  0100               	movlb	0	; () banked
  5563  00099C  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5564  00099E  0E12               	movlw	18
  5565  0009A0  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5566  0009A2  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5567  0009A6  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5568  0009AA  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5569                           
  5570                           ;FastBuggy17_Main_Code_TUNING.c: 602: WriteIntEEPROM(0x0014, PID_Ki);
  5571  0009AE  0E00               	movlw	0
  5572  0009B0  0100               	movlb	0	; () banked
  5573  0009B2  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5574  0009B4  0E14               	movlw	20
  5575  0009B6  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5576  0009B8  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5577  0009BC  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5578  0009C0  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  5579                           
  5580                           ;FastBuggy17_Main_Code_TUNING.c: 604: WriteCharEEPROM(0x000D, 1);
  5581  0009C4  0E00               	movlw	0
  5582  0009C6  0100               	movlb	0	; () banked
  5583  0009C8  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5584  0009CA  0E0D               	movlw	13
  5585  0009CC  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5586  0009CE  0E01               	movlw	1
  5587  0009D0  0100               	movlb	0	; () banked
  5588  0009D2  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5589  0009D4  ECA5  F011         	call	_WriteCharEEPROM	;wreg free
  5590  0009D8  0012               	return		;funcret
  5591  0009DA                     __end_of_SetPIDValues:
  5592                           	opt stack 0
  5593                           prodh	equ	0xFF4
  5594                           prodl	equ	0xFF3
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           fsr2h	equ	0xFDA
  5601                           fsr2l	equ	0xFD9
  5602                           status	equ	0xFD8
  5603                           
  5604 ;; *************** function _PutCharRxBuf *****************
  5605 ;; Defined at:
  5606 ;;		line 25 in file "Wireless.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  ch              1    wreg     unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  ch              1   23[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;Total ram usage:        2 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    8
  5627 ;; This function calls:
  5628 ;;		___awmod
  5629 ;; This function is called by:
  5630 ;;		_SetPIDValues
  5631 ;;		_WirelessRx_ISR
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text35
  5636  001C1A                     __ptext35:
  5637                           	opt stack 0
  5638  001C1A                     _PutCharRxBuf:
  5639                           	opt stack 21
  5640                           
  5641                           ;incstack = 0
  5642                           ;PutCharRxBuf@ch stored from wreg
  5643  001C1A  0100               	movlb	0	; () banked
  5644  001C1C  6FD5               	movwf	PutCharRxBuf@ch& (0+255),b
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5648  001C1E  501F               	movf	_put_Rx_index,w,c
  5649  001C20  0D01               	mullw	1
  5650  001C22  0E60               	movlw	low _Rx_buffer
  5651  001C24  24F3               	addwf	prodl,w,c
  5652  001C26  6ED9               	movwf	fsr2l,c
  5653  001C28  0E00               	movlw	high _Rx_buffer
  5654  001C2A  20F4               	addwfc	prodh,w,c
  5655  001C2C  6EDA               	movwf	fsr2h,c
  5656  001C2E  C0D5  FFDF         	movff	PutCharRxBuf@ch,indf2
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5660  001C32  C01F  F0D4         	movff	_put_Rx_index,??_PutCharRxBuf
  5661  001C36  0E01               	movlw	1
  5662  001C38  0100               	movlb	0	; () banked
  5663  001C3A  27D4               	addwf	??_PutCharRxBuf& (0+255),f,b
  5664  001C3C  0100               	movlb	0	; () banked
  5665  001C3E  51D4               	movf	??_PutCharRxBuf& (0+255),w,b
  5666  001C40  0100               	movlb	0	; () banked
  5667  001C42  6FCE               	movwf	___awmod@dividend& (0+255),b
  5668  001C44  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5669  001C46  0E00               	movlw	0
  5670  001C48  0100               	movlb	0	; () banked
  5671  001C4A  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5672  001C4C  0E19               	movlw	25
  5673  001C4E  6FD0               	movwf	___awmod@divisor& (0+255),b
  5674  001C50  EC19  F008         	call	___awmod	;wreg free
  5675  001C54  0100               	movlb	0	; () banked
  5676  001C56  51CE               	movf	?___awmod& (0+255),w,b
  5677  001C58  6E1F               	movwf	_put_Rx_index,c
  5678                           
  5679                           ; BSR set to: 0
  5680  001C5A  0012               	return		;funcret
  5681  001C5C                     __end_of_PutCharRxBuf:
  5682                           	opt stack 0
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           postinc0	equ	0xFEE
  5686                           wreg	equ	0xFE8
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _GetCharRxBuf *****************
  5695 ;; Defined at:
  5696 ;;		line 31 in file "Wireless.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  ch              1   23[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        2 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    8
  5717 ;; This function calls:
  5718 ;;		___awmod
  5719 ;; This function is called by:
  5720 ;;		_SetPIDValues
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text36
  5725  001B4C                     __ptext36:
  5726                           	opt stack 0
  5727  001B4C                     _GetCharRxBuf:
  5728                           	opt stack 21
  5729                           
  5730                           ;Wireless.c: 32: unsigned char ch;
  5731                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;incstack = 0
  5735  001B4C  501D               	movf	_get_Rx_index,w,c
  5736  001B4E  0D01               	mullw	1
  5737  001B50  0E60               	movlw	low _Rx_buffer
  5738  001B52  24F3               	addwf	prodl,w,c
  5739  001B54  6ED9               	movwf	fsr2l,c
  5740  001B56  0E00               	movlw	high _Rx_buffer
  5741  001B58  20F4               	addwfc	prodh,w,c
  5742  001B5A  6EDA               	movwf	fsr2h,c
  5743  001B5C  50DF               	movf	indf2,w,c
  5744  001B5E  0100               	movlb	0	; () banked
  5745  001B60  6FD5               	movwf	GetCharRxBuf@ch& (0+255),b
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5749  001B62  C01D  F0D4         	movff	_get_Rx_index,??_GetCharRxBuf
  5750  001B66  0E01               	movlw	1
  5751  001B68  0100               	movlb	0	; () banked
  5752  001B6A  27D4               	addwf	??_GetCharRxBuf& (0+255),f,b
  5753  001B6C  0100               	movlb	0	; () banked
  5754  001B6E  51D4               	movf	??_GetCharRxBuf& (0+255),w,b
  5755  001B70  0100               	movlb	0	; () banked
  5756  001B72  6FCE               	movwf	___awmod@dividend& (0+255),b
  5757  001B74  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5758  001B76  0E00               	movlw	0
  5759  001B78  0100               	movlb	0	; () banked
  5760  001B7A  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5761  001B7C  0E19               	movlw	25
  5762  001B7E  6FD0               	movwf	___awmod@divisor& (0+255),b
  5763  001B80  EC19  F008         	call	___awmod	;wreg free
  5764  001B84  0100               	movlb	0	; () banked
  5765  001B86  51CE               	movf	?___awmod& (0+255),w,b
  5766  001B88  6E1D               	movwf	_get_Rx_index,c
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;Wireless.c: 37: return(ch);
  5770  001B8A  0100               	movlb	0	; () banked
  5771  001B8C  51D5               	movf	GetCharRxBuf@ch& (0+255),w,b
  5772  001B8E  D000               	goto	l286
  5773  001B90                     l286:
  5774                           
  5775                           ; BSR set to: 0
  5776  001B90  0012               	return		;funcret
  5777  001B92                     __end_of_GetCharRxBuf:
  5778                           	opt stack 0
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           postinc0	equ	0xFEE
  5782                           wreg	equ	0xFE8
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _PB2pressed *****************
  5791 ;; Defined at:
  5792 ;;		line 435 in file "FastBuggy17_Main_Code_TUNING.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      unsigned char 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    9
  5813 ;; This function calls:
  5814 ;;		_CommandAvailable
  5815 ;;		_GetCommand
  5816 ;;		_ReadMillis2
  5817 ;;		_ResetMillis2
  5818 ;; This function is called by:
  5819 ;;		_LoadPIDValues
  5820 ;;		_main
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text37
  5825  0019DE                     __ptext37:
  5826                           	opt stack 0
  5827  0019DE                     _PB2pressed:
  5828                           	opt stack 21
  5829                           
  5830                           ;FastBuggy17_Main_Code_TUNING.c: 436: if(CommandAvailable() == 1) {
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;incstack = 0
  5834  0019DE  EC20  F012         	call	_CommandAvailable	;wreg free
  5835  0019E2  06E8               	decf	wreg,f,c
  5836  0019E4  A4D8               	btfss	status,2,c
  5837  0019E6  D00B               	goto	l858
  5838                           
  5839                           ;FastBuggy17_Main_Code_TUNING.c: 437: if(GetCommand() == 0x06) {
  5840  0019E8  EC5A  F012         	call	_GetCommand	;wreg free
  5841  0019EC  0A06               	xorlw	6
  5842  0019EE  A4D8               	btfss	status,2,c
  5843  0019F0  D01F               	goto	l6175
  5844  0019F2  D01B               	goto	l6169
  5845                           
  5846                           ;FastBuggy17_Main_Code_TUNING.c: 438: return(1);
  5847  0019F4  D022               	goto	l860
  5848                           
  5849                           ;FastBuggy17_Main_Code_TUNING.c: 439: }
  5850  0019F6  D01F               	goto	l6179
  5851  0019F8  D01B               	goto	l6175
  5852                           
  5853                           ;FastBuggy17_Main_Code_TUNING.c: 440: else {
  5854                           ;FastBuggy17_Main_Code_TUNING.c: 441: return(0);
  5855  0019FA  D01F               	goto	l860
  5856                           
  5857                           ;FastBuggy17_Main_Code_TUNING.c: 442: }
  5858                           ;FastBuggy17_Main_Code_TUNING.c: 443: }
  5859  0019FC  D01C               	goto	l6179
  5860  0019FE                     l858:
  5861                           
  5862                           ;FastBuggy17_Main_Code_TUNING.c: 444: else if(PORTBbits.RB2 == 0) {
  5863  0019FE  B481               	btfsc	3969,2,c	;volatile
  5864  001A00  D003               	goto	l863
  5865  001A02  D016               	goto	l6175
  5866                           
  5867                           ;FastBuggy17_Main_Code_TUNING.c: 445: return(0);
  5868  001A04  D01A               	goto	l860
  5869                           
  5870                           ;FastBuggy17_Main_Code_TUNING.c: 446: }
  5871  001A06  D017               	goto	l6179
  5872  001A08                     l863:
  5873                           
  5874                           ;FastBuggy17_Main_Code_TUNING.c: 447: else if(PORTBbits.RB2 == 1) {
  5875  001A08  A481               	btfss	3969,2,c	;volatile
  5876  001A0A  D015               	goto	l6179
  5877                           
  5878                           ;FastBuggy17_Main_Code_TUNING.c: 448: ResetMillis2();
  5879  001A0C  EC4C  F012         	call	_ResetMillis2	;wreg free
  5880                           
  5881                           ;FastBuggy17_Main_Code_TUNING.c: 449: while(ReadMillis2() < 10);
  5882  001A10  D000               	goto	l6167
  5883  001A12                     l6167:
  5884  001A12  EC51  F012         	call	_ReadMillis2	;wreg free
  5885  001A16  0100               	movlb	0	; () banked
  5886  001A18  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5887  001A1A  E105               	bnz	u5220
  5888  001A1C  0E0A               	movlw	10
  5889  001A1E  0100               	movlb	0	; () banked
  5890  001A20  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  5891  001A22  A0D8               	btfss	status,0,c
  5892  001A24  D7F6               	goto	l6167
  5893  001A26                     u5220:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;FastBuggy17_Main_Code_TUNING.c: 450: if(PORTBbits.RB2 == 1) {
  5897  001A26  A481               	btfss	3969,2,c	;volatile
  5898  001A28  D003               	goto	l6175
  5899  001A2A                     l6169:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;FastBuggy17_Main_Code_TUNING.c: 451: return(1);
  5903  001A2A  0E01               	movlw	1
  5904                           
  5905                           ; BSR set to: 0
  5906  001A2C  D006               	goto	l860
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;FastBuggy17_Main_Code_TUNING.c: 452: }
  5910  001A2E  D003               	goto	l6179
  5911  001A30                     l6175:
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;FastBuggy17_Main_Code_TUNING.c: 453: else {
  5915                           ;FastBuggy17_Main_Code_TUNING.c: 454: return(0);
  5916  001A30  0E00               	movlw	0
  5917                           
  5918                           ; BSR set to: 0
  5919  001A32  D003               	goto	l860
  5920                           
  5921                           ; BSR set to: 0
  5922                           
  5923                           ; BSR set to: 0
  5924                           
  5925                           ; BSR set to: 0
  5926  001A34  D000               	goto	l6179
  5927  001A36                     l6179:
  5928                           
  5929                           ;FastBuggy17_Main_Code_TUNING.c: 455: }
  5930                           ;FastBuggy17_Main_Code_TUNING.c: 456: }
  5931                           ;FastBuggy17_Main_Code_TUNING.c: 458: return(0);
  5932  001A36  0E00               	movlw	0
  5933  001A38  D000               	goto	l860
  5934  001A3A                     l860:
  5935  001A3A  0012               	return		;funcret
  5936  001A3C                     __end_of_PB2pressed:
  5937                           	opt stack 0
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           postinc0	equ	0xFEE
  5941                           wreg	equ	0xFE8
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function _LoadCalibration *****************
  5950 ;; Defined at:
  5951 ;;		line 553 in file "FastBuggy17_Main_Code_TUNING.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  index           1   35[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;		None               void
  5958 ;; Registers used:
  5959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;Total ram usage:        3 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:   12
  5972 ;; This function calls:
  5973 ;;		_GenerateCalibration
  5974 ;;		_ReadCharEEPROM
  5975 ;;		_ReadIntEEPROM
  5976 ;; This function is called by:
  5977 ;;		_main
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text38
  5982  000F76                     __ptext38:
  5983                           	opt stack 0
  5984  000F76                     _LoadCalibration:
  5985                           	opt stack 18
  5986                           
  5987                           ;FastBuggy17_Main_Code_TUNING.c: 554: unsigned char index;
  5988                           ;FastBuggy17_Main_Code_TUNING.c: 556: if(ReadCharEEPROM(0x0000) == 0xFF) {
  5989                           
  5990                           ;incstack = 0
  5991  000F76  0E00               	movlw	0
  5992  000F78  0100               	movlb	0	; () banked
  5993  000F7A  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5994  000F7C  0E00               	movlw	0
  5995  000F7E  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  5996  000F80  ECDB  F011         	call	_ReadCharEEPROM	;wreg free
  5997  000F84  0AFF               	xorlw	255
  5998  000F86  A4D8               	btfss	status,2,c
  5999  000F88  D003               	goto	l6491
  6000                           
  6001                           ;FastBuggy17_Main_Code_TUNING.c: 557: GenerateCalibration();
  6002  000F8A  EC73  F008         	call	_GenerateCalibration	;wreg free
  6003                           
  6004                           ;FastBuggy17_Main_Code_TUNING.c: 558: }
  6005  000F8E  D050               	goto	l915
  6006  000F90                     l6491:
  6007                           
  6008                           ;FastBuggy17_Main_Code_TUNING.c: 560: else if(ReadCharEEPROM(0x0000) == 1) {
  6009  000F90  0E00               	movlw	0
  6010  000F92  0100               	movlb	0	; () banked
  6011  000F94  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6012  000F96  0E00               	movlw	0
  6013  000F98  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  6014  000F9A  ECDB  F011         	call	_ReadCharEEPROM	;wreg free
  6015  000F9E  06E8               	decf	wreg,f,c
  6016  000FA0  A4D8               	btfss	status,2,c
  6017  000FA2  D046               	goto	l915
  6018                           
  6019                           ;FastBuggy17_Main_Code_TUNING.c: 561: for(index = 0; index < 5; index++) {
  6020  000FA4  0E00               	movlw	0
  6021  000FA6  0100               	movlb	0	; () banked
  6022  000FA8  6FE1               	movwf	LoadCalibration@index& (0+255),b
  6023  000FAA                     l6495:
  6024                           
  6025                           ; BSR set to: 0
  6026  000FAA  0E04               	movlw	4
  6027  000FAC  0100               	movlb	0	; () banked
  6028  000FAE  65E1               	cpfsgt	LoadCalibration@index& (0+255),b
  6029  000FB0  D001               	goto	l6499
  6030                           
  6031                           ; BSR set to: 0
  6032  000FB2  D027               	goto	l6505
  6033  000FB4                     l6499:
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;FastBuggy17_Main_Code_TUNING.c: 562: sensor_offsets[index] = ReadIntEEPROM(0x0003 + (2 
      +                          * index));
  6037  000FB4  0100               	movlb	0	; () banked
  6038  000FB6  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6039  000FB8  0100               	movlb	0	; () banked
  6040  000FBA  6FDF               	movwf	??_LoadCalibration& (0+255),b
  6041  000FBC  6BE0               	clrf	(??_LoadCalibration+1)& (0+255),b
  6042  000FBE  90D8               	bcf	status,0,c
  6043  000FC0  0100               	movlb	0	; () banked
  6044  000FC2  37DF               	rlcf	??_LoadCalibration& (0+255),f,b
  6045  000FC4  37E0               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6046  000FC6  0E03               	movlw	3
  6047  000FC8  0100               	movlb	0	; () banked
  6048  000FCA  25DF               	addwf	??_LoadCalibration& (0+255),w,b
  6049  000FCC  0100               	movlb	0	; () banked
  6050  000FCE  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6051  000FD0  0E00               	movlw	0
  6052  000FD2  0100               	movlb	0	; () banked
  6053  000FD4  21E0               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6054  000FD6  0100               	movlb	0	; () banked
  6055  000FD8  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6056  000FDA  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  6057  000FDE  0100               	movlb	0	; () banked
  6058  000FE0  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6059  000FE2  0D02               	mullw	2
  6060  000FE4  0E9A               	movlw	low _sensor_offsets
  6061  000FE6  24F3               	addwf	prodl,w,c
  6062  000FE8  6ED9               	movwf	fsr2l,c
  6063  000FEA  0E00               	movlw	high _sensor_offsets
  6064  000FEC  20F4               	addwfc	prodh,w,c
  6065  000FEE  6EDA               	movwf	fsr2h,c
  6066  000FF0  0100               	movlb	0	; () banked
  6067  000FF2  C0D0  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6068  000FF6  0100               	movlb	0	; () banked
  6069  000FF8  C0D1  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6070                           
  6071                           ; BSR set to: 0
  6072  000FFC  0100               	movlb	0	; () banked
  6073  000FFE  2BE1               	incf	LoadCalibration@index& (0+255),f,b
  6074  001000  D7D4               	goto	l6495
  6075  001002                     l6505:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;FastBuggy17_Main_Code_TUNING.c: 563: }
  6079                           ;FastBuggy17_Main_Code_TUNING.c: 565: PID_set_point = ReadIntEEPROM(0x000E);
  6080  001002  0E00               	movlw	0
  6081  001004  0100               	movlb	0	; () banked
  6082  001006  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6083  001008  0E0E               	movlw	14
  6084  00100A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6085  00100C  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  6086  001010  C0D0  F0BA         	movff	?_ReadIntEEPROM,_PID_set_point
  6087  001014  C0D1  F0BB         	movff	?_ReadIntEEPROM+1,_PID_set_point+1
  6088                           
  6089                           ;FastBuggy17_Main_Code_TUNING.c: 567: sensor_threshold = ReadIntEEPROM(0x0001);
  6090  001018  0E00               	movlw	0
  6091  00101A  0100               	movlb	0	; () banked
  6092  00101C  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6093  00101E  0E01               	movlw	1
  6094  001020  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6095  001022  EC1E  F00D         	call	_ReadIntEEPROM	;wreg free
  6096  001026  C0D0  F0BC         	movff	?_ReadIntEEPROM,_sensor_threshold
  6097  00102A  C0D1  F0BD         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6098  00102E  D000               	goto	l915
  6099  001030                     l915:
  6100  001030  0012               	return		;funcret
  6101  001032                     __end_of_LoadCalibration:
  6102                           	opt stack 0
  6103                           prodh	equ	0xFF4
  6104                           prodl	equ	0xFF3
  6105                           postinc0	equ	0xFEE
  6106                           wreg	equ	0xFE8
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function _ReadIntEEPROM *****************
  6115 ;; Defined at:
  6116 ;;		line 84 in file "eeprom.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  address         2   18[BANK0 ] unsigned int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  data            2   23[BANK0 ] unsigned int 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  2   18[BANK0 ] unsigned int 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;Total ram usage:        7 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    8
  6137 ;; This function calls:
  6138 ;;		_ReadEEPROM
  6139 ;; This function is called by:
  6140 ;;		_LoadCalibration
  6141 ;;		_LoadPIDValues
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text39
  6147  001A3C                     __ptext39:
  6148                           	opt stack 0
  6149  001A3C                     _ReadIntEEPROM:
  6150                           	opt stack 22
  6151                           
  6152                           ;eeprom.c: 85: unsigned int data;
  6153                           ;eeprom.c: 87: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6154                           
  6155                           ;incstack = 0
  6156  001A3C  C0D0  F0CE         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6157  001A40  C0D1  F0CF         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6158  001A44  EC37  F010         	call	_ReadEEPROM	;wreg free
  6159  001A48  0100               	movlb	0	; () banked
  6160  001A4A  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6161  001A4C  0100               	movlb	0	; () banked
  6162  001A4E  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6163  001A50  0100               	movlb	0	; () banked
  6164  001A52  6FD4               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6165  001A54  6BD3               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6166  001A56  0E00               	movlw	0
  6167  001A58  0100               	movlb	0	; () banked
  6168  001A5A  15D3               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6169  001A5C  0100               	movlb	0	; () banked
  6170  001A5E  6FD5               	movwf	ReadIntEEPROM@data& (0+255),b
  6171  001A60  0EFF               	movlw	255
  6172  001A62  0100               	movlb	0	; () banked
  6173  001A64  15D4               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6174  001A66  0100               	movlb	0	; () banked
  6175  001A68  6FD6               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6176                           
  6177                           ;eeprom.c: 88: data |= ReadEEPROM(address + 1) & 0x00FF;
  6178  001A6A  0E01               	movlw	1
  6179  001A6C  0100               	movlb	0	; () banked
  6180  001A6E  25D0               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6181  001A70  0100               	movlb	0	; () banked
  6182  001A72  6FCE               	movwf	ReadEEPROM@address& (0+255),b
  6183  001A74  0E00               	movlw	0
  6184  001A76  0100               	movlb	0	; () banked
  6185  001A78  21D1               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6186  001A7A  0100               	movlb	0	; () banked
  6187  001A7C  6FCF               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6188  001A7E  EC37  F010         	call	_ReadEEPROM	;wreg free
  6189  001A82  0100               	movlb	0	; () banked
  6190  001A84  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6191  001A86  0100               	movlb	0	; () banked
  6192  001A88  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6193  001A8A  0100               	movlb	0	; () banked
  6194  001A8C  13D5               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;eeprom.c: 90: return(data);
  6198  001A8E  C0D5  F0D0         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6199  001A92  C0D6  F0D1         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6200  001A96  D000               	goto	l237
  6201  001A98                     l237:
  6202                           
  6203                           ; BSR set to: 0
  6204  001A98  0012               	return		;funcret
  6205  001A9A                     __end_of_ReadIntEEPROM:
  6206                           	opt stack 0
  6207                           prodh	equ	0xFF4
  6208                           prodl	equ	0xFF3
  6209                           postinc0	equ	0xFEE
  6210                           wreg	equ	0xFE8
  6211                           indf2	equ	0xFDF
  6212                           postinc2	equ	0xFDE
  6213                           postdec2	equ	0xFDD
  6214                           fsr2h	equ	0xFDA
  6215                           fsr2l	equ	0xFD9
  6216                           status	equ	0xFD8
  6217                           
  6218 ;; *************** function _ReadCharEEPROM *****************
  6219 ;; Defined at:
  6220 ;;		line 94 in file "eeprom.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  address         2   18[BANK0 ] unsigned int 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      unsigned char 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;Total ram usage:        2 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    8
  6241 ;; This function calls:
  6242 ;;		_ReadEEPROM
  6243 ;; This function is called by:
  6244 ;;		_LoadCalibration
  6245 ;;		_LoadPIDValues
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text40
  6250  0023B6                     __ptext40:
  6251                           	opt stack 0
  6252  0023B6                     _ReadCharEEPROM:
  6253                           	opt stack 21
  6254                           
  6255                           ;eeprom.c: 95: return(ReadEEPROM(address));
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;incstack = 0
  6259  0023B6  C0D0  F0CE         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6260  0023BA  C0D1  F0CF         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6261  0023BE  EC37  F010         	call	_ReadEEPROM	;wreg free
  6262  0023C2  D000               	goto	l240
  6263  0023C4                     l240:
  6264  0023C4  0012               	return		;funcret
  6265  0023C6                     __end_of_ReadCharEEPROM:
  6266                           	opt stack 0
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           indf2	equ	0xFDF
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278 ;; *************** function _ReadEEPROM *****************
  6279 ;; Defined at:
  6280 ;;		line 37 in file "eeprom.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  address         2   16[BANK0 ] unsigned int 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;		None
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      unsigned char 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;Total ram usage:        2 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    7
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_ReadIntEEPROM
  6305 ;;		_ReadCharEEPROM
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text41
  6310  00206E                     __ptext41:
  6311                           	opt stack 0
  6312  00206E                     _ReadEEPROM:
  6313                           	opt stack 22
  6314                           
  6315                           ;eeprom.c: 38: if(address > 0x03FF) {
  6316                           
  6317                           ;incstack = 0
  6318  00206E  0E04               	movlw	4
  6319  002070  0100               	movlb	0	; () banked
  6320  002072  5DCF               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6321  002074  A0D8               	btfss	status,0,c
  6322  002076  D002               	goto	l223
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;eeprom.c: 39: return(0);
  6326  002078  0E00               	movlw	0
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;eeprom.c: 40: }
  6330                           
  6331                           ; BSR set to: 0
  6332  00207A  D00E               	goto	l224
  6333  00207C                     l223:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;eeprom.c: 41: else {
  6337                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6338  00207C  C0CE  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6342  002080  0100               	movlb	0	; () banked
  6343  002082  51CF               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6344  002084  0B03               	andlw	3
  6345  002086  6EAA               	movwf	4010,c	;volatile
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6349  002088  9EA6               	bcf	4006,7,c	;volatile
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6353  00208A  9CA6               	bcf	4006,6,c	;volatile
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6357  00208C  80A6               	bsf	4006,0,c	;volatile
  6358                           
  6359                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6360  00208E  D000               	goto	l226
  6361  002090                     l226:
  6362  002090  B0A6               	btfsc	4006,0,c	;volatile
  6363  002092  D7FE               	goto	l226
  6364                           
  6365                           ;eeprom.c: 50: return(EEDATA);
  6366  002094  50A8               	movf	4008,w,c	;volatile
  6367  002096  D000               	goto	l224
  6368  002098                     l224:
  6369  002098  0012               	return		;funcret
  6370  00209A                     __end_of_ReadEEPROM:
  6371                           	opt stack 0
  6372                           prodh	equ	0xFF4
  6373                           prodl	equ	0xFF3
  6374                           postinc0	equ	0xFEE
  6375                           wreg	equ	0xFE8
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function _GenerateCalibration *****************
  6384 ;; Defined at:
  6385 ;;		line 528 in file "FastBuggy17_Main_Code_TUNING.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  index           1   32[BANK0 ] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;		None               void
  6392 ;; Registers used:
  6393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        3 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:   11
  6406 ;; This function calls:
  6407 ;;		_CalibrateOffsets
  6408 ;;		_CalibrateOnLine
  6409 ;;		_CalibrateThreshold
  6410 ;;		_FlashLEDS
  6411 ;;		_WriteCharEEPROM
  6412 ;;		_WriteIntEEPROM
  6413 ;; This function is called by:
  6414 ;;		_LoadCalibration
  6415 ;;		_main
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text42
  6420  0010E6                     __ptext42:
  6421                           	opt stack 0
  6422  0010E6                     _GenerateCalibration:
  6423                           	opt stack 18
  6424                           
  6425                           ;FastBuggy17_Main_Code_TUNING.c: 529: unsigned char index;
  6426                           ;FastBuggy17_Main_Code_TUNING.c: 531: CalibrateOffsets();
  6427                           
  6428                           ;incstack = 0
  6429  0010E6  ECC2  F009         	call	_CalibrateOffsets	;wreg free
  6430                           
  6431                           ;FastBuggy17_Main_Code_TUNING.c: 533: for(index = 0; index < 5; index++) {
  6432  0010EA  0E00               	movlw	0
  6433  0010EC  0100               	movlb	0	; () banked
  6434  0010EE  6FDE               	movwf	GenerateCalibration@index& (0+255),b
  6435  0010F0                     l6187:
  6436                           
  6437                           ; BSR set to: 0
  6438  0010F0  0E04               	movlw	4
  6439  0010F2  0100               	movlb	0	; () banked
  6440  0010F4  65DE               	cpfsgt	GenerateCalibration@index& (0+255),b
  6441  0010F6  D001               	goto	l6191
  6442                           
  6443                           ; BSR set to: 0
  6444  0010F8  D025               	goto	l6197
  6445  0010FA                     l6191:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;FastBuggy17_Main_Code_TUNING.c: 534: WriteIntEEPROM(0x0003 + (2* index), sensor_offsets
      +                          [index]);
  6449  0010FA  0100               	movlb	0	; () banked
  6450  0010FC  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6451  0010FE  0100               	movlb	0	; () banked
  6452  001100  6FDC               	movwf	??_GenerateCalibration& (0+255),b
  6453  001102  6BDD               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6454  001104  90D8               	bcf	status,0,c
  6455  001106  0100               	movlb	0	; () banked
  6456  001108  37DC               	rlcf	??_GenerateCalibration& (0+255),f,b
  6457  00110A  37DD               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6458  00110C  0E03               	movlw	3
  6459  00110E  0100               	movlb	0	; () banked
  6460  001110  25DC               	addwf	??_GenerateCalibration& (0+255),w,b
  6461  001112  0100               	movlb	0	; () banked
  6462  001114  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6463  001116  0E00               	movlw	0
  6464  001118  0100               	movlb	0	; () banked
  6465  00111A  21DD               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6466  00111C  0100               	movlb	0	; () banked
  6467  00111E  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6468  001120  0100               	movlb	0	; () banked
  6469  001122  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6470  001124  0D02               	mullw	2
  6471  001126  0E9A               	movlw	low _sensor_offsets
  6472  001128  24F3               	addwf	prodl,w,c
  6473  00112A  6ED9               	movwf	fsr2l,c
  6474  00112C  0E00               	movlw	high _sensor_offsets
  6475  00112E  20F4               	addwfc	prodh,w,c
  6476  001130  6EDA               	movwf	fsr2h,c
  6477  001132  CFDE F0D3          	movff	postinc2,WriteIntEEPROM@data
  6478  001136  CFDD F0D4          	movff	postdec2,WriteIntEEPROM@data+1
  6479  00113A  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  6480  00113E  0100               	movlb	0	; () banked
  6481  001140  2BDE               	incf	GenerateCalibration@index& (0+255),f,b
  6482  001142  D7D6               	goto	l6187
  6483  001144                     l6197:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;FastBuggy17_Main_Code_TUNING.c: 535: }
  6487                           ;FastBuggy17_Main_Code_TUNING.c: 537: FlashLEDS();
  6488  001144  EC4D  F010         	call	_FlashLEDS	;wreg free
  6489                           
  6490                           ;FastBuggy17_Main_Code_TUNING.c: 539: CalibrateOnLine();
  6491  001148  ECBD  F00C         	call	_CalibrateOnLine	;wreg free
  6492                           
  6493                           ;FastBuggy17_Main_Code_TUNING.c: 541: WriteIntEEPROM(0x000E, PID_set_point);
  6494  00114C  0E00               	movlw	0
  6495  00114E  0100               	movlb	0	; () banked
  6496  001150  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6497  001152  0E0E               	movlw	14
  6498  001154  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6499  001156  C0BA  F0D3         	movff	_PID_set_point,WriteIntEEPROM@data
  6500  00115A  C0BB  F0D4         	movff	_PID_set_point+1,WriteIntEEPROM@data+1
  6501  00115E  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  6502                           
  6503                           ;FastBuggy17_Main_Code_TUNING.c: 543: FlashLEDS();
  6504  001162  EC4D  F010         	call	_FlashLEDS	;wreg free
  6505                           
  6506                           ;FastBuggy17_Main_Code_TUNING.c: 545: CalibrateThreshold();
  6507  001166  EC1F  F009         	call	_CalibrateThreshold	;wreg free
  6508                           
  6509                           ;FastBuggy17_Main_Code_TUNING.c: 547: WriteIntEEPROM(0x0001, sensor_threshold);
  6510  00116A  0E00               	movlw	0
  6511  00116C  0100               	movlb	0	; () banked
  6512  00116E  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6513  001170  0E01               	movlw	1
  6514  001172  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6515  001174  C0BC  F0D3         	movff	_sensor_threshold,WriteIntEEPROM@data
  6516  001178  C0BD  F0D4         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6517  00117C  ECC1  F00F         	call	_WriteIntEEPROM	;wreg free
  6518                           
  6519                           ;FastBuggy17_Main_Code_TUNING.c: 548: WriteCharEEPROM(0x0000, 1);
  6520  001180  0E00               	movlw	0
  6521  001182  0100               	movlb	0	; () banked
  6522  001184  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6523  001186  0E00               	movlw	0
  6524  001188  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  6525  00118A  0E01               	movlw	1
  6526  00118C  0100               	movlb	0	; () banked
  6527  00118E  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  6528  001190  ECA5  F011         	call	_WriteCharEEPROM	;wreg free
  6529  001194  0012               	return		;funcret
  6530  001196                     __end_of_GenerateCalibration:
  6531                           	opt stack 0
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           postinc0	equ	0xFEE
  6535                           wreg	equ	0xFE8
  6536                           indf2	equ	0xFDF
  6537                           postinc2	equ	0xFDE
  6538                           postdec2	equ	0xFDD
  6539                           fsr2h	equ	0xFDA
  6540                           fsr2l	equ	0xFD9
  6541                           status	equ	0xFD8
  6542                           
  6543 ;; *************** function _WriteIntEEPROM *****************
  6544 ;; Defined at:
  6545 ;;		line 63 in file "eeprom.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  address         2   19[BANK0 ] unsigned int 
  6548 ;;  data            2   21[BANK0 ] unsigned int 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;		None               void
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;Total ram usage:        4 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    8
  6567 ;; This function calls:
  6568 ;;		_WriteEEPROM
  6569 ;; This function is called by:
  6570 ;;		_GenerateCalibration
  6571 ;;		_SetPIDValues
  6572 ;;		_LoadPIDValues
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text43
  6577  001F82                     __ptext43:
  6578                           	opt stack 0
  6579  001F82                     _WriteIntEEPROM:
  6580                           	opt stack 21
  6581                           
  6582                           ;eeprom.c: 64: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6583                           
  6584                           ;incstack = 0
  6585  001F82  C0D1  F0CE         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6586  001F86  C0D2  F0CF         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6587  001F8A  0100               	movlb	0	; () banked
  6588  001F8C  51D4               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6589  001F8E  0100               	movlb	0	; () banked
  6590  001F90  6FD0               	movwf	WriteEEPROM@data& (0+255),b
  6591  001F92  EC4F  F00E         	call	_WriteEEPROM	;wreg free
  6592                           
  6593                           ;eeprom.c: 65: WriteEEPROM(address + 1, (data & 0x00FF));
  6594  001F96  0E01               	movlw	1
  6595  001F98  0100               	movlb	0	; () banked
  6596  001F9A  25D1               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6597  001F9C  0100               	movlb	0	; () banked
  6598  001F9E  6FCE               	movwf	WriteEEPROM@address& (0+255),b
  6599  001FA0  0E00               	movlw	0
  6600  001FA2  0100               	movlb	0	; () banked
  6601  001FA4  21D2               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6602  001FA6  0100               	movlb	0	; () banked
  6603  001FA8  6FCF               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6604  001FAA  C0D3  F0D0         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6605  001FAE  EC4F  F00E         	call	_WriteEEPROM	;wreg free
  6606  001FB2  0012               	return		;funcret
  6607  001FB4                     __end_of_WriteIntEEPROM:
  6608                           	opt stack 0
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           postinc0	equ	0xFEE
  6612                           wreg	equ	0xFE8
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _WriteCharEEPROM *****************
  6621 ;; Defined at:
  6622 ;;		line 69 in file "eeprom.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  address         2   19[BANK0 ] unsigned int 
  6625 ;;  data            1   21[BANK0 ] unsigned char 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6637 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;Total ram usage:        3 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    8
  6644 ;; This function calls:
  6645 ;;		_WriteEEPROM
  6646 ;; This function is called by:
  6647 ;;		_GenerateCalibration
  6648 ;;		_SetPIDValues
  6649 ;;		_LoadPIDValues
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text44
  6654  00234A                     __ptext44:
  6655                           	opt stack 0
  6656  00234A                     _WriteCharEEPROM:
  6657                           	opt stack 21
  6658                           
  6659                           ;eeprom.c: 70: WriteEEPROM(address, data);
  6660                           
  6661                           ;incstack = 0
  6662  00234A  C0D1  F0CE         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6663  00234E  C0D2  F0CF         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6664  002352  C0D3  F0D0         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6665  002356  EC4F  F00E         	call	_WriteEEPROM	;wreg free
  6666  00235A  0012               	return		;funcret
  6667  00235C                     __end_of_WriteCharEEPROM:
  6668                           	opt stack 0
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           postinc0	equ	0xFEE
  6672                           wreg	equ	0xFE8
  6673                           indf2	equ	0xFDF
  6674                           postinc2	equ	0xFDE
  6675                           postdec2	equ	0xFDD
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function _WriteEEPROM *****************
  6681 ;; Defined at:
  6682 ;;		line 3 in file "eeprom.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  address         2   16[BANK0 ] unsigned int 
  6685 ;;  data            1   18[BANK0 ] unsigned char 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      unsigned char 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6697 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;Total ram usage:        3 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    7
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_WriteIntEEPROM
  6708 ;;		_WriteCharEEPROM
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text45
  6713  001C9E                     __ptext45:
  6714                           	opt stack 0
  6715  001C9E                     _WriteEEPROM:
  6716                           	opt stack 21
  6717                           
  6718                           ;eeprom.c: 4: if(address > 0x03FF) {
  6719                           
  6720                           ;incstack = 0
  6721  001C9E  0E04               	movlw	4
  6722  001CA0  0100               	movlb	0	; () banked
  6723  001CA2  5DCF               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6724  001CA4  B0D8               	btfsc	status,0,c
  6725  001CA6  D01A               	goto	l214
  6726  001CA8  D001               	goto	l213
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;eeprom.c: 6: }
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;eeprom.c: 5: return(1);
  6733                           ;	Return value of _WriteEEPROM is never used
  6734  001CAA  D018               	goto	l214
  6735  001CAC                     l213:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;eeprom.c: 7: else {
  6739                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6740  001CAC  C0CE  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6744  001CB0  0100               	movlb	0	; () banked
  6745  001CB2  51CF               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6746  001CB4  0B03               	andlw	3
  6747  001CB6  6EAA               	movwf	4010,c	;volatile
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;eeprom.c: 10: EEDATA = data;
  6751  001CB8  C0D0  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6755  001CBC  9EA6               	bcf	4006,7,c	;volatile
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6759  001CBE  9CA6               	bcf	4006,6,c	;volatile
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6763  001CC0  84A6               	bsf	4006,2,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6767  001CC2  9EF2               	bcf	intcon,7,c	;volatile
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;eeprom.c: 17: EECON2 = 0x55;
  6771  001CC4  0E55               	movlw	85
  6772  001CC6  6EA7               	movwf	4007,c	;volatile
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6776  001CC8  0EAA               	movlw	170
  6777  001CCA  6EA7               	movwf	4007,c	;volatile
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6781  001CCC  82A6               	bsf	4006,1,c	;volatile
  6782                           
  6783                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6784  001CCE  D000               	goto	l216
  6785  001CD0                     l216:
  6786  001CD0  B2A6               	btfsc	4006,1,c	;volatile
  6787  001CD2  D7FE               	goto	l216
  6788                           
  6789                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6790  001CD4  94A6               	bcf	4006,2,c	;volatile
  6791                           
  6792                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6793  001CD6  8EF2               	bsf	intcon,7,c	;volatile
  6794                           
  6795                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6796  001CD8  50A6               	movf	4006,w,c	;volatile
  6797                           
  6798                           ;eeprom.c: 29: else {
  6799                           ;eeprom.c: 30: return(1);
  6800                           ;	Return value of _WriteEEPROM is never used
  6801                           
  6802                           ;eeprom.c: 28: }
  6803                           
  6804                           ;eeprom.c: 27: return(0);
  6805                           ;	Return value of _WriteEEPROM is never used
  6806  001CDA  D000               	goto	l214
  6807  001CDC                     l214:
  6808  001CDC  0012               	return		;funcret
  6809  001CDE                     __end_of_WriteEEPROM:
  6810                           	opt stack 0
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           postinc0	equ	0xFEE
  6815                           wreg	equ	0xFE8
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           postdec2	equ	0xFDD
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _FlashLEDS *****************
  6824 ;; Defined at:
  6825 ;;		line 395 in file "FastBuggy17_Main_Code_TUNING.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;		None               void
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;Total ram usage:        0 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    8
  6846 ;; This function calls:
  6847 ;;		_Delay10KTCYx
  6848 ;; This function is called by:
  6849 ;;		_GenerateCalibration
  6850 ;;		_main
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text46
  6855  00209A                     __ptext46:
  6856                           	opt stack 0
  6857  00209A                     _FlashLEDS:
  6858                           	opt stack 20
  6859                           
  6860                           ;FastBuggy17_Main_Code_TUNING.c: 396: LATJ = 0x00;
  6861                           
  6862                           ;incstack = 0
  6863  00209A  0E00               	movlw	0
  6864  00209C  6E91               	movwf	3985,c	;volatile
  6865                           
  6866                           ;FastBuggy17_Main_Code_TUNING.c: 397: LATJ = 0x1F;
  6867  00209E  0E1F               	movlw	31
  6868  0020A0  6E91               	movwf	3985,c	;volatile
  6869                           
  6870                           ;FastBuggy17_Main_Code_TUNING.c: 398: Delay10KTCYx(75);
  6871  0020A2  0E4B               	movlw	75
  6872  0020A4  EC06  F011         	call	_Delay10KTCYx
  6873                           
  6874                           ;FastBuggy17_Main_Code_TUNING.c: 399: LATJ = 0x00;
  6875  0020A8  0E00               	movlw	0
  6876  0020AA  6E91               	movwf	3985,c	;volatile
  6877                           
  6878                           ;FastBuggy17_Main_Code_TUNING.c: 400: Delay10KTCYx(75);
  6879  0020AC  0E4B               	movlw	75
  6880  0020AE  EC06  F011         	call	_Delay10KTCYx
  6881                           
  6882                           ;FastBuggy17_Main_Code_TUNING.c: 401: LATJ = 0x1F;
  6883  0020B2  0E1F               	movlw	31
  6884  0020B4  6E91               	movwf	3985,c	;volatile
  6885                           
  6886                           ;FastBuggy17_Main_Code_TUNING.c: 402: Delay10KTCYx(75);
  6887  0020B6  0E4B               	movlw	75
  6888  0020B8  EC06  F011         	call	_Delay10KTCYx
  6889                           
  6890                           ;FastBuggy17_Main_Code_TUNING.c: 403: LATJ = 0x00;
  6891  0020BC  0E00               	movlw	0
  6892  0020BE  6E91               	movwf	3985,c	;volatile
  6893  0020C0  0012               	return		;funcret
  6894  0020C2                     __end_of_FlashLEDS:
  6895                           	opt stack 0
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           intcon	equ	0xFF2
  6899                           postinc0	equ	0xFEE
  6900                           wreg	equ	0xFE8
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function _Delay10KTCYx *****************
  6909 ;; Defined at:
  6910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  unit            1    wreg     unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  unit            1   17[BANK0 ] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		wreg
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        2 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    7
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_FlashLEDS
  6935 ;;		_main
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text47
  6940  00220C                     __ptext47:
  6941                           	opt stack 0
  6942  00220C                     _Delay10KTCYx:
  6943                           	opt stack 20
  6944                           
  6945                           ;incstack = 0
  6946                           ;Delay10KTCYx@unit stored from wreg
  6947  00220C  0100               	movlb	0	; () banked
  6948  00220E  6FCF               	movwf	Delay10KTCYx@unit& (0+255),b
  6949  002210                     
  6950                           ; BSR set to: 0
  6951  002210  0E0D               	movlw	13
  6952  002212  0100               	movlb	0	; () banked
  6953  002214  6FCE               	movwf	??_Delay10KTCYx& (0+255),b
  6954  002216  0EFC               	movlw	252
  6955  002218                     u6407:
  6956  002218  2EE8               	decfsz	wreg,f,c
  6957  00221A  D7FE               	goto	u6407
  6958  00221C  2FCE               	decfsz	??_Delay10KTCYx& (0+255),f,b
  6959  00221E  D7FC               	goto	u6407
  6960  002220  0100               	movlb	0	; () banked
  6961  002222  2FCF               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  6962  002224  D7F5               	goto	l5729
  6963  002226  D000               	goto	l1473
  6964  002228                     l1473:
  6965                           
  6966                           ; BSR set to: 0
  6967  002228  0012               	return		;funcret
  6968  00222A                     __end_of_Delay10KTCYx:
  6969                           	opt stack 0
  6970                           prodh	equ	0xFF4
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           postinc0	equ	0xFEE
  6974                           wreg	equ	0xFE8
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _CalibrateThreshold *****************
  6983 ;; Defined at:
  6984 ;;		line 498 in file "FastBuggy17_Main_Code_TUNING.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  sensor_thres    2   28[BANK0 ] int 
  6989 ;;  sensor_thres    2   26[BANK0 ] PTR int 
  6990 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;		None               void
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:        4 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:   10
  7007 ;; This function calls:
  7008 ;;		_BusyADC
  7009 ;;		_BusySensorAcq
  7010 ;;		_CalculateSensorStatuses
  7011 ;;		_ConvertADC
  7012 ;;		_DisplaySensorStatuses
  7013 ;;		_GetSensorReadings
  7014 ;;		_NormaliseSensorReadings
  7015 ;;		_PB1pressed
  7016 ;;		_ReadADC
  7017 ;;		_SendStatus
  7018 ;;		_SetADCChannel
  7019 ;; This function is called by:
  7020 ;;		_GenerateCalibration
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text48
  7025  00123E                     __ptext48:
  7026                           	opt stack 0
  7027  00123E                     _CalibrateThreshold:
  7028                           	opt stack 18
  7029                           
  7030                           ;FastBuggy17_Main_Code_TUNING.c: 499: int sensor_threshold_temp;
  7031                           ;FastBuggy17_Main_Code_TUNING.c: 500: int *sensor_threshold_temp_ptr;
  7032                           ;FastBuggy17_Main_Code_TUNING.c: 502: sensor_threshold_temp_ptr = &sensor_threshold_temp
      +                          ;
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;incstack = 0
  7036  00123E  0EDA               	movlw	low CalibrateThreshold@sensor_threshold_temp
  7037  001240  0100               	movlb	0	; () banked
  7038  001242  6FD8               	movwf	CalibrateThreshold@sensor_threshold_temp_ptr& (0+255),b
  7039  001244  0E00               	movlw	high CalibrateThreshold@sensor_threshold_temp
  7040  001246  0100               	movlb	0	; () banked
  7041  001248  6FD9               	movwf	(CalibrateThreshold@sensor_threshold_temp_ptr+1)& (0+255),b
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;FastBuggy17_Main_Code_TUNING.c: 504: SendStatus(0x05);
  7045  00124A  0E05               	movlw	5
  7046  00124C  ECCA  F00E         	call	_SendStatus
  7047                           
  7048                           ;FastBuggy17_Main_Code_TUNING.c: 505: LATJ = 0x07;
  7049  001250  0E07               	movlw	7
  7050  001252  6E91               	movwf	3985,c	;volatile
  7051                           
  7052                           ;FastBuggy17_Main_Code_TUNING.c: 507: while(PB1pressed() == 0) {
  7053  001254  D03C               	goto	l5929
  7054  001256                     l5911:
  7055                           
  7056                           ;FastBuggy17_Main_Code_TUNING.c: 509: SetADCChannel(5);
  7057  001256  0E05               	movlw	5
  7058  001258  EC67  F006         	call	_SetADCChannel
  7059                           
  7060                           ;FastBuggy17_Main_Code_TUNING.c: 510: ConvertADC();
  7061  00125C  EC6F  F012         	call	_ConvertADC	;wreg free
  7062                           
  7063                           ;FastBuggy17_Main_Code_TUNING.c: 511: while(BusyADC());
  7064  001260  D000               	goto	l5915
  7065  001262                     l5915:
  7066  001262  EC19  F012         	call	_BusyADC	;wreg free
  7067  001266  0900               	iorlw	0
  7068  001268  A4D8               	btfss	status,2,c
  7069  00126A  D7FB               	goto	l5915
  7070                           
  7071                           ;FastBuggy17_Main_Code_TUNING.c: 512: sensor_threshold_temp = ReadADC();
  7072  00126C  EC87  F011         	call	_ReadADC	;wreg free
  7073  001270  C0CE  F0DA         	movff	?_ReadADC,CalibrateThreshold@sensor_threshold_temp
  7074  001274  C0CF  F0DB         	movff	?_ReadADC+1,CalibrateThreshold@sensor_threshold_temp+1
  7075                           
  7076                           ;FastBuggy17_Main_Code_TUNING.c: 514: GetSensorReadings();
  7077  001278  EC5B  F011         	call	_GetSensorReadings	;wreg free
  7078                           
  7079                           ;FastBuggy17_Main_Code_TUNING.c: 515: while(BusySensorAcq() == 1);
  7080  00127C  D000               	goto	l5921
  7081  00127E                     l5921:
  7082  00127E  ECEB  F011         	call	_BusySensorAcq	;wreg free
  7083  001282  06E8               	decf	wreg,f,c
  7084  001284  B4D8               	btfsc	status,2,c
  7085  001286  D7FB               	goto	l5921
  7086                           
  7087                           ;FastBuggy17_Main_Code_TUNING.c: 516: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7088  001288  0EAE               	movlw	low _sensor_readings_raw
  7089  00128A  0100               	movlb	0	; () banked
  7090  00128C  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7091  00128E  0E00               	movlw	high _sensor_readings_raw
  7092  001290  0100               	movlb	0	; () banked
  7093  001292  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7094  001294  0E9A               	movlw	low _sensor_offsets
  7095  001296  0100               	movlb	0	; () banked
  7096  001298  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7097  00129A  0E00               	movlw	high _sensor_offsets
  7098  00129C  0100               	movlb	0	; () banked
  7099  00129E  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7100  0012A0  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  7101                           
  7102                           ;FastBuggy17_Main_Code_TUNING.c: 517: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_temp_ptr);
  7103  0012A4  0EA4               	movlw	low _sensor_readings_normalised
  7104  0012A6  0100               	movlb	0	; () banked
  7105  0012A8  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  7106  0012AA  0E00               	movlw	high _sensor_readings_normalised
  7107  0012AC  0100               	movlb	0	; () banked
  7108  0012AE  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  7109  0012B0  C0D8  F0D0         	movff	CalibrateThreshold@sensor_threshold_temp_ptr,CalculateSensorStatuses@sensor_thres
      +                          hold
  7110  0012B4  C0D9  F0D1         	movff	CalibrateThreshold@sensor_threshold_temp_ptr+1,CalculateSensorStatuses@sensor_thr
      +                          eshold+1
  7111  0012B8  ECED  F004         	call	_CalculateSensorStatuses	;wreg free
  7112                           
  7113                           ;FastBuggy17_Main_Code_TUNING.c: 519: DisplaySensorStatuses(sensor_statuses);
  7114  0012BC  0E25               	movlw	low _sensor_statuses
  7115  0012BE  0100               	movlb	0	; () banked
  7116  0012C0  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  7117  0012C2  0E00               	movlw	high _sensor_statuses
  7118  0012C4  0100               	movlb	0	; () banked
  7119  0012C6  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  7120  0012C8  EC7C  F00D         	call	_DisplaySensorStatuses	;wreg free
  7121  0012CC  D000               	goto	l5929
  7122  0012CE                     l5929:
  7123  0012CE  EC4D  F00D         	call	_PB1pressed	;wreg free
  7124  0012D2  0900               	iorlw	0
  7125  0012D4  B4D8               	btfsc	status,2,c
  7126  0012D6  D7BF               	goto	l5911
  7127                           
  7128                           ;FastBuggy17_Main_Code_TUNING.c: 521: }
  7129                           ;FastBuggy17_Main_Code_TUNING.c: 523: sensor_threshold = sensor_threshold_temp;
  7130  0012D8  C0DA  F0BC         	movff	CalibrateThreshold@sensor_threshold_temp,_sensor_threshold
  7131  0012DC  C0DB  F0BD         	movff	CalibrateThreshold@sensor_threshold_temp+1,_sensor_threshold+1
  7132  0012E0  0012               	return		;funcret
  7133  0012E2                     __end_of_CalibrateThreshold:
  7134                           	opt stack 0
  7135                           prodh	equ	0xFF4
  7136                           prodl	equ	0xFF3
  7137                           intcon	equ	0xFF2
  7138                           postinc0	equ	0xFEE
  7139                           wreg	equ	0xFE8
  7140                           indf2	equ	0xFDF
  7141                           postinc2	equ	0xFDE
  7142                           postdec2	equ	0xFDD
  7143                           fsr2h	equ	0xFDA
  7144                           fsr2l	equ	0xFD9
  7145                           status	equ	0xFD8
  7146                           
  7147 ;; *************** function _ReadADC *****************
  7148 ;; Defined at:
  7149 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2   16[BANK0 ] int 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;Total ram usage:        4 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    7
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_CalibrateThreshold
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text49
  7178  00230E                     __ptext49:
  7179                           	opt stack 0
  7180  00230E                     _ReadADC:
  7181                           	opt stack 20
  7182                           
  7183                           ;incstack = 0
  7184  00230E  50C4               	movf	4036,w,c	;volatile
  7185  002310  0100               	movlb	0	; () banked
  7186  002312  6FD0               	movwf	??_ReadADC& (0+255),b
  7187  002314  50C3               	movf	4035,w,c	;volatile
  7188  002316  0100               	movlb	0	; () banked
  7189  002318  6FCE               	movwf	?_ReadADC& (0+255),b
  7190  00231A  C0D0  F0CF         	movff	??_ReadADC,?_ReadADC+1
  7191  00231E  D000               	goto	l1059
  7192  002320                     l1059:
  7193                           
  7194                           ; BSR set to: 0
  7195  002320  0012               	return		;funcret
  7196  002322                     __end_of_ReadADC:
  7197                           	opt stack 0
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           postinc0	equ	0xFEE
  7202                           wreg	equ	0xFE8
  7203                           indf2	equ	0xFDF
  7204                           postinc2	equ	0xFDE
  7205                           postdec2	equ	0xFDD
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function _DisplaySensorStatuses *****************
  7211 ;; Defined at:
  7212 ;;		line 370 in file "FastBuggy17_Main_Code_TUNING.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
  7215 ;;		 -> sensor_statuses(5), 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  index           1   20[BANK0 ] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;		None               void
  7220 ;; Registers used:
  7221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;Total ram usage:        5 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    7
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_CalibrateThreshold
  7238 ;;		_main
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text50
  7243  001AF8                     __ptext50:
  7244                           	opt stack 0
  7245  001AF8                     _DisplaySensorStatuses:
  7246                           	opt stack 20
  7247                           
  7248                           ;FastBuggy17_Main_Code_TUNING.c: 371: unsigned char index;
  7249                           ;FastBuggy17_Main_Code_TUNING.c: 373: LATJ = 0x00;
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;incstack = 0
  7253  001AF8  0E00               	movlw	0
  7254  001AFA  6E91               	movwf	3985,c	;volatile
  7255                           
  7256                           ;FastBuggy17_Main_Code_TUNING.c: 375: for(index = 0; index < 5; index++) {
  7257  001AFC  0E00               	movlw	0
  7258  001AFE  0100               	movlb	0	; () banked
  7259  001B00  6FD2               	movwf	DisplaySensorStatuses@index& (0+255),b
  7260  001B02                     l5719:
  7261                           
  7262                           ; BSR set to: 0
  7263  001B02  0E04               	movlw	4
  7264  001B04  0100               	movlb	0	; () banked
  7265  001B06  65D2               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  7266  001B08  D001               	goto	l5723
  7267                           
  7268                           ; BSR set to: 0
  7269  001B0A  D01F               	goto	l831
  7270  001B0C                     l5723:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;FastBuggy17_Main_Code_TUNING.c: 376: LATJ ^= *(sensor_statuses + index) << index;
  7274  001B0C  C0D2  F0D0         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  7275  001B10  0100               	movlb	0	; () banked
  7276  001B12  51D2               	movf	DisplaySensorStatuses@index& (0+255),w,b
  7277  001B14  0D01               	mullw	1
  7278  001B16  50F3               	movf	prodl,w,c
  7279  001B18  0100               	movlb	0	; () banked
  7280  001B1A  25CE               	addwf	DisplaySensorStatuses@sensor_statuses& (0+255),w,b
  7281  001B1C  6ED9               	movwf	fsr2l,c
  7282  001B1E  50F4               	movf	prodh,w,c
  7283  001B20  0100               	movlb	0	; () banked
  7284  001B22  21CF               	addwfc	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),w,b
  7285  001B24  6EDA               	movwf	fsr2h,c
  7286  001B26  50DF               	movf	indf2,w,c
  7287  001B28  0100               	movlb	0	; () banked
  7288  001B2A  6FD1               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  7289  001B2C  0100               	movlb	0	; () banked
  7290  001B2E  2BD0               	incf	??_DisplaySensorStatuses& (0+255),f,b
  7291  001B30  D003               	goto	u4674
  7292  001B32                     u4675:
  7293  001B32  0100               	movlb	0	; () banked
  7294  001B34  90D8               	bcf	status,0,c
  7295  001B36  37D1               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  7296  001B38                     u4674:
  7297  001B38  0100               	movlb	0	; () banked
  7298  001B3A  2FD0               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  7299  001B3C  D7FA               	goto	u4675
  7300  001B3E  0100               	movlb	0	; () banked
  7301  001B40  51D1               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  7302  001B42  1A91               	xorwf	3985,f,c	;volatile
  7303                           
  7304                           ; BSR set to: 0
  7305  001B44  0100               	movlb	0	; () banked
  7306  001B46  2BD2               	incf	DisplaySensorStatuses@index& (0+255),f,b
  7307  001B48  D7DC               	goto	l5719
  7308  001B4A                     l831:
  7309                           
  7310                           ; BSR set to: 0
  7311  001B4A  0012               	return		;funcret
  7312  001B4C                     __end_of_DisplaySensorStatuses:
  7313                           	opt stack 0
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           postinc0	equ	0xFEE
  7318                           wreg	equ	0xFE8
  7319                           indf2	equ	0xFDF
  7320                           postinc2	equ	0xFDE
  7321                           postdec2	equ	0xFDD
  7322                           fsr2h	equ	0xFDA
  7323                           fsr2l	equ	0xFD9
  7324                           status	equ	0xFD8
  7325                           
  7326 ;; *************** function _CalculateSensorStatuses *****************
  7327 ;; Defined at:
  7328 ;;		line 314 in file "FastBuggy17_Main_Code_TUNING.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  sensor_readi    2   16[BANK0 ] PTR const int 
  7331 ;;		 -> sensor_readings_normalised(10), 
  7332 ;;  sensor_thres    2   18[BANK0 ] PTR const int 
  7333 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), sensor_threshold(2), 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  index           1   25[BANK0 ] unsigned char 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;		None               void
  7338 ;; Registers used:
  7339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:       10 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    7
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_CalibrateThreshold
  7356 ;;		_main
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text51
  7361  0009DA                     __ptext51:
  7362                           	opt stack 0
  7363  0009DA                     _CalculateSensorStatuses:
  7364                           	opt stack 20
  7365                           
  7366                           ;FastBuggy17_Main_Code_TUNING.c: 315: unsigned char index;
  7367                           ;FastBuggy17_Main_Code_TUNING.c: 317: if(line_mode == 0) {
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;incstack = 0
  7371  0009DA  502A               	movf	_line_mode,w,c
  7372  0009DC  A4D8               	btfss	status,2,c
  7373  0009DE  D03E               	goto	l5683
  7374                           
  7375                           ;FastBuggy17_Main_Code_TUNING.c: 318: for(index = 0; index < 5; index++) {
  7376  0009E0  0E00               	movlw	0
  7377  0009E2  0100               	movlb	0	; () banked
  7378  0009E4  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7379  0009E6                     l5669:
  7380                           
  7381                           ; BSR set to: 0
  7382  0009E6  0E04               	movlw	4
  7383  0009E8  0100               	movlb	0	; () banked
  7384  0009EA  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7385  0009EC  D001               	goto	l5673
  7386                           
  7387                           ; BSR set to: 0
  7388  0009EE  D077               	goto	l818
  7389  0009F0                     l5673:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;FastBuggy17_Main_Code_TUNING.c: 319: if(*(sensor_readings_normalised + index) < *sensor
      +                          _threshold) {
  7393  0009F0  C0D0  FFD9         	movff	CalculateSensorStatuses@sensor_threshold,fsr2l
  7394  0009F4  C0D1  FFDA         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr2h
  7395  0009F8  0100               	movlb	0	; () banked
  7396  0009FA  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7397  0009FC  0D02               	mullw	2
  7398  0009FE  50F3               	movf	prodl,w,c
  7399  000A00  0100               	movlb	0	; () banked
  7400  000A02  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7401  000A04  6EE1               	movwf	fsr1l,c
  7402  000A06  50F4               	movf	prodh,w,c
  7403  000A08  0100               	movlb	0	; () banked
  7404  000A0A  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7405  000A0C  6EE2               	movwf	fsr1h,c
  7406  000A0E  50DE               	movf	postinc2,w,c
  7407  000A10  5CE6               	subwf	postinc1,w,c
  7408  000A12  50E6               	movf	postinc1,w,c
  7409  000A14  0A80               	xorlw	128
  7410  000A16  0100               	movlb	0	; () banked
  7411  000A18  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7412  000A1A  50DE               	movf	postinc2,w,c
  7413  000A1C  0A80               	xorlw	128
  7414  000A1E  0100               	movlb	0	; () banked
  7415  000A20  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7416  000A22  B0D8               	btfsc	status,0,c
  7417  000A24  D00B               	goto	l5677
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;FastBuggy17_Main_Code_TUNING.c: 320: sensor_statuses[index] = 1;
  7421  000A26  0100               	movlb	0	; () banked
  7422  000A28  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7423  000A2A  0D01               	mullw	1
  7424  000A2C  0E25               	movlw	low _sensor_statuses
  7425  000A2E  24F3               	addwf	prodl,w,c
  7426  000A30  6ED9               	movwf	fsr2l,c
  7427  000A32  0E00               	movlw	high _sensor_statuses
  7428  000A34  20F4               	addwfc	prodh,w,c
  7429  000A36  6EDA               	movwf	fsr2h,c
  7430  000A38  0E01               	movlw	1
  7431  000A3A  D00A               	goto	L3
  7432  000A3C                     l5677:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;FastBuggy17_Main_Code_TUNING.c: 322: else {
  7436                           ;FastBuggy17_Main_Code_TUNING.c: 323: sensor_statuses[index] = 0;
  7437  000A3C  0100               	movlb	0	; () banked
  7438  000A3E  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7439  000A40  0D01               	mullw	1
  7440  000A42  0E25               	movlw	low _sensor_statuses
  7441  000A44  24F3               	addwf	prodl,w,c
  7442  000A46  6ED9               	movwf	fsr2l,c
  7443  000A48  0E00               	movlw	high _sensor_statuses
  7444  000A4A  20F4               	addwfc	prodh,w,c
  7445  000A4C  6EDA               	movwf	fsr2h,c
  7446  000A4E  0E00               	movlw	0
  7447  000A50                     L3:
  7448  000A50  6EDF               	movwf	indf2,c
  7449  000A52  D000               	goto	l5679
  7450  000A54                     l5679:
  7451                           
  7452                           ; BSR set to: 0
  7453  000A54  0100               	movlb	0	; () banked
  7454  000A56  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7455  000A58  D7C6               	goto	l5669
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;FastBuggy17_Main_Code_TUNING.c: 324: }
  7459                           ;FastBuggy17_Main_Code_TUNING.c: 325: }
  7460                           ;FastBuggy17_Main_Code_TUNING.c: 326: }
  7461                           
  7462                           ; BSR set to: 0
  7463  000A5A  D041               	goto	l818
  7464  000A5C                     l5683:
  7465                           
  7466                           ;FastBuggy17_Main_Code_TUNING.c: 327: else if(line_mode == 1) {
  7467  000A5C  042A               	decf	_line_mode,w,c
  7468  000A5E  A4D8               	btfss	status,2,c
  7469  000A60  D03E               	goto	l818
  7470                           
  7471                           ;FastBuggy17_Main_Code_TUNING.c: 328: for(index = 0; index < 5; index++) {
  7472  000A62  0E00               	movlw	0
  7473  000A64  0100               	movlb	0	; () banked
  7474  000A66  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7475  000A68                     l5687:
  7476                           
  7477                           ; BSR set to: 0
  7478  000A68  0E04               	movlw	4
  7479  000A6A  0100               	movlb	0	; () banked
  7480  000A6C  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7481  000A6E  D001               	goto	l5691
  7482                           
  7483                           ; BSR set to: 0
  7484  000A70  D036               	goto	l818
  7485  000A72                     l5691:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;FastBuggy17_Main_Code_TUNING.c: 329: if(*(sensor_readings_normalised + index) > *sensor
      +                          _threshold) {
  7489  000A72  0100               	movlb	0	; () banked
  7490  000A74  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7491  000A76  0D02               	mullw	2
  7492  000A78  50F3               	movf	prodl,w,c
  7493  000A7A  0100               	movlb	0	; () banked
  7494  000A7C  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7495  000A7E  6ED9               	movwf	fsr2l,c
  7496  000A80  50F4               	movf	prodh,w,c
  7497  000A82  0100               	movlb	0	; () banked
  7498  000A84  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7499  000A86  6EDA               	movwf	fsr2h,c
  7500  000A88  C0D0  FFE1         	movff	CalculateSensorStatuses@sensor_threshold,fsr1l
  7501  000A8C  C0D1  FFE2         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr1h
  7502  000A90  50DE               	movf	postinc2,w,c
  7503  000A92  5CE6               	subwf	postinc1,w,c
  7504  000A94  50E6               	movf	postinc1,w,c
  7505  000A96  0A80               	xorlw	128
  7506  000A98  0100               	movlb	0	; () banked
  7507  000A9A  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7508  000A9C  50DE               	movf	postinc2,w,c
  7509  000A9E  0A80               	xorlw	128
  7510  000AA0  0100               	movlb	0	; () banked
  7511  000AA2  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7512  000AA4  B0D8               	btfsc	status,0,c
  7513  000AA6  D00B               	goto	l5695
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;FastBuggy17_Main_Code_TUNING.c: 330: sensor_statuses[index] = 1;
  7517  000AA8  0100               	movlb	0	; () banked
  7518  000AAA  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7519  000AAC  0D01               	mullw	1
  7520  000AAE  0E25               	movlw	low _sensor_statuses
  7521  000AB0  24F3               	addwf	prodl,w,c
  7522  000AB2  6ED9               	movwf	fsr2l,c
  7523  000AB4  0E00               	movlw	high _sensor_statuses
  7524  000AB6  20F4               	addwfc	prodh,w,c
  7525  000AB8  6EDA               	movwf	fsr2h,c
  7526  000ABA  0E01               	movlw	1
  7527  000ABC  D00A               	goto	L4
  7528  000ABE                     l5695:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;FastBuggy17_Main_Code_TUNING.c: 332: else {
  7532                           ;FastBuggy17_Main_Code_TUNING.c: 333: sensor_statuses[index] = 0;
  7533  000ABE  0100               	movlb	0	; () banked
  7534  000AC0  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7535  000AC2  0D01               	mullw	1
  7536  000AC4  0E25               	movlw	low _sensor_statuses
  7537  000AC6  24F3               	addwf	prodl,w,c
  7538  000AC8  6ED9               	movwf	fsr2l,c
  7539  000ACA  0E00               	movlw	high _sensor_statuses
  7540  000ACC  20F4               	addwfc	prodh,w,c
  7541  000ACE  6EDA               	movwf	fsr2h,c
  7542  000AD0  0E00               	movlw	0
  7543  000AD2                     L4:
  7544  000AD2  6EDF               	movwf	indf2,c
  7545  000AD4  D000               	goto	l5697
  7546  000AD6                     l5697:
  7547                           
  7548                           ; BSR set to: 0
  7549  000AD6  0100               	movlb	0	; () banked
  7550  000AD8  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7551  000ADA  D7C6               	goto	l5687
  7552                           
  7553                           ; BSR set to: 0
  7554                           
  7555                           ; BSR set to: 0
  7556                           
  7557                           ; BSR set to: 0
  7558  000ADC  D000               	goto	l818
  7559  000ADE                     l818:
  7560  000ADE  0012               	return		;funcret
  7561  000AE0                     __end_of_CalculateSensorStatuses:
  7562                           	opt stack 0
  7563                           prodh	equ	0xFF4
  7564                           prodl	equ	0xFF3
  7565                           intcon	equ	0xFF2
  7566                           postinc0	equ	0xFEE
  7567                           wreg	equ	0xFE8
  7568                           postinc1	equ	0xFE6
  7569                           fsr1h	equ	0xFE2
  7570                           fsr1l	equ	0xFE1
  7571                           indf2	equ	0xFDF
  7572                           postinc2	equ	0xFDE
  7573                           postdec2	equ	0xFDD
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function _BusyADC *****************
  7579 ;; Defined at:
  7580 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      unsigned char 
  7587 ;; Registers used:
  7588 ;;		wreg
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;Total ram usage:        0 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    7
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_CalibrateThreshold
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text52
  7609  002432                     __ptext52:
  7610                           	opt stack 0
  7611  002432                     _BusyADC:
  7612                           	opt stack 20
  7613                           
  7614                           ;incstack = 0
  7615  002432  A2C2               	btfss	4034,1,c	;volatile
  7616  002434  D002               	goto	u4750
  7617  002436  0E01               	movlw	1
  7618  002438  D002               	goto	l1029
  7619  00243A                     u4750:
  7620  00243A  0E00               	movlw	0
  7621  00243C  D000               	goto	l1029
  7622  00243E                     l1029:
  7623  00243E  0012               	return		;funcret
  7624  002440                     __end_of_BusyADC:
  7625                           	opt stack 0
  7626                           prodh	equ	0xFF4
  7627                           prodl	equ	0xFF3
  7628                           intcon	equ	0xFF2
  7629                           postinc0	equ	0xFEE
  7630                           wreg	equ	0xFE8
  7631                           postinc1	equ	0xFE6
  7632                           fsr1h	equ	0xFE2
  7633                           fsr1l	equ	0xFE1
  7634                           indf2	equ	0xFDF
  7635                           postinc2	equ	0xFDE
  7636                           postdec2	equ	0xFDD
  7637                           fsr2h	equ	0xFDA
  7638                           fsr2l	equ	0xFD9
  7639                           status	equ	0xFD8
  7640                           
  7641 ;; *************** function _CalibrateOnLine *****************
  7642 ;; Defined at:
  7643 ;;		line 482 in file "FastBuggy17_Main_Code_TUNING.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;		None               void
  7650 ;; Registers used:
  7651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:   10
  7664 ;; This function calls:
  7665 ;;		_BusySensorAcq
  7666 ;;		_CalculateSensorSum
  7667 ;;		_GetSensorReadings
  7668 ;;		_NormaliseSensorReadings
  7669 ;;		_PB1pressed
  7670 ;;		_SendStatus
  7671 ;; This function is called by:
  7672 ;;		_GenerateCalibration
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text53
  7677  00197A                     __ptext53:
  7678                           	opt stack 0
  7679  00197A                     _CalibrateOnLine:
  7680                           	opt stack 18
  7681                           
  7682                           ;FastBuggy17_Main_Code_TUNING.c: 483: SendStatus(0x04);
  7683                           
  7684                           ;incstack = 0
  7685  00197A  0E04               	movlw	4
  7686  00197C  ECCA  F00E         	call	_SendStatus
  7687                           
  7688                           ;FastBuggy17_Main_Code_TUNING.c: 484: LATJ = 0x07;
  7689  001980  0E07               	movlw	7
  7690  001982  6E91               	movwf	3985,c	;volatile
  7691                           
  7692                           ;FastBuggy17_Main_Code_TUNING.c: 486: while(PB1pressed() == 0);
  7693  001984  D000               	goto	l5895
  7694  001986                     l5895:
  7695  001986  EC4D  F00D         	call	_PB1pressed	;wreg free
  7696  00198A  0900               	iorlw	0
  7697  00198C  B4D8               	btfsc	status,2,c
  7698  00198E  D7FB               	goto	l5895
  7699                           
  7700                           ;FastBuggy17_Main_Code_TUNING.c: 488: GetSensorReadings();
  7701  001990  EC5B  F011         	call	_GetSensorReadings	;wreg free
  7702                           
  7703                           ;FastBuggy17_Main_Code_TUNING.c: 489: while(BusySensorAcq() == 1);
  7704  001994  D000               	goto	l5899
  7705  001996                     l5899:
  7706  001996  ECEB  F011         	call	_BusySensorAcq	;wreg free
  7707  00199A  06E8               	decf	wreg,f,c
  7708  00199C  B4D8               	btfsc	status,2,c
  7709  00199E  D7FB               	goto	l5899
  7710                           
  7711                           ;FastBuggy17_Main_Code_TUNING.c: 490: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7712  0019A0  0EAE               	movlw	low _sensor_readings_raw
  7713  0019A2  0100               	movlb	0	; () banked
  7714  0019A4  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7715  0019A6  0E00               	movlw	high _sensor_readings_raw
  7716  0019A8  0100               	movlb	0	; () banked
  7717  0019AA  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7718  0019AC  0E9A               	movlw	low _sensor_offsets
  7719  0019AE  0100               	movlb	0	; () banked
  7720  0019B0  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7721  0019B2  0E00               	movlw	high _sensor_offsets
  7722  0019B4  0100               	movlb	0	; () banked
  7723  0019B6  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7724  0019B8  ECCC  F00A         	call	_NormaliseSensorReadings	;wreg free
  7725                           
  7726                           ;FastBuggy17_Main_Code_TUNING.c: 492: sensor_threshold = sensor_readings_normalised[2];
  7727  0019BC  C0A8  F0BC         	movff	_sensor_readings_normalised+4,_sensor_threshold
  7728  0019C0  C0A9  F0BD         	movff	_sensor_readings_normalised+5,_sensor_threshold+1
  7729                           
  7730                           ;FastBuggy17_Main_Code_TUNING.c: 493: PID_set_point = CalculateSensorSum(sensor_readings
      +                          _normalised);
  7731  0019C4  0EA4               	movlw	low _sensor_readings_normalised
  7732  0019C6  0100               	movlb	0	; () banked
  7733  0019C8  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  7734  0019CA  0E00               	movlw	high _sensor_readings_normalised
  7735  0019CC  0100               	movlb	0	; () banked
  7736  0019CE  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  7737  0019D0  EC70  F005         	call	_CalculateSensorSum	;wreg free
  7738  0019D4  C0D4  F0BA         	movff	?_CalculateSensorSum,_PID_set_point
  7739  0019D8  C0D5  F0BB         	movff	?_CalculateSensorSum+1,_PID_set_point+1
  7740  0019DC  0012               	return		;funcret
  7741  0019DE                     __end_of_CalibrateOnLine:
  7742                           	opt stack 0
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           postinc0	equ	0xFEE
  7747                           wreg	equ	0xFE8
  7748                           postinc1	equ	0xFE6
  7749                           fsr1h	equ	0xFE2
  7750                           fsr1l	equ	0xFE1
  7751                           indf2	equ	0xFDF
  7752                           postinc2	equ	0xFDE
  7753                           postdec2	equ	0xFDD
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function _NormaliseSensorReadings *****************
  7759 ;; Defined at:
  7760 ;;		line 304 in file "FastBuggy17_Main_Code_TUNING.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  sensor_readi    2   16[BANK0 ] PTR  int 
  7763 ;;		 -> sensor_readings_raw(10), 
  7764 ;;  sensor_offse    2   18[BANK0 ] PTR const int 
  7765 ;;		 -> sensor_offsets(10), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  index           1   24[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;		None               void
  7770 ;; Registers used:
  7771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;Total ram usage:        9 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    7
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_CalibrateOnLine
  7788 ;;		_CalibrateThreshold
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text54
  7794  001598                     __ptext54:
  7795                           	opt stack 0
  7796  001598                     _NormaliseSensorReadings:
  7797                           	opt stack 23
  7798                           
  7799                           ;FastBuggy17_Main_Code_TUNING.c: 305: unsigned char index;
  7800                           ;FastBuggy17_Main_Code_TUNING.c: 307: for(index = 0; index < 5; index++) {
  7801                           
  7802                           ;incstack = 0
  7803  001598  0E00               	movlw	0
  7804  00159A  0100               	movlb	0	; () banked
  7805  00159C  6FD6               	movwf	NormaliseSensorReadings@index& (0+255),b
  7806  00159E                     l5655:
  7807                           
  7808                           ; BSR set to: 0
  7809  00159E  0E04               	movlw	4
  7810  0015A0  0100               	movlb	0	; () banked
  7811  0015A2  65D6               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  7812  0015A4  D001               	goto	l5659
  7813                           
  7814                           ; BSR set to: 0
  7815  0015A6  D036               	goto	l804
  7816  0015A8                     l5659:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;FastBuggy17_Main_Code_TUNING.c: 308: sensor_readings_normalised[index] = *(sensor_readi
      +                          ngs_raw + index) + *(sensor_offsets + index);
  7820  0015A8  0100               	movlb	0	; () banked
  7821  0015AA  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7822  0015AC  0D02               	mullw	2
  7823  0015AE  50F3               	movf	prodl,w,c
  7824  0015B0  0100               	movlb	0	; () banked
  7825  0015B2  25D0               	addwf	NormaliseSensorReadings@sensor_offsets& (0+255),w,b
  7826  0015B4  6ED9               	movwf	fsr2l,c
  7827  0015B6  50F4               	movf	prodh,w,c
  7828  0015B8  0100               	movlb	0	; () banked
  7829  0015BA  21D1               	addwfc	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),w,b
  7830  0015BC  6EDA               	movwf	fsr2h,c
  7831  0015BE  CFDE F0D2          	movff	postinc2,??_NormaliseSensorReadings
  7832  0015C2  CFDD F0D3          	movff	postdec2,??_NormaliseSensorReadings+1
  7833  0015C6  0100               	movlb	0	; () banked
  7834  0015C8  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7835  0015CA  0D02               	mullw	2
  7836  0015CC  50F3               	movf	prodl,w,c
  7837  0015CE  0100               	movlb	0	; () banked
  7838  0015D0  25CE               	addwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),w,b
  7839  0015D2  6ED9               	movwf	fsr2l,c
  7840  0015D4  50F4               	movf	prodh,w,c
  7841  0015D6  0100               	movlb	0	; () banked
  7842  0015D8  21CF               	addwfc	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),w,b
  7843  0015DA  6EDA               	movwf	fsr2h,c
  7844  0015DC  CFDE F0D4          	movff	postinc2,??_NormaliseSensorReadings+2
  7845  0015E0  CFDD F0D5          	movff	postdec2,??_NormaliseSensorReadings+3
  7846  0015E4  0100               	movlb	0	; () banked
  7847  0015E6  51D2               	movf	??_NormaliseSensorReadings& (0+255),w,b
  7848  0015E8  0100               	movlb	0	; () banked
  7849  0015EA  27D4               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  7850  0015EC  0100               	movlb	0	; () banked
  7851  0015EE  51D3               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  7852  0015F0  0100               	movlb	0	; () banked
  7853  0015F2  23D5               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  7854  0015F4  0100               	movlb	0	; () banked
  7855  0015F6  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7856  0015F8  0D02               	mullw	2
  7857  0015FA  0EA4               	movlw	low _sensor_readings_normalised
  7858  0015FC  24F3               	addwf	prodl,w,c
  7859  0015FE  6ED9               	movwf	fsr2l,c
  7860  001600  0E00               	movlw	high _sensor_readings_normalised
  7861  001602  20F4               	addwfc	prodh,w,c
  7862  001604  6EDA               	movwf	fsr2h,c
  7863  001606  C0D4  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  7864  00160A  C0D5  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  7865                           
  7866                           ; BSR set to: 0
  7867  00160E  0100               	movlb	0	; () banked
  7868  001610  2BD6               	incf	NormaliseSensorReadings@index& (0+255),f,b
  7869  001612  D7C5               	goto	l5655
  7870  001614                     l804:
  7871                           
  7872                           ; BSR set to: 0
  7873  001614  0012               	return		;funcret
  7874  001616                     __end_of_NormaliseSensorReadings:
  7875                           	opt stack 0
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           postinc0	equ	0xFEE
  7880                           wreg	equ	0xFE8
  7881                           postinc1	equ	0xFE6
  7882                           fsr1h	equ	0xFE2
  7883                           fsr1l	equ	0xFE1
  7884                           indf2	equ	0xFDF
  7885                           postinc2	equ	0xFDE
  7886                           postdec2	equ	0xFDD
  7887                           fsr2h	equ	0xFDA
  7888                           fsr2l	equ	0xFD9
  7889                           status	equ	0xFD8
  7890                           
  7891 ;; *************** function _CalculateSensorSum *****************
  7892 ;; Defined at:
  7893 ;;		line 341 in file "FastBuggy17_Main_Code_TUNING.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  sensor_readi    2   22[BANK0 ] PTR const int 
  7896 ;;		 -> sensor_readings_normalised(10), 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  sum             2   26[BANK0 ] int 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2   22[BANK0 ] int 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;Total ram usage:        6 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    8
  7915 ;; This function calls:
  7916 ;;		___wmul
  7917 ;; This function is called by:
  7918 ;;		_CalibrateOnLine
  7919 ;;		_main
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text55
  7924  000AE0                     __ptext55:
  7925                           	opt stack 0
  7926  000AE0                     _CalculateSensorSum:
  7927                           	opt stack 19
  7928                           
  7929                           ;FastBuggy17_Main_Code_TUNING.c: 343: int sum = 0;
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;incstack = 0
  7933  000AE0  0E00               	movlw	0
  7934  000AE2  0100               	movlb	0	; () banked
  7935  000AE4  6FD9               	movwf	(CalculateSensorSum@sum+1)& (0+255),b
  7936  000AE6  0E00               	movlw	0
  7937  000AE8  6FD8               	movwf	CalculateSensorSum@sum& (0+255),b
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;FastBuggy17_Main_Code_TUNING.c: 345: sum += *(sensor_readings_normalised + 0) * 3;
  7941  000AEA  C0D4  FFD9         	movff	CalculateSensorSum@sensor_readings_normalised,fsr2l
  7942  000AEE  C0D5  FFDA         	movff	CalculateSensorSum@sensor_readings_normalised+1,fsr2h
  7943  000AF2  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  7944  000AF6  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  7945  000AFA  0E00               	movlw	0
  7946  000AFC  0100               	movlb	0	; () banked
  7947  000AFE  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7948  000B00  0E03               	movlw	3
  7949  000B02  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  7950  000B04  EC1F  F00F         	call	___wmul	;wreg free
  7951  000B08  0100               	movlb	0	; () banked
  7952  000B0A  51CE               	movf	?___wmul& (0+255),w,b
  7953  000B0C  0100               	movlb	0	; () banked
  7954  000B0E  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7955  000B10  0100               	movlb	0	; () banked
  7956  000B12  51CF               	movf	(?___wmul+1)& (0+255),w,b
  7957  000B14  0100               	movlb	0	; () banked
  7958  000B16  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;FastBuggy17_Main_Code_TUNING.c: 346: sum += *(sensor_readings_normalised + 1) * 2;
  7962  000B18  0100               	movlb	0	; () banked
  7963  000B1A  EE20 F002          	lfsr	2,2
  7964  000B1E  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7965  000B20  26D9               	addwf	fsr2l,f,c
  7966  000B22  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7967  000B24  22DA               	addwfc	fsr2h,f,c
  7968  000B26  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  7969  000B2A  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  7970  000B2E  90D8               	bcf	status,0,c
  7971  000B30  0100               	movlb	0	; () banked
  7972  000B32  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  7973  000B34  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  7974  000B36  0100               	movlb	0	; () banked
  7975  000B38  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  7976  000B3A  0100               	movlb	0	; () banked
  7977  000B3C  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7978  000B3E  0100               	movlb	0	; () banked
  7979  000B40  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  7980  000B42  0100               	movlb	0	; () banked
  7981  000B44  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;FastBuggy17_Main_Code_TUNING.c: 347: sum += *(sensor_readings_normalised + 2) * 1;
  7985  000B46  0100               	movlb	0	; () banked
  7986  000B48  EE20 F004          	lfsr	2,4
  7987  000B4C  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7988  000B4E  26D9               	addwf	fsr2l,f,c
  7989  000B50  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7990  000B52  22DA               	addwfc	fsr2h,f,c
  7991  000B54  50DE               	movf	postinc2,w,c
  7992  000B56  0100               	movlb	0	; () banked
  7993  000B58  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7994  000B5A  50DD               	movf	postdec2,w,c
  7995  000B5C  0100               	movlb	0	; () banked
  7996  000B5E  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;FastBuggy17_Main_Code_TUNING.c: 348: sum += *(sensor_readings_normalised + 3) * -2;
  8000  000B60  0100               	movlb	0	; () banked
  8001  000B62  EE20 F006          	lfsr	2,6
  8002  000B66  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8003  000B68  26D9               	addwf	fsr2l,f,c
  8004  000B6A  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8005  000B6C  22DA               	addwfc	fsr2h,f,c
  8006  000B6E  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  8007  000B72  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  8008  000B76  90D8               	bcf	status,0,c
  8009  000B78  0100               	movlb	0	; () banked
  8010  000B7A  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8011  000B7C  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8012  000B7E  0100               	movlb	0	; () banked
  8013  000B80  1FD6               	comf	??_CalculateSensorSum& (0+255),f,b
  8014  000B82  1FD7               	comf	(??_CalculateSensorSum+1)& (0+255),f,b
  8015  000B84  4BD6               	infsnz	??_CalculateSensorSum& (0+255),f,b
  8016  000B86  2BD7               	incf	(??_CalculateSensorSum+1)& (0+255),f,b
  8017  000B88  0100               	movlb	0	; () banked
  8018  000B8A  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  8019  000B8C  0100               	movlb	0	; () banked
  8020  000B8E  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8021  000B90  0100               	movlb	0	; () banked
  8022  000B92  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8023  000B94  0100               	movlb	0	; () banked
  8024  000B96  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;FastBuggy17_Main_Code_TUNING.c: 349: sum += *(sensor_readings_normalised + 4) * -3;
  8028  000B98  0100               	movlb	0	; () banked
  8029  000B9A  EE20 F008          	lfsr	2,8
  8030  000B9E  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8031  000BA0  26D9               	addwf	fsr2l,f,c
  8032  000BA2  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8033  000BA4  22DA               	addwfc	fsr2h,f,c
  8034  000BA6  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  8035  000BAA  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  8036  000BAE  0EFF               	movlw	255
  8037  000BB0  0100               	movlb	0	; () banked
  8038  000BB2  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8039  000BB4  0EFD               	movlw	253
  8040  000BB6  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  8041  000BB8  EC1F  F00F         	call	___wmul	;wreg free
  8042  000BBC  0100               	movlb	0	; () banked
  8043  000BBE  51CE               	movf	?___wmul& (0+255),w,b
  8044  000BC0  0100               	movlb	0	; () banked
  8045  000BC2  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8046  000BC4  0100               	movlb	0	; () banked
  8047  000BC6  51CF               	movf	(?___wmul+1)& (0+255),w,b
  8048  000BC8  0100               	movlb	0	; () banked
  8049  000BCA  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;FastBuggy17_Main_Code_TUNING.c: 351: return(sum);
  8053  000BCC  C0D8  F0D4         	movff	CalculateSensorSum@sum,?_CalculateSensorSum
  8054  000BD0  C0D9  F0D5         	movff	CalculateSensorSum@sum+1,?_CalculateSensorSum+1
  8055  000BD4  D000               	goto	l821
  8056  000BD6                     l821:
  8057                           
  8058                           ; BSR set to: 0
  8059  000BD6  0012               	return		;funcret
  8060  000BD8                     __end_of_CalculateSensorSum:
  8061                           	opt stack 0
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           wreg	equ	0xFE8
  8067                           postinc1	equ	0xFE6
  8068                           fsr1h	equ	0xFE2
  8069                           fsr1l	equ	0xFE1
  8070                           indf2	equ	0xFDF
  8071                           postinc2	equ	0xFDE
  8072                           postdec2	equ	0xFDD
  8073                           fsr2h	equ	0xFDA
  8074                           fsr2l	equ	0xFD9
  8075                           status	equ	0xFD8
  8076                           
  8077 ;; *************** function ___wmul *****************
  8078 ;; Defined at:
  8079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  multiplier      2   16[BANK0 ] unsigned int 
  8082 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  product         2   20[BANK0 ] unsigned int 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  2   16[BANK0 ] unsigned int 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0, prodl, prodh
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;Total ram usage:        6 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    7
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_CalculateSensorSum
  8105 ;;		_main
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text56
  8110  001E3E                     __ptext56:
  8111                           	opt stack 0
  8112  001E3E                     ___wmul:
  8113                           	opt stack 23
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;incstack = 0
  8117  001E3E  0100               	movlb	0	; () banked
  8118  001E40  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8119  001E42  0100               	movlb	0	; () banked
  8120  001E44  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8121  001E46  CFF3 F0D2          	movff	prodl,___wmul@product
  8122  001E4A  CFF4 F0D3          	movff	prodh,___wmul@product+1
  8123  001E4E  0100               	movlb	0	; () banked
  8124  001E50  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8125  001E52  0100               	movlb	0	; () banked
  8126  001E54  03D1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8127  001E56  50F3               	movf	prodl,w,c
  8128  001E58  0100               	movlb	0	; () banked
  8129  001E5A  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8130  001E5C  0100               	movlb	0	; () banked
  8131  001E5E  51CF               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8132  001E60  0100               	movlb	0	; () banked
  8133  001E62  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8134  001E64  50F3               	movf	prodl,w,c
  8135  001E66  0100               	movlb	0	; () banked
  8136  001E68  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8137                           
  8138                           ; BSR set to: 0
  8139  001E6A  C0D2  F0CE         	movff	___wmul@product,?___wmul
  8140  001E6E  C0D3  F0CF         	movff	___wmul@product+1,?___wmul+1
  8141  001E72  D000               	goto	l1248
  8142  001E74                     l1248:
  8143                           
  8144                           ; BSR set to: 0
  8145  001E74  0012               	return		;funcret
  8146  001E76                     __end_of___wmul:
  8147                           	opt stack 0
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           intcon	equ	0xFF2
  8151                           postinc0	equ	0xFEE
  8152                           wreg	equ	0xFE8
  8153                           postinc1	equ	0xFE6
  8154                           fsr1h	equ	0xFE2
  8155                           fsr1l	equ	0xFE1
  8156                           indf2	equ	0xFDF
  8157                           postinc2	equ	0xFDE
  8158                           postdec2	equ	0xFDD
  8159                           fsr2h	equ	0xFDA
  8160                           fsr2l	equ	0xFD9
  8161                           status	equ	0xFD8
  8162                           
  8163 ;; *************** function _CalibrateOffsets *****************
  8164 ;; Defined at:
  8165 ;;		line 462 in file "FastBuggy17_Main_Code_TUNING.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  index           1   27[BANK0 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;		None               void
  8172 ;; Registers used:
  8173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;Total ram usage:        3 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:   10
  8186 ;; This function calls:
  8187 ;;		_BusySensorAcq
  8188 ;;		_GetSensorReadings
  8189 ;;		_PB1pressed
  8190 ;;		_SendStatus
  8191 ;; This function is called by:
  8192 ;;		_GenerateCalibration
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text57
  8197  001384                     __ptext57:
  8198                           	opt stack 0
  8199  001384                     _CalibrateOffsets:
  8200                           	opt stack 18
  8201                           
  8202                           ;FastBuggy17_Main_Code_TUNING.c: 463: unsigned char index;
  8203                           ;FastBuggy17_Main_Code_TUNING.c: 465: SendStatus(0x03);
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;incstack = 0
  8207  001384  0E03               	movlw	3
  8208  001386  ECCA  F00E         	call	_SendStatus
  8209                           
  8210                           ;FastBuggy17_Main_Code_TUNING.c: 466: LATJ = 0x07;
  8211  00138A  0E07               	movlw	7
  8212  00138C  6E91               	movwf	3985,c	;volatile
  8213                           
  8214                           ;FastBuggy17_Main_Code_TUNING.c: 468: while(PB1pressed() == 0);
  8215  00138E  D000               	goto	l5873
  8216  001390                     l5873:
  8217  001390  EC4D  F00D         	call	_PB1pressed	;wreg free
  8218  001394  0900               	iorlw	0
  8219  001396  B4D8               	btfsc	status,2,c
  8220  001398  D7FB               	goto	l5873
  8221                           
  8222                           ;FastBuggy17_Main_Code_TUNING.c: 470: GetSensorReadings();
  8223  00139A  EC5B  F011         	call	_GetSensorReadings	;wreg free
  8224                           
  8225                           ;FastBuggy17_Main_Code_TUNING.c: 471: while(BusySensorAcq());
  8226  00139E  D000               	goto	l5877
  8227  0013A0                     l5877:
  8228  0013A0  ECEB  F011         	call	_BusySensorAcq	;wreg free
  8229  0013A4  0900               	iorlw	0
  8230  0013A6  A4D8               	btfss	status,2,c
  8231  0013A8  D7FB               	goto	l5877
  8232                           
  8233                           ;FastBuggy17_Main_Code_TUNING.c: 473: for(index = 0; index < 5; index++) {
  8234  0013AA  0E00               	movlw	0
  8235  0013AC  0100               	movlb	0	; () banked
  8236  0013AE  6FD9               	movwf	CalibrateOffsets@index& (0+255),b
  8237  0013B0                     l5881:
  8238                           
  8239                           ; BSR set to: 0
  8240  0013B0  0E04               	movlw	4
  8241  0013B2  0100               	movlb	0	; () banked
  8242  0013B4  65D9               	cpfsgt	CalibrateOffsets@index& (0+255),b
  8243  0013B6  D001               	goto	l5885
  8244                           
  8245                           ; BSR set to: 0
  8246  0013B8  D02A               	goto	l881
  8247  0013BA                     l5885:
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;FastBuggy17_Main_Code_TUNING.c: 475: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  8251  0013BA  0100               	movlb	0	; () banked
  8252  0013BC  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8253  0013BE  0D02               	mullw	2
  8254  0013C0  0EAE               	movlw	low _sensor_readings_raw
  8255  0013C2  24F3               	addwf	prodl,w,c
  8256  0013C4  6ED9               	movwf	fsr2l,c
  8257  0013C6  0E00               	movlw	high _sensor_readings_raw
  8258  0013C8  20F4               	addwfc	prodh,w,c
  8259  0013CA  6EDA               	movwf	fsr2h,c
  8260  0013CC  CFDE F0D7          	movff	postinc2,??_CalibrateOffsets
  8261  0013D0  CFDD F0D8          	movff	postdec2,??_CalibrateOffsets+1
  8262  0013D4  0100               	movlb	0	; () banked
  8263  0013D6  1FD7               	comf	??_CalibrateOffsets& (0+255),f,b
  8264  0013D8  1FD8               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  8265  0013DA  4BD7               	infsnz	??_CalibrateOffsets& (0+255),f,b
  8266  0013DC  2BD8               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  8267  0013DE  0100               	movlb	0	; () banked
  8268  0013E0  51B2               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  8269  0013E2  0100               	movlb	0	; () banked
  8270  0013E4  27D7               	addwf	??_CalibrateOffsets& (0+255),f,b
  8271  0013E6  0100               	movlb	0	; () banked
  8272  0013E8  51B3               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  8273  0013EA  0100               	movlb	0	; () banked
  8274  0013EC  23D8               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  8275  0013EE  0100               	movlb	0	; () banked
  8276  0013F0  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8277  0013F2  0D02               	mullw	2
  8278  0013F4  0E9A               	movlw	low _sensor_offsets
  8279  0013F6  24F3               	addwf	prodl,w,c
  8280  0013F8  6ED9               	movwf	fsr2l,c
  8281  0013FA  0E00               	movlw	high _sensor_offsets
  8282  0013FC  20F4               	addwfc	prodh,w,c
  8283  0013FE  6EDA               	movwf	fsr2h,c
  8284  001400  C0D7  FFDE         	movff	??_CalibrateOffsets,postinc2
  8285  001404  C0D8  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  8286                           
  8287                           ; BSR set to: 0
  8288  001408  0100               	movlb	0	; () banked
  8289  00140A  2BD9               	incf	CalibrateOffsets@index& (0+255),f,b
  8290  00140C  D7D1               	goto	l5881
  8291  00140E                     l881:
  8292                           
  8293                           ; BSR set to: 0
  8294  00140E  0012               	return		;funcret
  8295  001410                     __end_of_CalibrateOffsets:
  8296                           	opt stack 0
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           postinc0	equ	0xFEE
  8301                           wreg	equ	0xFE8
  8302                           postinc1	equ	0xFE6
  8303                           fsr1h	equ	0xFE2
  8304                           fsr1l	equ	0xFE1
  8305                           indf2	equ	0xFDF
  8306                           postinc2	equ	0xFDE
  8307                           postdec2	equ	0xFDD
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312 ;; *************** function _SendStatus *****************
  8313 ;; Defined at:
  8314 ;;		line 139 in file "Wireless.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  status_code     1    wreg     const unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  status_code     1   24[BANK0 ] const unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;		None               void
  8321 ;; Registers used:
  8322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;Total ram usage:        1 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    9
  8335 ;; This function calls:
  8336 ;;		_BusyTx
  8337 ;;		_FlushTxBuf
  8338 ;;		_PutCharTxBuf
  8339 ;;		_StartTx
  8340 ;; This function is called by:
  8341 ;;		_CalibrateOffsets
  8342 ;;		_CalibrateOnLine
  8343 ;;		_CalibrateThreshold
  8344 ;;		_SetPIDValues
  8345 ;;		_LoadPIDValues
  8346 ;;		_main
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text58
  8351  001D94                     __ptext58:
  8352                           	opt stack 0
  8353  001D94                     _SendStatus:
  8354                           	opt stack 20
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;incstack = 0
  8358                           ;SendStatus@status_code stored from wreg
  8359  001D94  0100               	movlb	0	; () banked
  8360  001D96  6FD6               	movwf	SendStatus@status_code& (0+255),b
  8361                           
  8362                           ; BSR set to: 0
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;Wireless.c: 140: while(BusyTx());
  8366  001D98  D000               	goto	l5635
  8367  001D9A                     l5635:
  8368  001D9A  ECE3  F011         	call	_BusyTx	;wreg free
  8369  001D9E  0900               	iorlw	0
  8370  001DA0  A4D8               	btfss	status,2,c
  8371  001DA2  D7FB               	goto	l5635
  8372                           
  8373                           ;Wireless.c: 141: FlushTxBuf();
  8374  001DA4  EC57  F00F         	call	_FlushTxBuf	;wreg free
  8375                           
  8376                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  8377  001DA8  0EAA               	movlw	170
  8378  001DAA  EC2E  F00E         	call	_PutCharTxBuf
  8379                           
  8380                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  8381  001DAE  0E01               	movlw	1
  8382  001DB0  EC2E  F00E         	call	_PutCharTxBuf
  8383                           
  8384                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  8385  001DB4  0100               	movlb	0	; () banked
  8386  001DB6  51D6               	movf	SendStatus@status_code& (0+255),w,b
  8387  001DB8  EC2E  F00E         	call	_PutCharTxBuf
  8388                           
  8389                           ;Wireless.c: 146: PutCharTxBuf('\r');
  8390  001DBC  0E0D               	movlw	13
  8391  001DBE  EC2E  F00E         	call	_PutCharTxBuf
  8392                           
  8393                           ;Wireless.c: 147: PutCharTxBuf('\n');
  8394  001DC2  0E0A               	movlw	10
  8395  001DC4  EC2E  F00E         	call	_PutCharTxBuf
  8396                           
  8397                           ;Wireless.c: 149: StartTx();
  8398  001DC8  EC56  F012         	call	_StartTx	;wreg free
  8399  001DCC  0012               	return		;funcret
  8400  001DCE                     __end_of_SendStatus:
  8401                           	opt stack 0
  8402                           prodh	equ	0xFF4
  8403                           prodl	equ	0xFF3
  8404                           intcon	equ	0xFF2
  8405                           postinc0	equ	0xFEE
  8406                           wreg	equ	0xFE8
  8407                           postinc1	equ	0xFE6
  8408                           fsr1h	equ	0xFE2
  8409                           fsr1l	equ	0xFE1
  8410                           indf2	equ	0xFDF
  8411                           postinc2	equ	0xFDE
  8412                           postdec2	equ	0xFDD
  8413                           fsr2h	equ	0xFDA
  8414                           fsr2l	equ	0xFD9
  8415                           status	equ	0xFD8
  8416                           
  8417 ;; *************** function _StartTx *****************
  8418 ;; Defined at:
  8419 ;;		line 41 in file "Wireless.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;		None               void
  8426 ;; Registers used:
  8427 ;;		wreg, status,2
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    7
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_SendStatus
  8444 ;;		_SendLineMode
  8445 ;;		_SendOffsets
  8446 ;;		_SendThreshold
  8447 ;;		_SendDefaultPIDValues
  8448 ;;		_SendStoredPIDValues
  8449 ;;		_SendCurrentPIDValues
  8450 ;;		_SendBattVoltageInitial
  8451 ;;		_SendPIDSetPointOnLine
  8452 ;;		_SendBattVoltage
  8453 ;;		_SendBattCurrent
  8454 ;;		_SendBattCurrentAcc
  8455 ;;		_SendPIDSetPointOffLine
  8456 ;;		_SendPIDError
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text59
  8461  0024AC                     __ptext59:
  8462                           	opt stack 0
  8463  0024AC                     _StartTx:
  8464                           	opt stack 21
  8465                           
  8466                           ;Wireless.c: 42: Tx_complete = 0;
  8467                           
  8468                           ;incstack = 0
  8469  0024AC  0E00               	movlw	0
  8470  0024AE  6E1A               	movwf	_Tx_complete,c
  8471                           
  8472                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  8473  0024B0  889D               	bsf	3997,4,c	;volatile
  8474  0024B2  0012               	return		;funcret
  8475  0024B4                     __end_of_StartTx:
  8476                           	opt stack 0
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           postinc0	equ	0xFEE
  8481                           wreg	equ	0xFE8
  8482                           postinc1	equ	0xFE6
  8483                           fsr1h	equ	0xFE2
  8484                           fsr1l	equ	0xFE1
  8485                           indf2	equ	0xFDF
  8486                           postinc2	equ	0xFDE
  8487                           postdec2	equ	0xFDD
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function _PutCharTxBuf *****************
  8493 ;; Defined at:
  8494 ;;		line 9 in file "Wireless.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  ch              1    wreg     unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  ch              1   23[BANK0 ] unsigned char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;		None               void
  8501 ;; Registers used:
  8502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;Total ram usage:        2 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    8
  8515 ;; This function calls:
  8516 ;;		___awmod
  8517 ;; This function is called by:
  8518 ;;		_SendStatus
  8519 ;;		_SendLineMode
  8520 ;;		_SendOffsets
  8521 ;;		_SendThreshold
  8522 ;;		_SendDefaultPIDValues
  8523 ;;		_SendStoredPIDValues
  8524 ;;		_SendCurrentPIDValues
  8525 ;;		_SendBattVoltageInitial
  8526 ;;		_SendPIDSetPointOnLine
  8527 ;;		_SendBattVoltage
  8528 ;;		_SendBattCurrent
  8529 ;;		_SendBattCurrentAcc
  8530 ;;		_SendPIDSetPointOffLine
  8531 ;;		_SendPIDError
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text60
  8536  001C5C                     __ptext60:
  8537                           	opt stack 0
  8538  001C5C                     _PutCharTxBuf:
  8539                           	opt stack 20
  8540                           
  8541                           ;incstack = 0
  8542                           ;PutCharTxBuf@ch stored from wreg
  8543  001C5C  0100               	movlb	0	; () banked
  8544  001C5E  6FD5               	movwf	PutCharTxBuf@ch& (0+255),b
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  8548  001C60  5020               	movf	_put_Tx_index,w,c
  8549  001C62  0D01               	mullw	1
  8550  001C64  0E79               	movlw	low _Tx_buffer
  8551  001C66  24F3               	addwf	prodl,w,c
  8552  001C68  6ED9               	movwf	fsr2l,c
  8553  001C6A  0E00               	movlw	high _Tx_buffer
  8554  001C6C  20F4               	addwfc	prodh,w,c
  8555  001C6E  6EDA               	movwf	fsr2h,c
  8556  001C70  C0D5  FFDF         	movff	PutCharTxBuf@ch,indf2
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  8560  001C74  C020  F0D4         	movff	_put_Tx_index,??_PutCharTxBuf
  8561  001C78  0E01               	movlw	1
  8562  001C7A  0100               	movlb	0	; () banked
  8563  001C7C  27D4               	addwf	??_PutCharTxBuf& (0+255),f,b
  8564  001C7E  0100               	movlb	0	; () banked
  8565  001C80  51D4               	movf	??_PutCharTxBuf& (0+255),w,b
  8566  001C82  0100               	movlb	0	; () banked
  8567  001C84  6FCE               	movwf	___awmod@dividend& (0+255),b
  8568  001C86  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  8569  001C88  0E00               	movlw	0
  8570  001C8A  0100               	movlb	0	; () banked
  8571  001C8C  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  8572  001C8E  0E19               	movlw	25
  8573  001C90  6FD0               	movwf	___awmod@divisor& (0+255),b
  8574  001C92  EC19  F008         	call	___awmod	;wreg free
  8575  001C96  0100               	movlb	0	; () banked
  8576  001C98  51CE               	movf	?___awmod& (0+255),w,b
  8577  001C9A  6E20               	movwf	_put_Tx_index,c
  8578                           
  8579                           ; BSR set to: 0
  8580  001C9C  0012               	return		;funcret
  8581  001C9E                     __end_of_PutCharTxBuf:
  8582                           	opt stack 0
  8583                           prodh	equ	0xFF4
  8584                           prodl	equ	0xFF3
  8585                           intcon	equ	0xFF2
  8586                           postinc0	equ	0xFEE
  8587                           wreg	equ	0xFE8
  8588                           postinc1	equ	0xFE6
  8589                           fsr1h	equ	0xFE2
  8590                           fsr1l	equ	0xFE1
  8591                           indf2	equ	0xFDF
  8592                           postinc2	equ	0xFDE
  8593                           postdec2	equ	0xFDD
  8594                           fsr2h	equ	0xFDA
  8595                           fsr2l	equ	0xFD9
  8596                           status	equ	0xFD8
  8597                           
  8598 ;; *************** function ___awmod *****************
  8599 ;; Defined at:
  8600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  dividend        2   16[BANK0 ] int 
  8603 ;;  divisor         2   18[BANK0 ] int 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  sign            1   21[BANK0 ] unsigned char 
  8606 ;;  counter         1   20[BANK0 ] unsigned char 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  2   16[BANK0 ] int 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8616 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;Total ram usage:        6 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    7
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_PutCharTxBuf
  8627 ;;		_PutCharRxBuf
  8628 ;;		_GetCharRxBuf
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text61
  8633  001032                     __ptext61:
  8634                           	opt stack 0
  8635  001032                     ___awmod:
  8636                           	opt stack 20
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;incstack = 0
  8640  001032  0E00               	movlw	0
  8641  001034  0100               	movlb	0	; () banked
  8642  001036  6FD3               	movwf	___awmod@sign& (0+255),b
  8643                           
  8644                           ; BSR set to: 0
  8645  001038  0100               	movlb	0	; () banked
  8646  00103A  AFCF               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8647  00103C  D009               	goto	l5493
  8648                           
  8649                           ; BSR set to: 0
  8650  00103E  0100               	movlb	0	; () banked
  8651  001040  6DCE               	negf	___awmod@dividend& (0+255),b
  8652  001042  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8653  001044  B0D8               	btfsc	status,0,c
  8654  001046  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8655                           
  8656                           ; BSR set to: 0
  8657  001048  0E01               	movlw	1
  8658  00104A  0100               	movlb	0	; () banked
  8659  00104C  6FD3               	movwf	___awmod@sign& (0+255),b
  8660  00104E  D000               	goto	l5493
  8661  001050                     l5493:
  8662                           
  8663                           ; BSR set to: 0
  8664  001050  0100               	movlb	0	; () banked
  8665  001052  AFD1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8666  001054  D006               	goto	l5497
  8667                           
  8668                           ; BSR set to: 0
  8669  001056  0100               	movlb	0	; () banked
  8670  001058  6DD0               	negf	___awmod@divisor& (0+255),b
  8671  00105A  1FD1               	comf	(___awmod@divisor+1)& (0+255),f,b
  8672  00105C  B0D8               	btfsc	status,0,c
  8673  00105E  2BD1               	incf	(___awmod@divisor+1)& (0+255),f,b
  8674  001060  D000               	goto	l5497
  8675  001062                     l5497:
  8676                           
  8677                           ; BSR set to: 0
  8678  001062  0100               	movlb	0	; () banked
  8679  001064  51D0               	movf	___awmod@divisor& (0+255),w,b
  8680  001066  0100               	movlb	0	; () banked
  8681  001068  11D1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8682  00106A  B4D8               	btfsc	status,2,c
  8683  00106C  D02B               	goto	l5513
  8684                           
  8685                           ; BSR set to: 0
  8686  00106E  0E01               	movlw	1
  8687  001070  0100               	movlb	0	; () banked
  8688  001072  6FD2               	movwf	___awmod@counter& (0+255),b
  8689  001074  D007               	goto	l5503
  8690  001076                     l5501:
  8691                           
  8692                           ; BSR set to: 0
  8693  001076  0100               	movlb	0	; () banked
  8694  001078  90D8               	bcf	status,0,c
  8695  00107A  37D0               	rlcf	___awmod@divisor& (0+255),f,b
  8696  00107C  37D1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8697  00107E  0100               	movlb	0	; () banked
  8698  001080  2BD2               	incf	___awmod@counter& (0+255),f,b
  8699  001082  D000               	goto	l5503
  8700  001084                     l5503:
  8701                           
  8702                           ; BSR set to: 0
  8703  001084  0100               	movlb	0	; () banked
  8704  001086  BFD1               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8705  001088  D002               	goto	l5505
  8706  00108A  D7F5               	goto	l5501
  8707                           
  8708                           ; BSR set to: 0
  8709  00108C  D000               	goto	l5505
  8710  00108E                     l5505:
  8711                           
  8712                           ; BSR set to: 0
  8713  00108E  0100               	movlb	0	; () banked
  8714  001090  51D0               	movf	___awmod@divisor& (0+255),w,b
  8715  001092  0100               	movlb	0	; () banked
  8716  001094  5DCE               	subwf	___awmod@dividend& (0+255),w,b
  8717  001096  0100               	movlb	0	; () banked
  8718  001098  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8719  00109A  0100               	movlb	0	; () banked
  8720  00109C  59CF               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8721  00109E  A0D8               	btfss	status,0,c
  8722  0010A0  D009               	goto	l5509
  8723                           
  8724                           ; BSR set to: 0
  8725  0010A2  0100               	movlb	0	; () banked
  8726  0010A4  51D0               	movf	___awmod@divisor& (0+255),w,b
  8727  0010A6  0100               	movlb	0	; () banked
  8728  0010A8  5FCE               	subwf	___awmod@dividend& (0+255),f,b
  8729  0010AA  0100               	movlb	0	; () banked
  8730  0010AC  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8731  0010AE  0100               	movlb	0	; () banked
  8732  0010B0  5BCF               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8733  0010B2  D000               	goto	l5509
  8734  0010B4                     l5509:
  8735                           
  8736                           ; BSR set to: 0
  8737  0010B4  0100               	movlb	0	; () banked
  8738  0010B6  90D8               	bcf	status,0,c
  8739  0010B8  33D1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8740  0010BA  33D0               	rrcf	___awmod@divisor& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743  0010BC  0100               	movlb	0	; () banked
  8744  0010BE  2FD2               	decfsz	___awmod@counter& (0+255),f,b
  8745  0010C0  D7E6               	goto	l5505
  8746                           
  8747                           ; BSR set to: 0
  8748  0010C2  D000               	goto	l5513
  8749  0010C4                     l5513:
  8750                           
  8751                           ; BSR set to: 0
  8752  0010C4  0100               	movlb	0	; () banked
  8753  0010C6  51D3               	movf	___awmod@sign& (0+255),w,b
  8754  0010C8  0100               	movlb	0	; () banked
  8755  0010CA  B4D8               	btfsc	status,2,c
  8756  0010CC  D006               	goto	l5517
  8757                           
  8758                           ; BSR set to: 0
  8759  0010CE  0100               	movlb	0	; () banked
  8760  0010D0  6DCE               	negf	___awmod@dividend& (0+255),b
  8761  0010D2  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8762  0010D4  B0D8               	btfsc	status,0,c
  8763  0010D6  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8764  0010D8  D000               	goto	l5517
  8765  0010DA                     l5517:
  8766                           
  8767                           ; BSR set to: 0
  8768  0010DA  C0CE  F0CE         	movff	___awmod@dividend,?___awmod
  8769  0010DE  C0CF  F0CF         	movff	___awmod@dividend+1,?___awmod+1
  8770  0010E2  D000               	goto	l1454
  8771  0010E4                     l1454:
  8772                           
  8773                           ; BSR set to: 0
  8774  0010E4  0012               	return		;funcret
  8775  0010E6                     __end_of___awmod:
  8776                           	opt stack 0
  8777                           prodh	equ	0xFF4
  8778                           prodl	equ	0xFF3
  8779                           intcon	equ	0xFF2
  8780                           postinc0	equ	0xFEE
  8781                           wreg	equ	0xFE8
  8782                           postinc1	equ	0xFE6
  8783                           fsr1h	equ	0xFE2
  8784                           fsr1l	equ	0xFE1
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _BusyTx *****************
  8793 ;; Defined at:
  8794 ;;		line 131 in file "Wireless.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      unsigned char 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    7
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_SendStatus
  8819 ;;		_SendLineMode
  8820 ;;		_SendOffsets
  8821 ;;		_SendThreshold
  8822 ;;		_SendDefaultPIDValues
  8823 ;;		_SendStoredPIDValues
  8824 ;;		_SendCurrentPIDValues
  8825 ;;		_SendBattVoltageInitial
  8826 ;;		_SendPIDSetPointOnLine
  8827 ;;		_SendBattVoltage
  8828 ;;		_SendBattCurrent
  8829 ;;		_SendBattCurrentAcc
  8830 ;;		_SendPIDSetPointOffLine
  8831 ;;		_SendPIDError
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text62
  8836  0023C6                     __ptext62:
  8837                           	opt stack 0
  8838  0023C6                     _BusyTx:
  8839                           	opt stack 21
  8840                           
  8841                           ;Wireless.c: 132: return(!Tx_complete);
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;incstack = 0
  8845  0023C6  501A               	movf	_Tx_complete,w,c
  8846  0023C8  A4D8               	btfss	status,2,c
  8847  0023CA  D002               	goto	u4480
  8848  0023CC  0E01               	movlw	1
  8849  0023CE  D002               	goto	l324
  8850  0023D0                     u4480:
  8851  0023D0  0E00               	movlw	0
  8852  0023D2  D000               	goto	l324
  8853  0023D4                     l324:
  8854  0023D4  0012               	return		;funcret
  8855  0023D6                     __end_of_BusyTx:
  8856                           	opt stack 0
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           intcon	equ	0xFF2
  8860                           postinc0	equ	0xFEE
  8861                           wreg	equ	0xFE8
  8862                           postinc1	equ	0xFE6
  8863                           fsr1h	equ	0xFE2
  8864                           fsr1l	equ	0xFE1
  8865                           indf2	equ	0xFDF
  8866                           postinc2	equ	0xFDE
  8867                           postdec2	equ	0xFDD
  8868                           fsr2h	equ	0xFDA
  8869                           fsr2l	equ	0xFD9
  8870                           status	equ	0xFD8
  8871                           
  8872 ;; *************** function _PB1pressed *****************
  8873 ;; Defined at:
  8874 ;;		line 407 in file "FastBuggy17_Main_Code_TUNING.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      unsigned char 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    9
  8895 ;; This function calls:
  8896 ;;		_CommandAvailable
  8897 ;;		_GetCommand
  8898 ;;		_ReadMillis2
  8899 ;;		_ResetMillis2
  8900 ;; This function is called by:
  8901 ;;		_CalibrateOffsets
  8902 ;;		_CalibrateOnLine
  8903 ;;		_CalibrateThreshold
  8904 ;;		_LoadPIDValues
  8905 ;;		_main
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text63
  8910  001A9A                     __ptext63:
  8911                           	opt stack 0
  8912  001A9A                     _PB1pressed:
  8913                           	opt stack 21
  8914                           
  8915                           ;FastBuggy17_Main_Code_TUNING.c: 408: if(CommandAvailable() == 1) {
  8916                           
  8917                           ;incstack = 0
  8918  001A9A  EC20  F012         	call	_CommandAvailable	;wreg free
  8919  001A9E  06E8               	decf	wreg,f,c
  8920  001AA0  A4D8               	btfss	status,2,c
  8921  001AA2  D00B               	goto	l843
  8922                           
  8923                           ;FastBuggy17_Main_Code_TUNING.c: 409: if(GetCommand() == 0x05) {
  8924  001AA4  EC5A  F012         	call	_GetCommand	;wreg free
  8925  001AA8  0A05               	xorlw	5
  8926  001AAA  A4D8               	btfss	status,2,c
  8927  001AAC  D01F               	goto	l5763
  8928  001AAE  D01B               	goto	l5757
  8929                           
  8930                           ;FastBuggy17_Main_Code_TUNING.c: 410: return(1);
  8931  001AB0  D022               	goto	l845
  8932                           
  8933                           ;FastBuggy17_Main_Code_TUNING.c: 411: }
  8934  001AB2  D01F               	goto	l5767
  8935  001AB4  D01B               	goto	l5763
  8936                           
  8937                           ;FastBuggy17_Main_Code_TUNING.c: 412: else {
  8938                           ;FastBuggy17_Main_Code_TUNING.c: 413: return(0);
  8939  001AB6  D01F               	goto	l845
  8940                           
  8941                           ;FastBuggy17_Main_Code_TUNING.c: 414: }
  8942                           ;FastBuggy17_Main_Code_TUNING.c: 415: }
  8943  001AB8  D01C               	goto	l5767
  8944  001ABA                     l843:
  8945                           
  8946                           ;FastBuggy17_Main_Code_TUNING.c: 416: else if(PORTBbits.RB1 == 0) {
  8947  001ABA  B281               	btfsc	3969,1,c	;volatile
  8948  001ABC  D003               	goto	l848
  8949  001ABE  D016               	goto	l5763
  8950                           
  8951                           ;FastBuggy17_Main_Code_TUNING.c: 417: return(0);
  8952  001AC0  D01A               	goto	l845
  8953                           
  8954                           ;FastBuggy17_Main_Code_TUNING.c: 418: }
  8955  001AC2  D017               	goto	l5767
  8956  001AC4                     l848:
  8957                           
  8958                           ;FastBuggy17_Main_Code_TUNING.c: 419: else if(PORTBbits.RB1 == 1) {
  8959  001AC4  A281               	btfss	3969,1,c	;volatile
  8960  001AC6  D015               	goto	l5767
  8961                           
  8962                           ;FastBuggy17_Main_Code_TUNING.c: 420: ResetMillis2();
  8963  001AC8  EC4C  F012         	call	_ResetMillis2	;wreg free
  8964                           
  8965                           ;FastBuggy17_Main_Code_TUNING.c: 421: while(ReadMillis2() < 10);
  8966  001ACC  D000               	goto	l5755
  8967  001ACE                     l5755:
  8968  001ACE  EC51  F012         	call	_ReadMillis2	;wreg free
  8969  001AD2  0100               	movlb	0	; () banked
  8970  001AD4  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  8971  001AD6  E105               	bnz	u4730
  8972  001AD8  0E0A               	movlw	10
  8973  001ADA  0100               	movlb	0	; () banked
  8974  001ADC  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  8975  001ADE  A0D8               	btfss	status,0,c
  8976  001AE0  D7F6               	goto	l5755
  8977  001AE2                     u4730:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;FastBuggy17_Main_Code_TUNING.c: 422: if(PORTBbits.RB1 == 1) {
  8981  001AE2  A281               	btfss	3969,1,c	;volatile
  8982  001AE4  D003               	goto	l5763
  8983  001AE6                     l5757:
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;FastBuggy17_Main_Code_TUNING.c: 423: return(1);
  8987  001AE6  0E01               	movlw	1
  8988                           
  8989                           ; BSR set to: 0
  8990  001AE8  D006               	goto	l845
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;FastBuggy17_Main_Code_TUNING.c: 424: }
  8994  001AEA  D003               	goto	l5767
  8995  001AEC                     l5763:
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;FastBuggy17_Main_Code_TUNING.c: 425: else {
  8999                           ;FastBuggy17_Main_Code_TUNING.c: 426: return(0);
  9000  001AEC  0E00               	movlw	0
  9001                           
  9002                           ; BSR set to: 0
  9003  001AEE  D003               	goto	l845
  9004                           
  9005                           ; BSR set to: 0
  9006                           
  9007                           ; BSR set to: 0
  9008                           
  9009                           ; BSR set to: 0
  9010  001AF0  D000               	goto	l5767
  9011  001AF2                     l5767:
  9012                           
  9013                           ;FastBuggy17_Main_Code_TUNING.c: 427: }
  9014                           ;FastBuggy17_Main_Code_TUNING.c: 428: }
  9015                           ;FastBuggy17_Main_Code_TUNING.c: 430: return(0);
  9016  001AF2  0E00               	movlw	0
  9017  001AF4  D000               	goto	l845
  9018  001AF6                     l845:
  9019  001AF6  0012               	return		;funcret
  9020  001AF8                     __end_of_PB1pressed:
  9021                           	opt stack 0
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           intcon	equ	0xFF2
  9025                           postinc0	equ	0xFEE
  9026                           wreg	equ	0xFE8
  9027                           postinc1	equ	0xFE6
  9028                           fsr1h	equ	0xFE2
  9029                           fsr1l	equ	0xFE1
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           fsr2h	equ	0xFDA
  9034                           fsr2l	equ	0xFD9
  9035                           status	equ	0xFD8
  9036                           
  9037 ;; *************** function _ResetMillis2 *****************
  9038 ;; Defined at:
  9039 ;;		line 45 in file "MillisecondTimer.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;		None               void
  9046 ;; Registers used:
  9047 ;;		wreg, status,2
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;Total ram usage:        0 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    7
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_PB1pressed
  9064 ;;		_PB2pressed
  9065 ;;		_main
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text64
  9070  002498                     __ptext64:
  9071                           	opt stack 0
  9072  002498                     _ResetMillis2:
  9073                           	opt stack 23
  9074                           
  9075                           ;MillisecondTimer.c: 47: millisecond_COUNT2 = 0;
  9076                           
  9077                           ;incstack = 0
  9078  002498  0E00               	movlw	0
  9079  00249A  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  9080  00249C  0E00               	movlw	0
  9081  00249E  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  9082  0024A0  0012               	return		;funcret
  9083  0024A2                     __end_of_ResetMillis2:
  9084                           	opt stack 0
  9085                           prodh	equ	0xFF4
  9086                           prodl	equ	0xFF3
  9087                           intcon	equ	0xFF2
  9088                           postinc0	equ	0xFEE
  9089                           wreg	equ	0xFE8
  9090                           postinc1	equ	0xFE6
  9091                           fsr1h	equ	0xFE2
  9092                           fsr1l	equ	0xFE1
  9093                           indf2	equ	0xFDF
  9094                           postinc2	equ	0xFDE
  9095                           postdec2	equ	0xFDD
  9096                           fsr2h	equ	0xFDA
  9097                           fsr2l	equ	0xFD9
  9098                           status	equ	0xFD8
  9099                           
  9100 ;; *************** function _ReadMillis2 *****************
  9101 ;; Defined at:
  9102 ;;		line 19 in file "MillisecondTimer.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  2   16[BANK0 ] unsigned int 
  9109 ;; Registers used:
  9110 ;;		None
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;Total ram usage:        2 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    7
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_PB1pressed
  9127 ;;		_PB2pressed
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text65
  9133  0024A2                     __ptext65:
  9134                           	opt stack 0
  9135  0024A2                     _ReadMillis2:
  9136                           	opt stack 23
  9137                           
  9138                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  9139                           
  9140                           ;incstack = 0
  9141  0024A2  C011  F0CE         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  9142  0024A6  C012  F0CF         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  9143  0024AA  0012               	return		;funcret
  9144  0024AC                     __end_of_ReadMillis2:
  9145                           	opt stack 0
  9146                           prodh	equ	0xFF4
  9147                           prodl	equ	0xFF3
  9148                           intcon	equ	0xFF2
  9149                           postinc0	equ	0xFEE
  9150                           wreg	equ	0xFE8
  9151                           postinc1	equ	0xFE6
  9152                           fsr1h	equ	0xFE2
  9153                           fsr1l	equ	0xFE1
  9154                           indf2	equ	0xFDF
  9155                           postinc2	equ	0xFDE
  9156                           postdec2	equ	0xFDD
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _GetCommand *****************
  9162 ;; Defined at:
  9163 ;;		line 405 in file "Wireless.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      unsigned char 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    8
  9184 ;; This function calls:
  9185 ;;		_Read1USART
  9186 ;; This function is called by:
  9187 ;;		_PB1pressed
  9188 ;;		_PB2pressed
  9189 ;;		_main
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text66
  9194  0024B4                     __ptext66:
  9195                           	opt stack 0
  9196  0024B4                     _GetCommand:
  9197                           	opt stack 21
  9198                           
  9199                           ;Wireless.c: 407: return(Read1USART());
  9200                           
  9201                           ;incstack = 0
  9202  0024B4  EC89  F010         	call	_Read1USART	;wreg free
  9203  0024B8  D000               	goto	l461
  9204  0024BA                     l461:
  9205  0024BA  0012               	return		;funcret
  9206  0024BC                     __end_of_GetCommand:
  9207                           	opt stack 0
  9208                           prodh	equ	0xFF4
  9209                           prodl	equ	0xFF3
  9210                           intcon	equ	0xFF2
  9211                           postinc0	equ	0xFEE
  9212                           wreg	equ	0xFE8
  9213                           postinc1	equ	0xFE6
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           indf2	equ	0xFDF
  9217                           postinc2	equ	0xFDE
  9218                           postdec2	equ	0xFDD
  9219                           fsr2h	equ	0xFDA
  9220                           fsr2l	equ	0xFD9
  9221                           status	equ	0xFD8
  9222                           
  9223 ;; *************** function _Read1USART *****************
  9224 ;; Defined at:
  9225 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  data            1   16[BANK0 ] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      unsigned char 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;Total ram usage:        1 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    7
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_GetCommand
  9250 ;;		_SetPIDValues
  9251 ;;		_WirelessRx_ISR
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text67
  9256  002112                     __ptext67:
  9257                           	opt stack 0
  9258  002112                     _Read1USART:
  9259                           	opt stack 22
  9260                           
  9261                           ;incstack = 0
  9262  002112  0EF2               	movlw	242
  9263  002114  161B               	andwf	_USART1_Status,f,c
  9264  002116  ACAB               	btfss	4011,6,c	;volatile
  9265  002118  D005               	goto	l1230
  9266  00211A  901B               	bcf	_USART1_Status,0,c
  9267  00211C  A0AB               	btfss	4011,0,c	;volatile
  9268  00211E  D002               	goto	l1230
  9269  002120  801B               	bsf	_USART1_Status,0,c
  9270  002122  D000               	goto	l1230
  9271  002124                     l1230:
  9272  002124  B4AB               	btfsc	4011,2,c	;volatile
  9273  002126  841B               	bsf	_USART1_Status,2,c
  9274  002128  B2AB               	btfsc	4011,1,c	;volatile
  9275  00212A  861B               	bsf	_USART1_Status,3,c
  9276  00212C  CFAE F0CE          	movff	4014,Read1USART@data	;volatile
  9277  002130  0100               	movlb	0	; () banked
  9278  002132  51CE               	movf	Read1USART@data& (0+255),w,b
  9279  002134  D000               	goto	l1234
  9280  002136                     l1234:
  9281                           
  9282                           ; BSR set to: 0
  9283  002136  0012               	return		;funcret
  9284  002138                     __end_of_Read1USART:
  9285                           	opt stack 0
  9286                           prodh	equ	0xFF4
  9287                           prodl	equ	0xFF3
  9288                           intcon	equ	0xFF2
  9289                           postinc0	equ	0xFEE
  9290                           wreg	equ	0xFE8
  9291                           postinc1	equ	0xFE6
  9292                           fsr1h	equ	0xFE2
  9293                           fsr1l	equ	0xFE1
  9294                           indf2	equ	0xFDF
  9295                           postinc2	equ	0xFDE
  9296                           postdec2	equ	0xFDD
  9297                           fsr2h	equ	0xFDA
  9298                           fsr2l	equ	0xFD9
  9299                           status	equ	0xFD8
  9300                           
  9301 ;; *************** function _CommandAvailable *****************
  9302 ;; Defined at:
  9303 ;;		line 401 in file "Wireless.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      unsigned char 
  9310 ;; Registers used:
  9311 ;;		wreg
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:    7
  9324 ;; This function calls:
  9325 ;;		Nothing
  9326 ;; This function is called by:
  9327 ;;		_PB1pressed
  9328 ;;		_PB2pressed
  9329 ;;		_main
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text68
  9334  002440                     __ptext68:
  9335                           	opt stack 0
  9336  002440                     _CommandAvailable:
  9337                           	opt stack 22
  9338                           
  9339                           ;Wireless.c: 402: return((PIR1bits.RCIF));
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343  002440  AA9E               	btfss	3998,5,c	;volatile
  9344  002442  D002               	goto	u4500
  9345  002444  0E01               	movlw	1
  9346  002446  D002               	goto	l458
  9347  002448                     u4500:
  9348  002448  0E00               	movlw	0
  9349  00244A  D000               	goto	l458
  9350  00244C                     l458:
  9351  00244C  0012               	return		;funcret
  9352  00244E                     __end_of_CommandAvailable:
  9353                           	opt stack 0
  9354                           prodh	equ	0xFF4
  9355                           prodl	equ	0xFF3
  9356                           intcon	equ	0xFF2
  9357                           postinc0	equ	0xFEE
  9358                           wreg	equ	0xFE8
  9359                           postinc1	equ	0xFE6
  9360                           fsr1h	equ	0xFE2
  9361                           fsr1l	equ	0xFE1
  9362                           indf2	equ	0xFDF
  9363                           postinc2	equ	0xFDE
  9364                           postdec2	equ	0xFDD
  9365                           fsr2h	equ	0xFDA
  9366                           fsr2l	equ	0xFD9
  9367                           status	equ	0xFD8
  9368                           
  9369 ;; *************** function _GetSensorReadings *****************
  9370 ;; Defined at:
  9371 ;;		line 286 in file "FastBuggy17_Main_Code_TUNING.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;		None
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;		None               void
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;Total ram usage:        0 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    9
  9392 ;; This function calls:
  9393 ;;		_ConvertADC
  9394 ;;		_SetADCChannel
  9395 ;; This function is called by:
  9396 ;;		_CalibrateOffsets
  9397 ;;		_CalibrateOnLine
  9398 ;;		_CalibrateThreshold
  9399 ;;		_main
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text69
  9404  0022B6                     __ptext69:
  9405                           	opt stack 0
  9406  0022B6                     _GetSensorReadings:
  9407                           	opt stack 18
  9408                           
  9409                           ;FastBuggy17_Main_Code_TUNING.c: 288: sensor_acq_index = 0;
  9410                           
  9411                           ;incstack = 0
  9412  0022B6  0E00               	movlw	0
  9413  0022B8  6E23               	movwf	_sensor_acq_index,c	;volatile
  9414                           
  9415                           ;FastBuggy17_Main_Code_TUNING.c: 289: sensor_acq_done = 0;
  9416  0022BA  0E00               	movlw	0
  9417  0022BC  6E22               	movwf	_sensor_acq_done,c	;volatile
  9418                           
  9419                           ;FastBuggy17_Main_Code_TUNING.c: 290: SetADCChannel(sensor_acq_index);
  9420  0022BE  5023               	movf	_sensor_acq_index,w,c	;volatile
  9421  0022C0  EC67  F006         	call	_SetADCChannel
  9422                           
  9423                           ;FastBuggy17_Main_Code_TUNING.c: 291: ConvertADC();
  9424  0022C4  EC6F  F012         	call	_ConvertADC	;wreg free
  9425                           
  9426                           ;FastBuggy17_Main_Code_TUNING.c: 292: PIE1bits.ADIE = 1;
  9427  0022C8  8C9D               	bsf	3997,6,c	;volatile
  9428  0022CA  0012               	return		;funcret
  9429  0022CC                     __end_of_GetSensorReadings:
  9430                           	opt stack 0
  9431                           prodh	equ	0xFF4
  9432                           prodl	equ	0xFF3
  9433                           intcon	equ	0xFF2
  9434                           postinc0	equ	0xFEE
  9435                           wreg	equ	0xFE8
  9436                           postinc1	equ	0xFE6
  9437                           fsr1h	equ	0xFE2
  9438                           fsr1l	equ	0xFE1
  9439                           indf2	equ	0xFDF
  9440                           postinc2	equ	0xFDE
  9441                           postdec2	equ	0xFDD
  9442                           fsr2h	equ	0xFDA
  9443                           fsr2l	equ	0xFD9
  9444                           status	equ	0xFD8
  9445                           
  9446 ;; *************** function _SetADCChannel *****************
  9447 ;; Defined at:
  9448 ;;		line 228 in file "FastBuggy17_Main_Code_TUNING.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  channel         1    wreg     unsigned char 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  channel         1   18[BANK0 ] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;		None               void
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;Total ram usage:        1 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    8
  9469 ;; This function calls:
  9470 ;;		_SetChanADC
  9471 ;; This function is called by:
  9472 ;;		_GetSensorReadings
  9473 ;;		_CalibrateThreshold
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text70
  9478  000CCE                     __ptext70:
  9479                           	opt stack 0
  9480  000CCE                     _SetADCChannel:
  9481                           	opt stack 19
  9482                           
  9483                           ;incstack = 0
  9484                           ;SetADCChannel@channel stored from wreg
  9485  000CCE  0100               	movlb	0	; () banked
  9486  000CD0  6FD0               	movwf	SetADCChannel@channel& (0+255),b
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;FastBuggy17_Main_Code_TUNING.c: 230: switch (channel) {
  9490  000CD2  D040               	goto	l5595
  9491  000CD4                     l5561:
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;FastBuggy17_Main_Code_TUNING.c: 232: SetChanADC(0b10000111);
  9495  000CD4  0E87               	movlw	135
  9496  000CD6  EC15  F011         	call	_SetChanADC
  9497                           
  9498                           ;FastBuggy17_Main_Code_TUNING.c: 233: break;
  9499  000CDA  D06F               	goto	l793
  9500  000CDC                     l5563:
  9501                           
  9502                           ;FastBuggy17_Main_Code_TUNING.c: 235: SetChanADC(0b10001111);
  9503  000CDC  0E8F               	movlw	143
  9504  000CDE  EC15  F011         	call	_SetChanADC
  9505                           
  9506                           ;FastBuggy17_Main_Code_TUNING.c: 236: break;
  9507  000CE2  D06B               	goto	l793
  9508  000CE4                     l5565:
  9509                           
  9510                           ;FastBuggy17_Main_Code_TUNING.c: 238: SetChanADC(0b10010111);
  9511  000CE4  0E97               	movlw	151
  9512  000CE6  EC15  F011         	call	_SetChanADC
  9513                           
  9514                           ;FastBuggy17_Main_Code_TUNING.c: 239: break;
  9515  000CEA  D067               	goto	l793
  9516  000CEC                     l5567:
  9517                           
  9518                           ;FastBuggy17_Main_Code_TUNING.c: 241: SetChanADC(0b10011111);
  9519  000CEC  0E9F               	movlw	159
  9520  000CEE  EC15  F011         	call	_SetChanADC
  9521                           
  9522                           ;FastBuggy17_Main_Code_TUNING.c: 242: break;
  9523  000CF2  D063               	goto	l793
  9524  000CF4                     l5569:
  9525                           
  9526                           ;FastBuggy17_Main_Code_TUNING.c: 244: SetChanADC(0b10100111);
  9527  000CF4  0EA7               	movlw	167
  9528  000CF6  EC15  F011         	call	_SetChanADC
  9529                           
  9530                           ;FastBuggy17_Main_Code_TUNING.c: 245: break;
  9531  000CFA  D05F               	goto	l793
  9532  000CFC                     l5571:
  9533                           
  9534                           ;FastBuggy17_Main_Code_TUNING.c: 247: SetChanADC(0b10101111);
  9535  000CFC  0EAF               	movlw	175
  9536  000CFE  EC15  F011         	call	_SetChanADC
  9537                           
  9538                           ;FastBuggy17_Main_Code_TUNING.c: 248: break;
  9539  000D02  D05B               	goto	l793
  9540  000D04                     l5573:
  9541                           
  9542                           ;FastBuggy17_Main_Code_TUNING.c: 250: SetChanADC(0b10110111);
  9543  000D04  0EB7               	movlw	183
  9544  000D06  EC15  F011         	call	_SetChanADC
  9545                           
  9546                           ;FastBuggy17_Main_Code_TUNING.c: 251: break;
  9547  000D0A  D057               	goto	l793
  9548  000D0C                     l5575:
  9549                           
  9550                           ;FastBuggy17_Main_Code_TUNING.c: 253: SetChanADC(0b10111111);
  9551  000D0C  0EBF               	movlw	191
  9552  000D0E  EC15  F011         	call	_SetChanADC
  9553                           
  9554                           ;FastBuggy17_Main_Code_TUNING.c: 254: break;
  9555  000D12  D053               	goto	l793
  9556  000D14                     l5577:
  9557                           
  9558                           ;FastBuggy17_Main_Code_TUNING.c: 256: SetChanADC(0b11000111);
  9559  000D14  0EC7               	movlw	199
  9560  000D16  EC15  F011         	call	_SetChanADC
  9561                           
  9562                           ;FastBuggy17_Main_Code_TUNING.c: 257: break;
  9563  000D1A  D04F               	goto	l793
  9564  000D1C                     l5579:
  9565                           
  9566                           ;FastBuggy17_Main_Code_TUNING.c: 259: SetChanADC(0b11001111);
  9567  000D1C  0ECF               	movlw	207
  9568  000D1E  EC15  F011         	call	_SetChanADC
  9569                           
  9570                           ;FastBuggy17_Main_Code_TUNING.c: 260: break;
  9571  000D22  D04B               	goto	l793
  9572  000D24                     l5581:
  9573                           
  9574                           ;FastBuggy17_Main_Code_TUNING.c: 262: SetChanADC(0b11010111);
  9575  000D24  0ED7               	movlw	215
  9576  000D26  EC15  F011         	call	_SetChanADC
  9577                           
  9578                           ;FastBuggy17_Main_Code_TUNING.c: 263: break;
  9579  000D2A  D047               	goto	l793
  9580  000D2C                     l5583:
  9581                           
  9582                           ;FastBuggy17_Main_Code_TUNING.c: 265: SetChanADC(0b11011111);
  9583  000D2C  0EDF               	movlw	223
  9584  000D2E  EC15  F011         	call	_SetChanADC
  9585                           
  9586                           ;FastBuggy17_Main_Code_TUNING.c: 266: break;
  9587  000D32  D043               	goto	l793
  9588  000D34                     l5585:
  9589                           
  9590                           ;FastBuggy17_Main_Code_TUNING.c: 268: SetChanADC(0b11100111);
  9591  000D34  0EE7               	movlw	231
  9592  000D36  EC15  F011         	call	_SetChanADC
  9593                           
  9594                           ;FastBuggy17_Main_Code_TUNING.c: 269: break;
  9595  000D3A  D03F               	goto	l793
  9596  000D3C                     l5587:
  9597                           
  9598                           ;FastBuggy17_Main_Code_TUNING.c: 271: SetChanADC(0b11101111);
  9599  000D3C  0EEF               	movlw	239
  9600  000D3E  EC15  F011         	call	_SetChanADC
  9601                           
  9602                           ;FastBuggy17_Main_Code_TUNING.c: 272: break;
  9603  000D42  D03B               	goto	l793
  9604  000D44                     l5589:
  9605                           
  9606                           ;FastBuggy17_Main_Code_TUNING.c: 274: SetChanADC(0b11110111);
  9607  000D44  0EF7               	movlw	247
  9608  000D46  EC15  F011         	call	_SetChanADC
  9609                           
  9610                           ;FastBuggy17_Main_Code_TUNING.c: 275: break;
  9611  000D4A  D037               	goto	l793
  9612  000D4C                     l5591:
  9613                           
  9614                           ;FastBuggy17_Main_Code_TUNING.c: 277: SetChanADC(0b11111111);
  9615  000D4C  0EFF               	movlw	255
  9616  000D4E  EC15  F011         	call	_SetChanADC
  9617                           
  9618                           ;FastBuggy17_Main_Code_TUNING.c: 281: }
  9619                           
  9620                           ;FastBuggy17_Main_Code_TUNING.c: 280: break;
  9621                           
  9622                           ;FastBuggy17_Main_Code_TUNING.c: 279: default:
  9623                           
  9624                           ;FastBuggy17_Main_Code_TUNING.c: 278: break;
  9625  000D52  D033               	goto	l793
  9626  000D54                     l5595:
  9627  000D54  0100               	movlb	0	; () banked
  9628  000D56  51D0               	movf	SetADCChannel@channel& (0+255),w,b
  9629                           
  9630                           ; Switch size 1, requested type "space"
  9631                           ; Number of cases is 16, Range of values is 0 to 15
  9632                           ; switch strategies available:
  9633                           ; Name         Instructions Cycles
  9634                           ; simple_byte           49    25 (average)
  9635                           ;	Chosen strategy is simple_byte
  9636  000D58  0A00               	xorlw	0	; case 0
  9637  000D5A  B4D8               	btfsc	status,2,c
  9638  000D5C  D7BB               	goto	l5561
  9639  000D5E  0A01               	xorlw	1	; case 1
  9640  000D60  B4D8               	btfsc	status,2,c
  9641  000D62  D7BC               	goto	l5563
  9642  000D64  0A03               	xorlw	3	; case 2
  9643  000D66  B4D8               	btfsc	status,2,c
  9644  000D68  D7BD               	goto	l5565
  9645  000D6A  0A01               	xorlw	1	; case 3
  9646  000D6C  B4D8               	btfsc	status,2,c
  9647  000D6E  D7BE               	goto	l5567
  9648  000D70  0A07               	xorlw	7	; case 4
  9649  000D72  B4D8               	btfsc	status,2,c
  9650  000D74  D7BF               	goto	l5569
  9651  000D76  0A01               	xorlw	1	; case 5
  9652  000D78  B4D8               	btfsc	status,2,c
  9653  000D7A  D7C0               	goto	l5571
  9654  000D7C  0A03               	xorlw	3	; case 6
  9655  000D7E  B4D8               	btfsc	status,2,c
  9656  000D80  D7C1               	goto	l5573
  9657  000D82  0A01               	xorlw	1	; case 7
  9658  000D84  B4D8               	btfsc	status,2,c
  9659  000D86  D7C2               	goto	l5575
  9660  000D88  0A0F               	xorlw	15	; case 8
  9661  000D8A  B4D8               	btfsc	status,2,c
  9662  000D8C  D7C3               	goto	l5577
  9663  000D8E  0A01               	xorlw	1	; case 9
  9664  000D90  B4D8               	btfsc	status,2,c
  9665  000D92  D7C4               	goto	l5579
  9666  000D94  0A03               	xorlw	3	; case 10
  9667  000D96  B4D8               	btfsc	status,2,c
  9668  000D98  D7C5               	goto	l5581
  9669  000D9A  0A01               	xorlw	1	; case 11
  9670  000D9C  B4D8               	btfsc	status,2,c
  9671  000D9E  D7C6               	goto	l5583
  9672  000DA0  0A07               	xorlw	7	; case 12
  9673  000DA2  B4D8               	btfsc	status,2,c
  9674  000DA4  D7C7               	goto	l5585
  9675  000DA6  0A01               	xorlw	1	; case 13
  9676  000DA8  B4D8               	btfsc	status,2,c
  9677  000DAA  D7C8               	goto	l5587
  9678  000DAC  0A03               	xorlw	3	; case 14
  9679  000DAE  B4D8               	btfsc	status,2,c
  9680  000DB0  D7C9               	goto	l5589
  9681  000DB2  0A01               	xorlw	1	; case 15
  9682  000DB4  B4D8               	btfsc	status,2,c
  9683  000DB6  D7CA               	goto	l5591
  9684  000DB8  D000               	goto	l793
  9685  000DBA                     l793:
  9686  000DBA  0012               	return		;funcret
  9687  000DBC                     __end_of_SetADCChannel:
  9688                           	opt stack 0
  9689                           prodh	equ	0xFF4
  9690                           prodl	equ	0xFF3
  9691                           intcon	equ	0xFF2
  9692                           postinc0	equ	0xFEE
  9693                           wreg	equ	0xFE8
  9694                           postinc1	equ	0xFE6
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           indf2	equ	0xFDF
  9698                           postinc2	equ	0xFDE
  9699                           postdec2	equ	0xFDD
  9700                           fsr2h	equ	0xFDA
  9701                           fsr2l	equ	0xFD9
  9702                           status	equ	0xFD8
  9703                           
  9704 ;; *************** function _SetChanADC *****************
  9705 ;; Defined at:
  9706 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  channel         1    wreg     unsigned char 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  channel         1   17[BANK0 ] unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;		None               void
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        2 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    7
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_SetADCChannel
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text71
  9735  00222A                     __ptext71:
  9736                           	opt stack 0
  9737  00222A                     _SetChanADC:
  9738                           	opt stack 19
  9739                           
  9740                           ;incstack = 0
  9741                           ;SetChanADC@channel stored from wreg
  9742  00222A  0100               	movlb	0	; () banked
  9743  00222C  6FCF               	movwf	SetChanADC@channel& (0+255),b
  9744                           
  9745                           ; BSR set to: 0
  9746  00222E  CFC2 F0CE          	movff	4034,??_SetChanADC	;volatile
  9747  002232  0EC3               	movlw	195
  9748  002234  0100               	movlb	0	; () banked
  9749  002236  17CE               	andwf	??_SetChanADC& (0+255),f,b
  9750  002238  0100               	movlb	0	; () banked
  9751  00223A  90D8               	bcf	status,0,c
  9752  00223C  31CF               	rrcf	SetChanADC@channel& (0+255),w,b
  9753  00223E  0B3C               	andlw	60
  9754  002240  0100               	movlb	0	; () banked
  9755  002242  11CE               	iorwf	??_SetChanADC& (0+255),w,b
  9756  002244  6EC2               	movwf	4034,c	;volatile
  9757                           
  9758                           ; BSR set to: 0
  9759  002246  0012               	return		;funcret
  9760  002248                     __end_of_SetChanADC:
  9761                           	opt stack 0
  9762                           prodh	equ	0xFF4
  9763                           prodl	equ	0xFF3
  9764                           intcon	equ	0xFF2
  9765                           postinc0	equ	0xFEE
  9766                           wreg	equ	0xFE8
  9767                           postinc1	equ	0xFE6
  9768                           fsr1h	equ	0xFE2
  9769                           fsr1l	equ	0xFE1
  9770                           indf2	equ	0xFDF
  9771                           postinc2	equ	0xFDE
  9772                           postdec2	equ	0xFDD
  9773                           fsr2h	equ	0xFDA
  9774                           fsr2l	equ	0xFD9
  9775                           status	equ	0xFD8
  9776                           
  9777 ;; *************** function _ConvertADC *****************
  9778 ;; Defined at:
  9779 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;		None
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;		None
  9784 ;; Return value:  Size  Location     Type
  9785 ;;		None               void
  9786 ;; Registers used:
  9787 ;;		None
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;Total ram usage:        0 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    7
  9800 ;; This function calls:
  9801 ;;		Nothing
  9802 ;; This function is called by:
  9803 ;;		_GetSensorReadings
  9804 ;;		_CalibrateThreshold
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text72
  9809  0024DE                     __ptext72:
  9810                           	opt stack 0
  9811  0024DE                     _ConvertADC:
  9812                           	opt stack 19
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;incstack = 0
  9816  0024DE  82C2               	bsf	4034,1,c	;volatile
  9817  0024E0  0012               	return		;funcret
  9818  0024E2                     __end_of_ConvertADC:
  9819                           	opt stack 0
  9820                           prodh	equ	0xFF4
  9821                           prodl	equ	0xFF3
  9822                           intcon	equ	0xFF2
  9823                           postinc0	equ	0xFEE
  9824                           wreg	equ	0xFE8
  9825                           postinc1	equ	0xFE6
  9826                           fsr1h	equ	0xFE2
  9827                           fsr1l	equ	0xFE1
  9828                           indf2	equ	0xFDF
  9829                           postinc2	equ	0xFDE
  9830                           postdec2	equ	0xFDD
  9831                           fsr2h	equ	0xFDA
  9832                           fsr2l	equ	0xFD9
  9833                           status	equ	0xFD8
  9834                           
  9835 ;; *************** function _BusySensorAcq *****************
  9836 ;; Defined at:
  9837 ;;		line 297 in file "FastBuggy17_Main_Code_TUNING.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      unsigned char 
  9844 ;; Registers used:
  9845 ;;		wreg, status,2
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    7
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_CalibrateOffsets
  9862 ;;		_CalibrateOnLine
  9863 ;;		_CalibrateThreshold
  9864 ;;		_main
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text73
  9869  0023D6                     __ptext73:
  9870                           	opt stack 0
  9871  0023D6                     _BusySensorAcq:
  9872                           	opt stack 20
  9873                           
  9874                           ;FastBuggy17_Main_Code_TUNING.c: 299: return (!sensor_acq_done);
  9875                           
  9876                           ;incstack = 0
  9877  0023D6  5022               	movf	_sensor_acq_done,w,c	;volatile
  9878  0023D8  A4D8               	btfss	status,2,c
  9879  0023DA  D002               	goto	u4540
  9880  0023DC  0E01               	movlw	1
  9881  0023DE  D002               	goto	l799
  9882  0023E0                     u4540:
  9883  0023E0  0E00               	movlw	0
  9884  0023E2  D000               	goto	l799
  9885  0023E4                     l799:
  9886  0023E4  0012               	return		;funcret
  9887  0023E6                     __end_of_BusySensorAcq:
  9888                           	opt stack 0
  9889                           prodh	equ	0xFF4
  9890                           prodl	equ	0xFF3
  9891                           intcon	equ	0xFF2
  9892                           postinc0	equ	0xFEE
  9893                           wreg	equ	0xFE8
  9894                           postinc1	equ	0xFE6
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           postdec2	equ	0xFDD
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _GetDistance *****************
  9905 ;; Defined at:
  9906 ;;		line 64 in file "Ultrasound.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;		None               void
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    8
  9927 ;; This function calls:
  9928 ;;		_Delay1TCYx
  9929 ;; This function is called by:
  9930 ;;		_main
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text74
  9935  002322                     __ptext74:
  9936                           	opt stack 0
  9937  002322                     _GetDistance:
  9938                           	opt stack 22
  9939                           
  9940                           ;Ultrasound.c: 66: LATEbits.LATE5 = 1;
  9941                           
  9942                           ;incstack = 0
  9943  002322  8A8D               	bsf	3981,5,c	;volatile
  9944                           
  9945                           ;Ultrasound.c: 67: Delay1TCYx(25);
  9946  002324  0E19               	movlw	25
  9947  002326  ECF3  F011         	call	_Delay1TCYx
  9948                           
  9949                           ;Ultrasound.c: 68: LATEbits.LATE5 = 0;
  9950  00232A  9A8D               	bcf	3981,5,c	;volatile
  9951                           
  9952                           ;Ultrasound.c: 69: INTCON2bits.INTEDG3 = 1;
  9953  00232C  86F1               	bsf	intcon2,3,c	;volatile
  9954                           
  9955                           ;Ultrasound.c: 71: INTCON3bits.INT3IE = 1;
  9956  00232E  8AF0               	bsf	intcon3,5,c	;volatile
  9957                           
  9958                           ;Ultrasound.c: 73: echo_acq_done = 0;
  9959  002330  0E00               	movlw	0
  9960  002332  6E1C               	movwf	_echo_acq_done,c
  9961  002334  0012               	return		;funcret
  9962  002336                     __end_of_GetDistance:
  9963                           	opt stack 0
  9964                           prodh	equ	0xFF4
  9965                           prodl	equ	0xFF3
  9966                           intcon	equ	0xFF2
  9967                           intcon2	equ	0xFF1
  9968                           intcon3	equ	0xFF0
  9969                           postinc0	equ	0xFEE
  9970                           wreg	equ	0xFE8
  9971                           postinc1	equ	0xFE6
  9972                           fsr1h	equ	0xFE2
  9973                           fsr1l	equ	0xFE1
  9974                           indf2	equ	0xFDF
  9975                           postinc2	equ	0xFDE
  9976                           postdec2	equ	0xFDD
  9977                           fsr2h	equ	0xFDA
  9978                           fsr2l	equ	0xFD9
  9979                           status	equ	0xFD8
  9980                           
  9981 ;; *************** function _Delay1TCYx *****************
  9982 ;; Defined at:
  9983 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  unit            1    wreg     unsigned char 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  unit            1   16[BANK0 ] unsigned char 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;		None               void
  9990 ;; Registers used:
  9991 ;;		wreg
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;Total ram usage:        1 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:    7
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_GetDistance
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text75
 10012  0023E6                     __ptext75:
 10013                           	opt stack 0
 10014  0023E6                     _Delay1TCYx:
 10015                           	opt stack 22
 10016                           
 10017                           ;incstack = 0
 10018                           ;Delay1TCYx@unit stored from wreg
 10019  0023E6  0100               	movlb	0	; () banked
 10020  0023E8  6FCE               	movwf	Delay1TCYx@unit& (0+255),b
 10021  0023EA                     l1478:
 10022                           
 10023                           ; BSR set to: 0
 10024  0023EA  F000               	nop	
 10025  0023EC  0100               	movlb	0	; () banked
 10026  0023EE  2FCE               	decfsz	Delay1TCYx@unit& (0+255),f,b
 10027  0023F0  D7FC               	goto	l1478
 10028  0023F2  D000               	goto	l1480
 10029  0023F4                     l1480:
 10030                           
 10031                           ; BSR set to: 0
 10032  0023F4  0012               	return		;funcret
 10033  0023F6                     __end_of_Delay1TCYx:
 10034                           	opt stack 0
 10035                           prodh	equ	0xFF4
 10036                           prodl	equ	0xFF3
 10037                           intcon	equ	0xFF2
 10038                           intcon2	equ	0xFF1
 10039                           intcon3	equ	0xFF0
 10040                           postinc0	equ	0xFEE
 10041                           wreg	equ	0xFE8
 10042                           postinc1	equ	0xFE6
 10043                           fsr1h	equ	0xFE2
 10044                           fsr1l	equ	0xFE1
 10045                           indf2	equ	0xFDF
 10046                           postinc2	equ	0xFDE
 10047                           postdec2	equ	0xFDD
 10048                           fsr2h	equ	0xFDA
 10049                           fsr2l	equ	0xFD9
 10050                           status	equ	0xFD8
 10051                           
 10052 ;; *************** function _EnableSensorLEDS *****************
 10053 ;; Defined at:
 10054 ;;		line 381 in file "FastBuggy17_Main_Code_TUNING.c"
 10055 ;; Parameters:    Size  Location     Type
 10056 ;;		None
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;		None
 10059 ;; Return value:  Size  Location     Type
 10060 ;;		None               void
 10061 ;; Registers used:
 10062 ;;		wreg, status,2
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;Total ram usage:        0 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    7
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		_main
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           	psect	text76
 10083  0024D0                     __ptext76:
 10084                           	opt stack 0
 10085  0024D0                     _EnableSensorLEDS:
 10086                           	opt stack 23
 10087                           
 10088                           ;FastBuggy17_Main_Code_TUNING.c: 383: LATE = 0x1F;
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;incstack = 0
 10092  0024D0  0E1F               	movlw	31
 10093  0024D2  6E8D               	movwf	3981,c	;volatile
 10094  0024D4  0012               	return		;funcret
 10095  0024D6                     __end_of_EnableSensorLEDS:
 10096                           	opt stack 0
 10097                           prodh	equ	0xFF4
 10098                           prodl	equ	0xFF3
 10099                           intcon	equ	0xFF2
 10100                           intcon2	equ	0xFF1
 10101                           intcon3	equ	0xFF0
 10102                           postinc0	equ	0xFEE
 10103                           wreg	equ	0xFE8
 10104                           postinc1	equ	0xFE6
 10105                           fsr1h	equ	0xFE2
 10106                           fsr1l	equ	0xFE1
 10107                           indf2	equ	0xFDF
 10108                           postinc2	equ	0xFDE
 10109                           postdec2	equ	0xFDD
 10110                           fsr2h	equ	0xFDA
 10111                           fsr2l	equ	0xFD9
 10112                           status	equ	0xFD8
 10113                           
 10114 ;; *************** function _EnableMotors *****************
 10115 ;; Defined at:
 10116 ;;		line 102 in file "Motors.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;		None
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;		None               void
 10123 ;; Registers used:
 10124 ;;		None
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    7
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text77
 10145  0024E2                     __ptext77:
 10146                           	opt stack 0
 10147  0024E2                     _EnableMotors:
 10148                           	opt stack 23
 10149                           
 10150                           ;Motors.c: 104: LATDbits.LATD4 = 1;
 10151                           
 10152                           ;incstack = 0
 10153  0024E2  888C               	bsf	3980,4,c	;volatile
 10154  0024E4  0012               	return		;funcret
 10155  0024E6                     __end_of_EnableMotors:
 10156                           	opt stack 0
 10157                           prodh	equ	0xFF4
 10158                           prodl	equ	0xFF3
 10159                           intcon	equ	0xFF2
 10160                           intcon2	equ	0xFF1
 10161                           intcon3	equ	0xFF0
 10162                           postinc0	equ	0xFEE
 10163                           wreg	equ	0xFE8
 10164                           postinc1	equ	0xFE6
 10165                           fsr1h	equ	0xFE2
 10166                           fsr1l	equ	0xFE1
 10167                           indf2	equ	0xFDF
 10168                           postinc2	equ	0xFDE
 10169                           postdec2	equ	0xFDD
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function _DisableMotors *****************
 10175 ;; Defined at:
 10176 ;;		line 108 in file "Motors.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;		None
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;		None               void
 10183 ;; Registers used:
 10184 ;;		None
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;Total ram usage:        0 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    7
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_main
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text78
 10205  0024E6                     __ptext78:
 10206                           	opt stack 0
 10207  0024E6                     _DisableMotors:
 10208                           	opt stack 23
 10209                           
 10210                           ;Motors.c: 110: LATDbits.LATD4 = 0;
 10211                           
 10212                           ;incstack = 0
 10213  0024E6  988C               	bcf	3980,4,c	;volatile
 10214  0024E8  0012               	return		;funcret
 10215  0024EA                     __end_of_DisableMotors:
 10216                           	opt stack 0
 10217                           prodh	equ	0xFF4
 10218                           prodl	equ	0xFF3
 10219                           intcon	equ	0xFF2
 10220                           intcon2	equ	0xFF1
 10221                           intcon3	equ	0xFF0
 10222                           postinc0	equ	0xFEE
 10223                           wreg	equ	0xFE8
 10224                           postinc1	equ	0xFE6
 10225                           fsr1h	equ	0xFE2
 10226                           fsr1l	equ	0xFE1
 10227                           indf2	equ	0xFDF
 10228                           postinc2	equ	0xFDE
 10229                           postdec2	equ	0xFDD
 10230                           fsr2h	equ	0xFDA
 10231                           fsr2l	equ	0xFD9
 10232                           status	equ	0xFD8
 10233                           
 10234 ;; *************** function _ConfigureWireless *****************
 10235 ;; Defined at:
 10236 ;;		line 114 in file "Wireless.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;		None
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;		None               void
 10243 ;; Registers used:
 10244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;Total ram usage:        0 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; Hardware stack levels required when called:    8
 10257 ;; This function calls:
 10258 ;;		_FlushRxBuf
 10259 ;;		_FlushTxBuf
 10260 ;;		_Open1USART
 10261 ;; This function is called by:
 10262 ;;		_main
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text79
 10267  002248                     __ptext79:
 10268                           	opt stack 0
 10269  002248                     _ConfigureWireless:
 10270                           	opt stack 22
 10271                           
 10272                           ;Wireless.c: 116: Open1USART(0b01111111
 10273                           ;Wireless.c: 117: & 0b10111111
 10274                           ;Wireless.c: 118: & 0b11111110
 10275                           ;Wireless.c: 119: & 0b11111101
 10276                           ;Wireless.c: 120: & 0b11111111
 10277                           ;Wireless.c: 121: & 0b11111111,
 10278                           ;Wireless.c: 122: 64);
 10279                           
 10280                           ;incstack = 0
 10281  002248  0E00               	movlw	0
 10282  00224A  0100               	movlb	0	; () banked
 10283  00224C  6FCF               	movwf	(Open1USART@spbrg+1)& (0+255),b
 10284  00224E  0E40               	movlw	64
 10285  002250  6FCE               	movwf	Open1USART@spbrg& (0+255),b
 10286  002252  0E3C               	movlw	60
 10287  002254  EC08  F00A         	call	_Open1USART
 10288                           
 10289                           ;Wireless.c: 124: FlushTxBuf();
 10290  002258  EC57  F00F         	call	_FlushTxBuf	;wreg free
 10291                           
 10292                           ;Wireless.c: 125: FlushRxBuf();
 10293  00225C  EC72  F00F         	call	_FlushRxBuf	;wreg free
 10294                           
 10295                           ;Wireless.c: 127: Tx_complete = 1;
 10296  002260  0E01               	movlw	1
 10297  002262  6E1A               	movwf	_Tx_complete,c
 10298  002264  0012               	return		;funcret
 10299  002266                     __end_of_ConfigureWireless:
 10300                           	opt stack 0
 10301                           prodh	equ	0xFF4
 10302                           prodl	equ	0xFF3
 10303                           intcon	equ	0xFF2
 10304                           intcon2	equ	0xFF1
 10305                           intcon3	equ	0xFF0
 10306                           postinc0	equ	0xFEE
 10307                           wreg	equ	0xFE8
 10308                           postinc1	equ	0xFE6
 10309                           fsr1h	equ	0xFE2
 10310                           fsr1l	equ	0xFE1
 10311                           indf2	equ	0xFDF
 10312                           postinc2	equ	0xFDE
 10313                           postdec2	equ	0xFDD
 10314                           fsr2h	equ	0xFDA
 10315                           fsr2l	equ	0xFD9
 10316                           status	equ	0xFD8
 10317                           
 10318 ;; *************** function _Open1USART *****************
 10319 ;; Defined at:
 10320 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  config          1    wreg     unsigned char 
 10323 ;;  spbrg           2   16[BANK0 ] unsigned int 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  config          1   18[BANK0 ] unsigned char 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;		None               void
 10328 ;; Registers used:
 10329 ;;		wreg, status,2
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;Total ram usage:        3 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:    7
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_ConfigureWireless
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text80
 10350  001410                     __ptext80:
 10351                           	opt stack 0
 10352  001410                     _Open1USART:
 10353                           	opt stack 22
 10354                           
 10355                           ;incstack = 0
 10356                           ;Open1USART@config stored from wreg
 10357  001410  0100               	movlb	0	; () banked
 10358  001412  6FD0               	movwf	Open1USART@config& (0+255),b
 10359                           
 10360                           ; BSR set to: 0
 10361  001414  0E00               	movlw	0
 10362  001416  6EAC               	movwf	4012,c	;volatile
 10363  001418  0E00               	movlw	0
 10364  00141A  6EAB               	movwf	4011,c	;volatile
 10365                           
 10366                           ; BSR set to: 0
 10367  00141C  0100               	movlb	0	; () banked
 10368  00141E  A1D0               	btfss	Open1USART@config& (0+255),0,b
 10369  001420  D002               	goto	l5959
 10370                           
 10371                           ; BSR set to: 0
 10372  001422  88AC               	bsf	4012,4,c	;volatile
 10373  001424  D000               	goto	l5959
 10374  001426                     l5959:
 10375                           
 10376                           ; BSR set to: 0
 10377  001426  0100               	movlb	0	; () banked
 10378  001428  A3D0               	btfss	Open1USART@config& (0+255),1,b
 10379  00142A  D003               	goto	l5963
 10380                           
 10381                           ; BSR set to: 0
 10382  00142C  8CAC               	bsf	4012,6,c	;volatile
 10383  00142E  8CAB               	bsf	4011,6,c	;volatile
 10384  001430  D000               	goto	l5963
 10385  001432                     l5963:
 10386                           
 10387                           ; BSR set to: 0
 10388  001432  0100               	movlb	0	; () banked
 10389  001434  A5D0               	btfss	Open1USART@config& (0+255),2,b
 10390  001436  D002               	goto	l5967
 10391                           
 10392                           ; BSR set to: 0
 10393  001438  8EAC               	bsf	4012,7,c	;volatile
 10394  00143A  D000               	goto	l5967
 10395  00143C                     l5967:
 10396                           
 10397                           ; BSR set to: 0
 10398  00143C  0100               	movlb	0	; () banked
 10399  00143E  A7D0               	btfss	Open1USART@config& (0+255),3,b
 10400  001440  D002               	goto	l1212
 10401                           
 10402                           ; BSR set to: 0
 10403  001442  88AB               	bsf	4011,4,c	;volatile
 10404  001444  D002               	goto	l5971
 10405  001446                     l1212:
 10406                           
 10407                           ; BSR set to: 0
 10408  001446  8AAB               	bsf	4011,5,c	;volatile
 10409  001448  D000               	goto	l5971
 10410  00144A                     l5971:
 10411                           
 10412                           ; BSR set to: 0
 10413  00144A  0100               	movlb	0	; () banked
 10414  00144C  A9D0               	btfss	Open1USART@config& (0+255),4,b
 10415  00144E  D002               	goto	l5975
 10416                           
 10417                           ; BSR set to: 0
 10418  001450  84AC               	bsf	4012,2,c	;volatile
 10419  001452  D000               	goto	l5975
 10420  001454                     l5975:
 10421                           
 10422                           ; BSR set to: 0
 10423  001454  0100               	movlb	0	; () banked
 10424  001456  ABD0               	btfss	Open1USART@config& (0+255),5,b
 10425  001458  D002               	goto	l5979
 10426                           
 10427                           ; BSR set to: 0
 10428  00145A  86AB               	bsf	4011,3,c	;volatile
 10429  00145C  D000               	goto	l5979
 10430  00145E                     l5979:
 10431                           
 10432                           ; BSR set to: 0
 10433  00145E  0100               	movlb	0	; () banked
 10434  001460  ADD0               	btfss	Open1USART@config& (0+255),6,b
 10435  001462  D002               	goto	l1216
 10436                           
 10437                           ; BSR set to: 0
 10438  001464  8A9D               	bsf	3997,5,c	;volatile
 10439  001466  D002               	goto	l5983
 10440  001468                     l1216:
 10441                           
 10442                           ; BSR set to: 0
 10443  001468  9A9D               	bcf	3997,5,c	;volatile
 10444  00146A  D000               	goto	l5983
 10445  00146C                     l5983:
 10446                           
 10447                           ; BSR set to: 0
 10448  00146C  0100               	movlb	0	; () banked
 10449  00146E  AFD0               	btfss	Open1USART@config& (0+255),7,b
 10450  001470  D002               	goto	l1218
 10451                           
 10452                           ; BSR set to: 0
 10453  001472  889D               	bsf	3997,4,c	;volatile
 10454  001474  D001               	goto	l1219
 10455  001476                     l1218:
 10456                           
 10457                           ; BSR set to: 0
 10458  001476  989D               	bcf	3997,4,c	;volatile
 10459  001478                     l1219:
 10460                           
 10461                           ; BSR set to: 0
 10462  001478  C0CE  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10463                           
 10464                           ; BSR set to: 0
 10465  00147C  0100               	movlb	0	; () banked
 10466  00147E  51CF               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10467  001480  6E7F               	movwf	3967,c	;volatile
 10468                           
 10469                           ; BSR set to: 0
 10470  001482  8AAC               	bsf	4012,5,c	;volatile
 10471                           
 10472                           ; BSR set to: 0
 10473  001484  8EAB               	bsf	4011,7,c	;volatile
 10474                           
 10475                           ; BSR set to: 0
 10476  001486  9C94               	bcf	3988,6,c	;volatile
 10477                           
 10478                           ; BSR set to: 0
 10479  001488  8E94               	bsf	3988,7,c	;volatile
 10480                           
 10481                           ; BSR set to: 0
 10482  00148A  B8AC               	btfsc	4012,4,c	;volatile
 10483                           
 10484                           ; BSR set to: 0
 10485  00148C  BEAC               	btfsc	4012,7,c	;volatile
 10486  00148E  D002               	goto	l1221
 10487                           
 10488                           ; BSR set to: 0
 10489  001490  8C94               	bsf	3988,6,c	;volatile
 10490  001492  D000               	goto	l1221
 10491  001494                     l1221:
 10492                           
 10493                           ; BSR set to: 0
 10494  001494  0012               	return		;funcret
 10495  001496                     __end_of_Open1USART:
 10496                           	opt stack 0
 10497                           prodh	equ	0xFF4
 10498                           prodl	equ	0xFF3
 10499                           intcon	equ	0xFF2
 10500                           intcon2	equ	0xFF1
 10501                           intcon3	equ	0xFF0
 10502                           postinc0	equ	0xFEE
 10503                           wreg	equ	0xFE8
 10504                           postinc1	equ	0xFE6
 10505                           fsr1h	equ	0xFE2
 10506                           fsr1l	equ	0xFE1
 10507                           indf2	equ	0xFDF
 10508                           postinc2	equ	0xFDE
 10509                           postdec2	equ	0xFDD
 10510                           fsr2h	equ	0xFDA
 10511                           fsr2l	equ	0xFD9
 10512                           status	equ	0xFD8
 10513                           
 10514 ;; *************** function _FlushTxBuf *****************
 10515 ;; Defined at:
 10516 ;;		line 90 in file "Wireless.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  index           1   16[BANK0 ] unsigned char 
 10521 ;; Return value:  Size  Location     Type
 10522 ;;		None               void
 10523 ;; Registers used:
 10524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;Total ram usage:        1 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    7
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_ConfigureWireless
 10541 ;;		_SendStatus
 10542 ;;		_SendLineMode
 10543 ;;		_SendOffsets
 10544 ;;		_SendThreshold
 10545 ;;		_SendDefaultPIDValues
 10546 ;;		_SendStoredPIDValues
 10547 ;;		_SendCurrentPIDValues
 10548 ;;		_SendBattVoltageInitial
 10549 ;;		_SendPIDSetPointOnLine
 10550 ;;		_SendBattVoltage
 10551 ;;		_SendBattCurrent
 10552 ;;		_SendBattCurrentAcc
 10553 ;;		_SendPIDSetPointOffLine
 10554 ;;		_SendPIDError
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text81
 10559  001EAE                     __ptext81:
 10560                           	opt stack 0
 10561  001EAE                     _FlushTxBuf:
 10562                           	opt stack 21
 10563                           
 10564                           ;Wireless.c: 91: unsigned char index;
 10565                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;incstack = 0
 10569  001EAE  0E00               	movlw	0
 10570  001EB0  0100               	movlb	0	; () banked
 10571  001EB2  6FCE               	movwf	FlushTxBuf@index& (0+255),b
 10572  001EB4                     l5535:
 10573                           
 10574                           ; BSR set to: 0
 10575  001EB4  0E18               	movlw	24
 10576  001EB6  0100               	movlb	0	; () banked
 10577  001EB8  65CE               	cpfsgt	FlushTxBuf@index& (0+255),b
 10578  001EBA  D001               	goto	l5539
 10579                           
 10580                           ; BSR set to: 0
 10581  001EBC  D00E               	goto	l5545
 10582  001EBE                     l5539:
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10586  001EBE  0100               	movlb	0	; () banked
 10587  001EC0  51CE               	movf	FlushTxBuf@index& (0+255),w,b
 10588  001EC2  0D01               	mullw	1
 10589  001EC4  0E79               	movlw	low _Tx_buffer
 10590  001EC6  24F3               	addwf	prodl,w,c
 10591  001EC8  6ED9               	movwf	fsr2l,c
 10592  001ECA  0E00               	movlw	high _Tx_buffer
 10593  001ECC  20F4               	addwfc	prodh,w,c
 10594  001ECE  6EDA               	movwf	fsr2h,c
 10595  001ED0  0E00               	movlw	0
 10596  001ED2  6EDF               	movwf	indf2,c
 10597                           
 10598                           ; BSR set to: 0
 10599  001ED4  0100               	movlb	0	; () banked
 10600  001ED6  2BCE               	incf	FlushTxBuf@index& (0+255),f,b
 10601  001ED8  D7ED               	goto	l5535
 10602  001EDA                     l5545:
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;Wireless.c: 95: }
 10606                           ;Wireless.c: 97: put_Tx_index = 0;
 10607  001EDA  0E00               	movlw	0
 10608  001EDC  6E20               	movwf	_put_Tx_index,c
 10609                           
 10610                           ;Wireless.c: 98: get_Tx_index = 0;
 10611  001EDE  0E00               	movlw	0
 10612  001EE0  6E1E               	movwf	_get_Tx_index,c
 10613                           
 10614                           ; BSR set to: 0
 10615  001EE2  0012               	return		;funcret
 10616  001EE4                     __end_of_FlushTxBuf:
 10617                           	opt stack 0
 10618                           prodh	equ	0xFF4
 10619                           prodl	equ	0xFF3
 10620                           intcon	equ	0xFF2
 10621                           intcon2	equ	0xFF1
 10622                           intcon3	equ	0xFF0
 10623                           postinc0	equ	0xFEE
 10624                           wreg	equ	0xFE8
 10625                           postinc1	equ	0xFE6
 10626                           fsr1h	equ	0xFE2
 10627                           fsr1l	equ	0xFE1
 10628                           indf2	equ	0xFDF
 10629                           postinc2	equ	0xFDE
 10630                           postdec2	equ	0xFDD
 10631                           fsr2h	equ	0xFDA
 10632                           fsr2l	equ	0xFD9
 10633                           status	equ	0xFD8
 10634                           
 10635 ;; *************** function _FlushRxBuf *****************
 10636 ;; Defined at:
 10637 ;;		line 102 in file "Wireless.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;		None
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;  index           1   16[BANK0 ] unsigned char 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;		None               void
 10644 ;; Registers used:
 10645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10655 ;;Total ram usage:        1 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    7
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_ConfigureWireless
 10662 ;;		_SetPIDValues
 10663 ;;		_ReceiveCommandsEnable
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text82
 10668  001EE4                     __ptext82:
 10669                           	opt stack 0
 10670  001EE4                     _FlushRxBuf:
 10671                           	opt stack 22
 10672                           
 10673                           ;Wireless.c: 103: unsigned char index;
 10674                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;incstack = 0
 10678  001EE4  0E00               	movlw	0
 10679  001EE6  0100               	movlb	0	; () banked
 10680  001EE8  6FCE               	movwf	FlushRxBuf@index& (0+255),b
 10681  001EEA                     l5825:
 10682                           
 10683                           ; BSR set to: 0
 10684  001EEA  0E18               	movlw	24
 10685  001EEC  0100               	movlb	0	; () banked
 10686  001EEE  65CE               	cpfsgt	FlushRxBuf@index& (0+255),b
 10687  001EF0  D001               	goto	l5829
 10688                           
 10689                           ; BSR set to: 0
 10690  001EF2  D00E               	goto	l5835
 10691  001EF4                     l5829:
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10695  001EF4  0100               	movlb	0	; () banked
 10696  001EF6  51CE               	movf	FlushRxBuf@index& (0+255),w,b
 10697  001EF8  0D01               	mullw	1
 10698  001EFA  0E60               	movlw	low _Rx_buffer
 10699  001EFC  24F3               	addwf	prodl,w,c
 10700  001EFE  6ED9               	movwf	fsr2l,c
 10701  001F00  0E00               	movlw	high _Rx_buffer
 10702  001F02  20F4               	addwfc	prodh,w,c
 10703  001F04  6EDA               	movwf	fsr2h,c
 10704  001F06  0E00               	movlw	0
 10705  001F08  6EDF               	movwf	indf2,c
 10706                           
 10707                           ; BSR set to: 0
 10708  001F0A  0100               	movlb	0	; () banked
 10709  001F0C  2BCE               	incf	FlushRxBuf@index& (0+255),f,b
 10710  001F0E  D7ED               	goto	l5825
 10711  001F10                     l5835:
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;Wireless.c: 107: }
 10715                           ;Wireless.c: 109: put_Rx_index = 0;
 10716  001F10  0E00               	movlw	0
 10717  001F12  6E1F               	movwf	_put_Rx_index,c
 10718                           
 10719                           ;Wireless.c: 110: get_Rx_index = 0;
 10720  001F14  0E00               	movlw	0
 10721  001F16  6E1D               	movwf	_get_Rx_index,c
 10722                           
 10723                           ; BSR set to: 0
 10724  001F18  0012               	return		;funcret
 10725  001F1A                     __end_of_FlushRxBuf:
 10726                           	opt stack 0
 10727                           prodh	equ	0xFF4
 10728                           prodl	equ	0xFF3
 10729                           intcon	equ	0xFF2
 10730                           intcon2	equ	0xFF1
 10731                           intcon3	equ	0xFF0
 10732                           postinc0	equ	0xFEE
 10733                           wreg	equ	0xFE8
 10734                           postinc1	equ	0xFE6
 10735                           fsr1h	equ	0xFE2
 10736                           fsr1l	equ	0xFE1
 10737                           indf2	equ	0xFDF
 10738                           postinc2	equ	0xFDE
 10739                           postdec2	equ	0xFDD
 10740                           fsr2h	equ	0xFDA
 10741                           fsr2l	equ	0xFD9
 10742                           status	equ	0xFD8
 10743                           
 10744 ;; *************** function _ConfigureUltrasound *****************
 10745 ;; Defined at:
 10746 ;;		line 9 in file "Ultrasound.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  echo_to_cm      3   20[BANK0 ] float 
 10749 ;;  echo_to_in      3   23[BANK0 ] float 
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;		None               void
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10761 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;Total ram usage:        6 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    8
 10768 ;; This function calls:
 10769 ;;		_WriteTimer1
 10770 ;; This function is called by:
 10771 ;;		_main
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text83
 10776  0020C2                     __ptext83:
 10777                           	opt stack 0
 10778  0020C2                     _ConfigureUltrasound:
 10779                           	opt stack 22
 10780                           
 10781                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10782                           
 10783                           ; BSR set to: 0
 10784                           ;incstack = 0
 10785  0020C2  C0D2  F0E6         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10786  0020C6  C0D3  F0E7         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10787  0020CA  C0D4  F0E8         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10788                           
 10789                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10790  0020CE  C0D5  F0E9         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10791  0020D2  C0D6  F0EA         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10792  0020D6  C0D7  F0EB         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10793                           
 10794                           ;Ultrasound.c: 12: WriteTimer1(0);
 10795  0020DA  0E00               	movlw	0
 10796  0020DC  0100               	movlb	0	; () banked
 10797  0020DE  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10798  0020E0  0E00               	movlw	0
 10799  0020E2  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 10800  0020E4  ECAE  F011         	call	_WriteTimer1	;wreg free
 10801  0020E8  0012               	return		;funcret
 10802  0020EA                     __end_of_ConfigureUltrasound:
 10803                           	opt stack 0
 10804                           prodh	equ	0xFF4
 10805                           prodl	equ	0xFF3
 10806                           intcon	equ	0xFF2
 10807                           intcon2	equ	0xFF1
 10808                           intcon3	equ	0xFF0
 10809                           postinc0	equ	0xFEE
 10810                           wreg	equ	0xFE8
 10811                           postinc1	equ	0xFE6
 10812                           fsr1h	equ	0xFE2
 10813                           fsr1l	equ	0xFE1
 10814                           indf2	equ	0xFDF
 10815                           postinc2	equ	0xFDE
 10816                           postdec2	equ	0xFDD
 10817                           fsr2h	equ	0xFDA
 10818                           fsr2l	equ	0xFD9
 10819                           status	equ	0xFD8
 10820                           
 10821 ;; *************** function _ConfigureTimer2 *****************
 10822 ;; Defined at:
 10823 ;;		line 147 in file "FastBuggy17_Main_Code_TUNING.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;		None               void
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;Total ram usage:        0 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    8
 10844 ;; This function calls:
 10845 ;;		_OpenTimer3
 10846 ;; This function is called by:
 10847 ;;		_main
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text84
 10852  0024BC                     __ptext84:
 10853                           	opt stack 0
 10854  0024BC                     _ConfigureTimer2:
 10855                           	opt stack 22
 10856                           
 10857                           ;FastBuggy17_Main_Code_TUNING.c: 149: OpenTimer3(0b01111111
 10858                           ;FastBuggy17_Main_Code_TUNING.c: 150: & 0b11111100
 10859                           ;FastBuggy17_Main_Code_TUNING.c: 151: & 0b10000111
 10860                           ;FastBuggy17_Main_Code_TUNING.c: 152: & 0b10110111);
 10861                           
 10862                           ;incstack = 0
 10863  0024BC  0E04               	movlw	4
 10864  0024BE  ECDA  F00F         	call	_OpenTimer3
 10865  0024C2  0012               	return		;funcret
 10866  0024C4                     __end_of_ConfigureTimer2:
 10867                           	opt stack 0
 10868                           prodh	equ	0xFF4
 10869                           prodl	equ	0xFF3
 10870                           intcon	equ	0xFF2
 10871                           intcon2	equ	0xFF1
 10872                           intcon3	equ	0xFF0
 10873                           postinc0	equ	0xFEE
 10874                           wreg	equ	0xFE8
 10875                           postinc1	equ	0xFE6
 10876                           fsr1h	equ	0xFE2
 10877                           fsr1l	equ	0xFE1
 10878                           indf2	equ	0xFDF
 10879                           postinc2	equ	0xFDE
 10880                           postdec2	equ	0xFDD
 10881                           fsr2h	equ	0xFDA
 10882                           fsr2l	equ	0xFD9
 10883                           status	equ	0xFD8
 10884                           
 10885 ;; *************** function _OpenTimer3 *****************
 10886 ;; Defined at:
 10887 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t3open.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  config          1    wreg     unsigned char 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;  config          1   16[BANK0 ] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;		None               void
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;Total ram usage:        1 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    7
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_ConfigureTimer2
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text85
 10916  001FB4                     __ptext85:
 10917                           	opt stack 0
 10918  001FB4                     _OpenTimer3:
 10919                           	opt stack 22
 10920                           
 10921                           ;incstack = 0
 10922                           ;OpenTimer3@config stored from wreg
 10923  001FB4  0100               	movlb	0	; () banked
 10924  001FB6  6FCE               	movwf	OpenTimer3@config& (0+255),b
 10925                           
 10926                           ; BSR set to: 0
 10927  001FB8  0100               	movlb	0	; () banked
 10928  001FBA  51CE               	movf	OpenTimer3@config& (0+255),w,b
 10929  001FBC  0B36               	andlw	54
 10930  001FBE  6EB1               	movwf	4017,c	;volatile
 10931                           
 10932                           ; BSR set to: 0
 10933  001FC0  0E00               	movlw	0
 10934  001FC2  6EB3               	movwf	4019,c	;volatile
 10935                           
 10936                           ; BSR set to: 0
 10937  001FC4  0E00               	movlw	0
 10938  001FC6  6EB2               	movwf	4018,c	;volatile
 10939                           
 10940                           ; BSR set to: 0
 10941  001FC8  92A1               	bcf	4001,1,c	;volatile
 10942                           
 10943                           ; BSR set to: 0
 10944  001FCA  0100               	movlb	0	; () banked
 10945  001FCC  AFCE               	btfss	OpenTimer3@config& (0+255),7,b
 10946  001FCE  D002               	goto	l1186
 10947                           
 10948                           ; BSR set to: 0
 10949  001FD0  82A0               	bsf	4000,1,c	;volatile
 10950  001FD2  D001               	goto	l1187
 10951  001FD4                     l1186:
 10952                           
 10953                           ; BSR set to: 0
 10954  001FD4  92A0               	bcf	4000,1,c	;volatile
 10955  001FD6                     l1187:
 10956                           
 10957                           ; BSR set to: 0
 10958  001FD6  0100               	movlb	0	; () banked
 10959  001FD8  A1CE               	btfss	OpenTimer3@config& (0+255),0,b
 10960  001FDA  D002               	goto	l1188
 10961                           
 10962                           ; BSR set to: 0
 10963  001FDC  8EB1               	bsf	4017,7,c	;volatile
 10964  001FDE  D001               	goto	l1189
 10965  001FE0                     l1188:
 10966                           
 10967                           ; BSR set to: 0
 10968  001FE0  9EB1               	bcf	4017,7,c	;volatile
 10969  001FE2                     l1189:
 10970                           
 10971                           ; BSR set to: 0
 10972  001FE2  80B1               	bsf	4017,0,c	;volatile
 10973                           
 10974                           ; BSR set to: 0
 10975  001FE4  0012               	return		;funcret
 10976  001FE6                     __end_of_OpenTimer3:
 10977                           	opt stack 0
 10978                           prodh	equ	0xFF4
 10979                           prodl	equ	0xFF3
 10980                           intcon	equ	0xFF2
 10981                           intcon2	equ	0xFF1
 10982                           intcon3	equ	0xFF0
 10983                           postinc0	equ	0xFEE
 10984                           wreg	equ	0xFE8
 10985                           postinc1	equ	0xFE6
 10986                           fsr1h	equ	0xFE2
 10987                           fsr1l	equ	0xFE1
 10988                           indf2	equ	0xFDF
 10989                           postinc2	equ	0xFDE
 10990                           postdec2	equ	0xFDD
 10991                           fsr2h	equ	0xFDA
 10992                           fsr2l	equ	0xFD9
 10993                           status	equ	0xFD8
 10994                           
 10995 ;; *************** function _ConfigureTimer1 *****************
 10996 ;; Defined at:
 10997 ;;		line 128 in file "FastBuggy17_Main_Code_TUNING.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;		None               void
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    8
 11018 ;; This function calls:
 11019 ;;		_OpenTimer1
 11020 ;;		_WriteTimer1
 11021 ;; This function is called by:
 11022 ;;		_main
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text86
 11027  00229E                     __ptext86:
 11028                           	opt stack 0
 11029  00229E                     _ConfigureTimer1:
 11030                           	opt stack 22
 11031                           
 11032                           ;FastBuggy17_Main_Code_TUNING.c: 130: OpenTimer1(0b01111111
 11033                           ;FastBuggy17_Main_Code_TUNING.c: 131: & 0b11111111
 11034                           ;FastBuggy17_Main_Code_TUNING.c: 132: & 0b11111101
 11035                           ;FastBuggy17_Main_Code_TUNING.c: 133: & 0b11011111
 11036                           ;FastBuggy17_Main_Code_TUNING.c: 134: & 0b11110111
 11037                           ;FastBuggy17_Main_Code_TUNING.c: 135: & 0b11111111
 11038                           ;FastBuggy17_Main_Code_TUNING.c: 136: & 0b10110111);
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;incstack = 0
 11042  00229E  0E15               	movlw	21
 11043  0022A0  EC8D  F00F         	call	_OpenTimer1
 11044                           
 11045                           ;FastBuggy17_Main_Code_TUNING.c: 140: T1CONbits.TMR1ON = 0;
 11046  0022A4  90CD               	bcf	4045,0,c	;volatile
 11047                           
 11048                           ;FastBuggy17_Main_Code_TUNING.c: 142: WriteTimer1(0);
 11049  0022A6  0E00               	movlw	0
 11050  0022A8  0100               	movlb	0	; () banked
 11051  0022AA  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 11052  0022AC  0E00               	movlw	0
 11053  0022AE  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 11054  0022B0  ECAE  F011         	call	_WriteTimer1	;wreg free
 11055  0022B4  0012               	return		;funcret
 11056  0022B6                     __end_of_ConfigureTimer1:
 11057                           	opt stack 0
 11058                           prodh	equ	0xFF4
 11059                           prodl	equ	0xFF3
 11060                           intcon	equ	0xFF2
 11061                           intcon2	equ	0xFF1
 11062                           intcon3	equ	0xFF0
 11063                           postinc0	equ	0xFEE
 11064                           wreg	equ	0xFE8
 11065                           postinc1	equ	0xFE6
 11066                           fsr1h	equ	0xFE2
 11067                           fsr1l	equ	0xFE1
 11068                           indf2	equ	0xFDF
 11069                           postinc2	equ	0xFDE
 11070                           postdec2	equ	0xFDD
 11071                           fsr2h	equ	0xFDA
 11072                           fsr2l	equ	0xFD9
 11073                           status	equ	0xFD8
 11074                           
 11075 ;; *************** function _WriteTimer1 *****************
 11076 ;; Defined at:
 11077 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  timer1          2   16[BANK0 ] unsigned int 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  timer           2   18[BANK0 ] struct Timers
 11082 ;; Return value:  Size  Location     Type
 11083 ;;		None               void
 11084 ;; Registers used:
 11085 ;;		None
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11095 ;;Total ram usage:        4 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:    7
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		_ConfigureUltrasound
 11102 ;;		_ConfigureTimer1
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           	psect	text87
 11107  00235C                     __ptext87:
 11108                           	opt stack 0
 11109  00235C                     _WriteTimer1:
 11110                           	opt stack 22
 11111                           
 11112                           ;incstack = 0
 11113  00235C  C0CE  F0D0         	movff	WriteTimer1@timer1,WriteTimer1@timer
 11114  002360  C0CF  F0D1         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 11115  002364  C0D1  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 11116  002368  C0D0  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 11117  00236C  0012               	return		;funcret
 11118  00236E                     __end_of_WriteTimer1:
 11119                           	opt stack 0
 11120                           prodh	equ	0xFF4
 11121                           prodl	equ	0xFF3
 11122                           intcon	equ	0xFF2
 11123                           intcon2	equ	0xFF1
 11124                           intcon3	equ	0xFF0
 11125                           postinc0	equ	0xFEE
 11126                           wreg	equ	0xFE8
 11127                           postinc1	equ	0xFE6
 11128                           fsr1h	equ	0xFE2
 11129                           fsr1l	equ	0xFE1
 11130                           indf2	equ	0xFDF
 11131                           postinc2	equ	0xFDE
 11132                           postdec2	equ	0xFDD
 11133                           fsr2h	equ	0xFDA
 11134                           fsr2l	equ	0xFD9
 11135                           status	equ	0xFD8
 11136                           
 11137 ;; *************** function _OpenTimer1 *****************
 11138 ;; Defined at:
 11139 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  config          1    wreg     unsigned char 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;  config          1   16[BANK0 ] unsigned char 
 11144 ;; Return value:  Size  Location     Type
 11145 ;;		None               void
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;Total ram usage:        1 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    7
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_ConfigureTimer1
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text88
 11168  001F1A                     __ptext88:
 11169                           	opt stack 0
 11170  001F1A                     _OpenTimer1:
 11171                           	opt stack 22
 11172                           
 11173                           ;incstack = 0
 11174                           ;OpenTimer1@config stored from wreg
 11175  001F1A  0100               	movlb	0	; () banked
 11176  001F1C  6FCE               	movwf	OpenTimer1@config& (0+255),b
 11177                           
 11178                           ; BSR set to: 0
 11179  001F1E  0100               	movlb	0	; () banked
 11180  001F20  51CE               	movf	OpenTimer1@config& (0+255),w,b
 11181  001F22  0B7E               	andlw	126
 11182  001F24  6ECD               	movwf	4045,c	;volatile
 11183                           
 11184                           ; BSR set to: 0
 11185  001F26  0100               	movlb	0	; () banked
 11186  001F28  ADCE               	btfss	OpenTimer1@config& (0+255),6,b
 11187  001F2A  D002               	goto	l1153
 11188                           
 11189                           ; BSR set to: 0
 11190  001F2C  8ECD               	bsf	4045,7,c	;volatile
 11191  001F2E  D002               	goto	l6075
 11192  001F30                     l1153:
 11193                           
 11194                           ; BSR set to: 0
 11195  001F30  9ECD               	bcf	4045,7,c	;volatile
 11196  001F32  D000               	goto	l6075
 11197  001F34                     l6075:
 11198                           
 11199                           ; BSR set to: 0
 11200  001F34  0E00               	movlw	0
 11201  001F36  6ECF               	movwf	4047,c	;volatile
 11202  001F38  0E00               	movlw	0
 11203  001F3A  6ECE               	movwf	4046,c	;volatile
 11204                           
 11205                           ; BSR set to: 0
 11206  001F3C  909E               	bcf	3998,0,c	;volatile
 11207                           
 11208                           ; BSR set to: 0
 11209  001F3E  0100               	movlb	0	; () banked
 11210  001F40  AFCE               	btfss	OpenTimer1@config& (0+255),7,b
 11211  001F42  D002               	goto	l1155
 11212                           
 11213                           ; BSR set to: 0
 11214  001F44  809D               	bsf	3997,0,c	;volatile
 11215  001F46  D001               	goto	l1156
 11216  001F48                     l1155:
 11217                           
 11218                           ; BSR set to: 0
 11219  001F48  909D               	bcf	3997,0,c	;volatile
 11220  001F4A                     l1156:
 11221                           
 11222                           ; BSR set to: 0
 11223  001F4A  80CD               	bsf	4045,0,c	;volatile
 11224                           
 11225                           ; BSR set to: 0
 11226  001F4C  0012               	return		;funcret
 11227  001F4E                     __end_of_OpenTimer1:
 11228                           	opt stack 0
 11229                           prodh	equ	0xFF4
 11230                           prodl	equ	0xFF3
 11231                           intcon	equ	0xFF2
 11232                           intcon2	equ	0xFF1
 11233                           intcon3	equ	0xFF0
 11234                           postinc0	equ	0xFEE
 11235                           wreg	equ	0xFE8
 11236                           postinc1	equ	0xFE6
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           indf2	equ	0xFDF
 11240                           postinc2	equ	0xFDE
 11241                           postdec2	equ	0xFDD
 11242                           fsr2h	equ	0xFDA
 11243                           fsr2l	equ	0xFD9
 11244                           status	equ	0xFD8
 11245                           
 11246 ;; *************** function _ConfigureTimer0 *****************
 11247 ;; Defined at:
 11248 ;;		line 114 in file "FastBuggy17_Main_Code_TUNING.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;		None               void
 11255 ;; Registers used:
 11256 ;;		wreg, status,2, status,0, cstack
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:    8
 11269 ;; This function calls:
 11270 ;;		_OpenTimer0
 11271 ;;		_WriteTimer0
 11272 ;; This function is called by:
 11273 ;;		_main
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text89
 11278  0022CC                     __ptext89:
 11279                           	opt stack 0
 11280  0022CC                     _ConfigureTimer0:
 11281                           	opt stack 22
 11282                           
 11283                           ;FastBuggy17_Main_Code_TUNING.c: 116: OpenTimer0(0b11111111
 11284                           ;FastBuggy17_Main_Code_TUNING.c: 117: & 0b10111111
 11285                           ;FastBuggy17_Main_Code_TUNING.c: 118: & 0b11011111
 11286                           ;FastBuggy17_Main_Code_TUNING.c: 119: & 0b11111111);
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;incstack = 0
 11290  0022CC  0E9F               	movlw	159
 11291  0022CE  EC9C  F010         	call	_OpenTimer0
 11292                           
 11293                           ;FastBuggy17_Main_Code_TUNING.c: 123: WriteTimer0(63036);
 11294  0022D2  0EF6               	movlw	246
 11295  0022D4  0100               	movlb	0	; () banked
 11296  0022D6  6FCF               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 11297  0022D8  0E3C               	movlw	60
 11298  0022DA  6FCE               	movwf	WriteTimer0@timer0& (0+255),b
 11299  0022DC  ECB7  F011         	call	_WriteTimer0	;wreg free
 11300  0022E0  0012               	return		;funcret
 11301  0022E2                     __end_of_ConfigureTimer0:
 11302                           	opt stack 0
 11303                           prodh	equ	0xFF4
 11304                           prodl	equ	0xFF3
 11305                           intcon	equ	0xFF2
 11306                           intcon2	equ	0xFF1
 11307                           intcon3	equ	0xFF0
 11308                           postinc0	equ	0xFEE
 11309                           wreg	equ	0xFE8
 11310                           postinc1	equ	0xFE6
 11311                           fsr1h	equ	0xFE2
 11312                           fsr1l	equ	0xFE1
 11313                           indf2	equ	0xFDF
 11314                           postinc2	equ	0xFDE
 11315                           postdec2	equ	0xFDD
 11316                           fsr2h	equ	0xFDA
 11317                           fsr2l	equ	0xFD9
 11318                           status	equ	0xFD8
 11319                           
 11320 ;; *************** function _WriteTimer0 *****************
 11321 ;; Defined at:
 11322 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  timer0          2   16[BANK0 ] unsigned int 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  timer           2   18[BANK0 ] struct Timers
 11327 ;; Return value:  Size  Location     Type
 11328 ;;		None               void
 11329 ;; Registers used:
 11330 ;;		None
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;Total ram usage:        4 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    7
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_ConfigureTimer0
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text90
 11351  00236E                     __ptext90:
 11352                           	opt stack 0
 11353  00236E                     _WriteTimer0:
 11354                           	opt stack 22
 11355                           
 11356                           ;incstack = 0
 11357  00236E  C0CE  F0D0         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11358  002372  C0CF  F0D1         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11359  002376  C0D1  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11360  00237A  C0D0  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11361  00237E  0012               	return		;funcret
 11362  002380                     __end_of_WriteTimer0:
 11363                           	opt stack 0
 11364                           prodh	equ	0xFF4
 11365                           prodl	equ	0xFF3
 11366                           intcon	equ	0xFF2
 11367                           intcon2	equ	0xFF1
 11368                           intcon3	equ	0xFF0
 11369                           postinc0	equ	0xFEE
 11370                           wreg	equ	0xFE8
 11371                           postinc1	equ	0xFE6
 11372                           fsr1h	equ	0xFE2
 11373                           fsr1l	equ	0xFE1
 11374                           indf2	equ	0xFDF
 11375                           postinc2	equ	0xFDE
 11376                           postdec2	equ	0xFDD
 11377                           fsr2h	equ	0xFDA
 11378                           fsr2l	equ	0xFD9
 11379                           status	equ	0xFD8
 11380                           
 11381 ;; *************** function _OpenTimer0 *****************
 11382 ;; Defined at:
 11383 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;  config          1    wreg     unsigned char 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;  config          1   16[BANK0 ] unsigned char 
 11388 ;; Return value:  Size  Location     Type
 11389 ;;		None               void
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;Total ram usage:        1 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    7
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_ConfigureTimer0
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text91
 11412  002138                     __ptext91:
 11413                           	opt stack 0
 11414  002138                     _OpenTimer0:
 11415                           	opt stack 22
 11416                           
 11417                           ;incstack = 0
 11418                           ;OpenTimer0@config stored from wreg
 11419  002138  0100               	movlb	0	; () banked
 11420  00213A  6FCE               	movwf	OpenTimer0@config& (0+255),b
 11421                           
 11422                           ; BSR set to: 0
 11423  00213C  0100               	movlb	0	; () banked
 11424  00213E  51CE               	movf	OpenTimer0@config& (0+255),w,b
 11425  002140  0B7F               	andlw	127
 11426  002142  6ED5               	movwf	4053,c	;volatile
 11427                           
 11428                           ; BSR set to: 0
 11429  002144  0E00               	movlw	0
 11430  002146  6ED7               	movwf	4055,c	;volatile
 11431                           
 11432                           ; BSR set to: 0
 11433  002148  0E00               	movlw	0
 11434  00214A  6ED6               	movwf	4054,c	;volatile
 11435                           
 11436                           ; BSR set to: 0
 11437  00214C  94F2               	bcf	intcon,2,c	;volatile
 11438                           
 11439                           ; BSR set to: 0
 11440  00214E  0100               	movlb	0	; () banked
 11441  002150  AFCE               	btfss	OpenTimer0@config& (0+255),7,b
 11442  002152  D002               	goto	l1129
 11443                           
 11444                           ; BSR set to: 0
 11445  002154  8AF2               	bsf	intcon,5,c	;volatile
 11446  002156  D001               	goto	l1130
 11447  002158                     l1129:
 11448                           
 11449                           ; BSR set to: 0
 11450  002158  9AF2               	bcf	intcon,5,c	;volatile
 11451  00215A                     l1130:
 11452                           
 11453                           ; BSR set to: 0
 11454  00215A  8ED5               	bsf	4053,7,c	;volatile
 11455                           
 11456                           ; BSR set to: 0
 11457  00215C  0012               	return		;funcret
 11458  00215E                     __end_of_OpenTimer0:
 11459                           	opt stack 0
 11460                           prodh	equ	0xFF4
 11461                           prodl	equ	0xFF3
 11462                           intcon	equ	0xFF2
 11463                           intcon2	equ	0xFF1
 11464                           intcon3	equ	0xFF0
 11465                           postinc0	equ	0xFEE
 11466                           wreg	equ	0xFE8
 11467                           postinc1	equ	0xFE6
 11468                           fsr1h	equ	0xFE2
 11469                           fsr1l	equ	0xFE1
 11470                           indf2	equ	0xFDF
 11471                           postinc2	equ	0xFDE
 11472                           postdec2	equ	0xFDD
 11473                           fsr2h	equ	0xFDA
 11474                           fsr2l	equ	0xFD9
 11475                           status	equ	0xFD8
 11476                           
 11477 ;; *************** function _ConfigurePWM *****************
 11478 ;; Defined at:
 11479 ;;		line 165 in file "FastBuggy17_Main_Code_TUNING.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;		None               void
 11486 ;; Registers used:
 11487 ;;		wreg, status,2, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    8
 11500 ;; This function calls:
 11501 ;;		_OpenPWM4
 11502 ;;		_OpenPWM5
 11503 ;; This function is called by:
 11504 ;;		_main
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text92
 11509  00244E                     __ptext92:
 11510                           	opt stack 0
 11511  00244E                     _ConfigurePWM:
 11512                           	opt stack 22
 11513                           
 11514                           ;FastBuggy17_Main_Code_TUNING.c: 167: OpenPWM4(130);
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;incstack = 0
 11518  00244E  0E82               	movlw	130
 11519  002450  ECC2  F010         	call	_OpenPWM4
 11520                           
 11521                           ;FastBuggy17_Main_Code_TUNING.c: 168: OpenPWM5(130);
 11522  002454  0E82               	movlw	130
 11523  002456  ECAF  F010         	call	_OpenPWM5
 11524  00245A  0012               	return		;funcret
 11525  00245C                     __end_of_ConfigurePWM:
 11526                           	opt stack 0
 11527                           prodh	equ	0xFF4
 11528                           prodl	equ	0xFF3
 11529                           intcon	equ	0xFF2
 11530                           intcon2	equ	0xFF1
 11531                           intcon3	equ	0xFF0
 11532                           postinc0	equ	0xFEE
 11533                           wreg	equ	0xFE8
 11534                           postinc1	equ	0xFE6
 11535                           fsr1h	equ	0xFE2
 11536                           fsr1l	equ	0xFE1
 11537                           indf2	equ	0xFDF
 11538                           postinc2	equ	0xFDE
 11539                           postdec2	equ	0xFDD
 11540                           fsr2h	equ	0xFDA
 11541                           fsr2l	equ	0xFD9
 11542                           status	equ	0xFD8
 11543                           
 11544 ;; *************** function _OpenPWM5 *****************
 11545 ;; Defined at:
 11546 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  period          1    wreg     unsigned char 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  period          1   16[BANK0 ] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;		None               void
 11553 ;; Registers used:
 11554 ;;		wreg, status,2
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;Total ram usage:        1 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    7
 11567 ;; This function calls:
 11568 ;;		Nothing
 11569 ;; This function is called by:
 11570 ;;		_ConfigurePWM
 11571 ;; This function uses a non-reentrant model
 11572 ;;
 11573                           
 11574                           	psect	text93
 11575  00215E                     __ptext93:
 11576                           	opt stack 0
 11577  00215E                     _OpenPWM5:
 11578                           	opt stack 22
 11579                           
 11580                           ;incstack = 0
 11581                           ;OpenPWM5@period stored from wreg
 11582  00215E  0100               	movlb	0	; () banked
 11583  002160  6FCE               	movwf	OpenPWM5@period& (0+255),b
 11584                           
 11585                           ; BSR set to: 0
 11586  002162  0E0C               	movlw	12
 11587  002164  6E70               	movwf	3952,c	;volatile
 11588                           
 11589                           ; BSR set to: 0
 11590  002166  ACB1               	btfss	4017,6,c	;volatile
 11591                           
 11592                           ; BSR set to: 0
 11593  002168  B6B1               	btfsc	4017,3,c	;volatile
 11594  00216A  D005               	goto	l1107
 11595                           
 11596                           ; BSR set to: 0
 11597  00216C  94CA               	bcf	4042,2,c	;volatile
 11598                           
 11599                           ; BSR set to: 0
 11600  00216E  C0CE  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11601                           
 11602                           ; BSR set to: 0
 11603  002172  84CA               	bsf	4042,2,c	;volatile
 11604  002174  D005               	goto	l6131
 11605  002176                     l1107:
 11606                           
 11607                           ; BSR set to: 0
 11608  002176  9476               	bcf	3958,2,c	;volatile
 11609                           
 11610                           ; BSR set to: 0
 11611  002178  C0CE  FF77         	movff	OpenPWM5@period,3959	;volatile
 11612                           
 11613                           ; BSR set to: 0
 11614  00217C  8476               	bsf	3958,2,c	;volatile
 11615  00217E  D000               	goto	l6131
 11616  002180                     l6131:
 11617                           
 11618                           ; BSR set to: 0
 11619  002180  9898               	bcf	3992,4,c	;volatile
 11620                           
 11621                           ; BSR set to: 0
 11622  002182  0012               	return		;funcret
 11623  002184                     __end_of_OpenPWM5:
 11624                           	opt stack 0
 11625                           prodh	equ	0xFF4
 11626                           prodl	equ	0xFF3
 11627                           intcon	equ	0xFF2
 11628                           intcon2	equ	0xFF1
 11629                           intcon3	equ	0xFF0
 11630                           postinc0	equ	0xFEE
 11631                           wreg	equ	0xFE8
 11632                           postinc1	equ	0xFE6
 11633                           fsr1h	equ	0xFE2
 11634                           fsr1l	equ	0xFE1
 11635                           indf2	equ	0xFDF
 11636                           postinc2	equ	0xFDE
 11637                           postdec2	equ	0xFDD
 11638                           fsr2h	equ	0xFDA
 11639                           fsr2l	equ	0xFD9
 11640                           status	equ	0xFD8
 11641                           
 11642 ;; *************** function _OpenPWM4 *****************
 11643 ;; Defined at:
 11644 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  period          1    wreg     unsigned char 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  period          1   16[BANK0 ] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;		None               void
 11651 ;; Registers used:
 11652 ;;		wreg, status,2
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11661 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11662 ;;Total ram usage:        1 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    7
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_ConfigurePWM
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           	psect	text94
 11673  002184                     __ptext94:
 11674                           	opt stack 0
 11675  002184                     _OpenPWM4:
 11676                           	opt stack 22
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;incstack = 0
 11680                           ;OpenPWM4@period stored from wreg
 11681  002184  0100               	movlb	0	; () banked
 11682  002186  6FCE               	movwf	OpenPWM4@period& (0+255),b
 11683                           
 11684                           ; BSR set to: 0
 11685  002188  0E0C               	movlw	12
 11686  00218A  6E73               	movwf	3955,c	;volatile
 11687                           
 11688                           ; BSR set to: 0
 11689  00218C  9698               	bcf	3992,3,c	;volatile
 11690                           
 11691                           ; BSR set to: 0
 11692  00218E  ACB1               	btfss	4017,6,c	;volatile
 11693                           
 11694                           ; BSR set to: 0
 11695  002190  B6B1               	btfsc	4017,3,c	;volatile
 11696  002192  D005               	goto	l1081
 11697                           
 11698                           ; BSR set to: 0
 11699  002194  94CA               	bcf	4042,2,c	;volatile
 11700                           
 11701                           ; BSR set to: 0
 11702  002196  C0CE  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705  00219A  84CA               	bsf	4042,2,c	;volatile
 11706  00219C  D005               	goto	l1083
 11707  00219E                     l1081:
 11708                           
 11709                           ; BSR set to: 0
 11710  00219E  9476               	bcf	3958,2,c	;volatile
 11711                           
 11712                           ; BSR set to: 0
 11713  0021A0  C0CE  FF77         	movff	OpenPWM4@period,3959	;volatile
 11714                           
 11715                           ; BSR set to: 0
 11716  0021A4  8476               	bsf	3958,2,c	;volatile
 11717  0021A6  D000               	goto	l1083
 11718  0021A8                     l1083:
 11719                           
 11720                           ; BSR set to: 0
 11721  0021A8  0012               	return		;funcret
 11722  0021AA                     __end_of_OpenPWM4:
 11723                           	opt stack 0
 11724                           prodh	equ	0xFF4
 11725                           prodl	equ	0xFF3
 11726                           intcon	equ	0xFF2
 11727                           intcon2	equ	0xFF1
 11728                           intcon3	equ	0xFF0
 11729                           postinc0	equ	0xFEE
 11730                           wreg	equ	0xFE8
 11731                           postinc1	equ	0xFE6
 11732                           fsr1h	equ	0xFE2
 11733                           fsr1l	equ	0xFE1
 11734                           indf2	equ	0xFDF
 11735                           postinc2	equ	0xFDE
 11736                           postdec2	equ	0xFDD
 11737                           fsr2h	equ	0xFDA
 11738                           fsr2l	equ	0xFD9
 11739                           status	equ	0xFD8
 11740                           
 11741 ;; *************** function _ConfigureInterrupts *****************
 11742 ;; Defined at:
 11743 ;;		line 57 in file "FastBuggy17_Main_Code_TUNING.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;		None
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;		None               void
 11750 ;; Registers used:
 11751 ;;		None
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;Total ram usage:        0 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    7
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_main
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text95
 11772  0020EA                     __ptext95:
 11773                           	opt stack 0
 11774  0020EA                     _ConfigureInterrupts:
 11775                           	opt stack 23
 11776                           
 11777                           ;FastBuggy17_Main_Code_TUNING.c: 59: INTCONbits.GIE = 1;
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;incstack = 0
 11781  0020EA  8EF2               	bsf	intcon,7,c	;volatile
 11782                           
 11783                           ;FastBuggy17_Main_Code_TUNING.c: 60: INTCONbits.PEIE = 1;
 11784  0020EC  8CF2               	bsf	intcon,6,c	;volatile
 11785                           
 11786                           ;FastBuggy17_Main_Code_TUNING.c: 61: RCONbits.IPEN = 1;
 11787  0020EE  8ED0               	bsf	4048,7,c	;volatile
 11788                           
 11789                           ;FastBuggy17_Main_Code_TUNING.c: 83: INTCON3bits.INT3IE = 0;
 11790  0020F0  9AF0               	bcf	intcon3,5,c	;volatile
 11791                           
 11792                           ;FastBuggy17_Main_Code_TUNING.c: 84: INTCON3bits.INT3IF = 0;
 11793  0020F2  94F0               	bcf	intcon3,2,c	;volatile
 11794                           
 11795                           ;FastBuggy17_Main_Code_TUNING.c: 85: INTCON2bits.INTEDG3 = 1;
 11796  0020F4  86F1               	bsf	intcon2,3,c	;volatile
 11797                           
 11798                           ;FastBuggy17_Main_Code_TUNING.c: 86: INTCON2bits.INT3IP = 1;
 11799  0020F6  82F1               	bsf	intcon2,1,c	;volatile
 11800                           
 11801                           ;FastBuggy17_Main_Code_TUNING.c: 89: INTCONbits.TMR0IE = 1;
 11802  0020F8  8AF2               	bsf	intcon,5,c	;volatile
 11803                           
 11804                           ;FastBuggy17_Main_Code_TUNING.c: 90: INTCONbits.TMR0IF = 0;
 11805  0020FA  94F2               	bcf	intcon,2,c	;volatile
 11806                           
 11807                           ;FastBuggy17_Main_Code_TUNING.c: 91: INTCON2bits.TMR0IP = 1;
 11808  0020FC  84F1               	bsf	intcon2,2,c	;volatile
 11809                           
 11810                           ;FastBuggy17_Main_Code_TUNING.c: 100: PIE1bits.ADIE = 0;
 11811  0020FE  9C9D               	bcf	3997,6,c	;volatile
 11812                           
 11813                           ;FastBuggy17_Main_Code_TUNING.c: 101: PIR1bits.ADIF = 0;
 11814  002100  9C9E               	bcf	3998,6,c	;volatile
 11815                           
 11816                           ;FastBuggy17_Main_Code_TUNING.c: 102: IPR1bits.ADIP = 0;
 11817  002102  9C9F               	bcf	3999,6,c	;volatile
 11818                           
 11819                           ;FastBuggy17_Main_Code_TUNING.c: 105: PIE1bits.RC1IE = 0;
 11820  002104  9A9D               	bcf	3997,5,c	;volatile
 11821                           
 11822                           ;FastBuggy17_Main_Code_TUNING.c: 106: PIE1bits.TX1IE = 0;
 11823  002106  989D               	bcf	3997,4,c	;volatile
 11824                           
 11825                           ;FastBuggy17_Main_Code_TUNING.c: 107: PIR1bits.RC1IF = 0;
 11826  002108  9A9E               	bcf	3998,5,c	;volatile
 11827                           
 11828                           ;FastBuggy17_Main_Code_TUNING.c: 108: PIR1bits.TX1IF = 0;
 11829  00210A  989E               	bcf	3998,4,c	;volatile
 11830                           
 11831                           ;FastBuggy17_Main_Code_TUNING.c: 109: IPR1bits.RC1IP = 0;
 11832  00210C  9A9F               	bcf	3999,5,c	;volatile
 11833                           
 11834                           ;FastBuggy17_Main_Code_TUNING.c: 110: IPR1bits.TX1IP = 0;
 11835  00210E  989F               	bcf	3999,4,c	;volatile
 11836  002110  0012               	return		;funcret
 11837  002112                     __end_of_ConfigureInterrupts:
 11838                           	opt stack 0
 11839                           prodh	equ	0xFF4
 11840                           prodl	equ	0xFF3
 11841                           intcon	equ	0xFF2
 11842                           intcon2	equ	0xFF1
 11843                           intcon3	equ	0xFF0
 11844                           postinc0	equ	0xFEE
 11845                           wreg	equ	0xFE8
 11846                           postinc1	equ	0xFE6
 11847                           fsr1h	equ	0xFE2
 11848                           fsr1l	equ	0xFE1
 11849                           indf2	equ	0xFDF
 11850                           postinc2	equ	0xFDE
 11851                           postdec2	equ	0xFDD
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8
 11855                           
 11856 ;; *************** function _ConfigureBuggyIO *****************
 11857 ;; Defined at:
 11858 ;;		line 188 in file "FastBuggy17_Main_Code_TUNING.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;		None
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;		None               void
 11865 ;; Registers used:
 11866 ;;		wreg, status,2
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;Total ram usage:        0 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:    7
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text96
 11887  002284                     __ptext96:
 11888                           	opt stack 0
 11889  002284                     _ConfigureBuggyIO:
 11890                           	opt stack 23
 11891                           
 11892                           ;FastBuggy17_Main_Code_TUNING.c: 191: TRISA = 0xFF;
 11893                           
 11894                           ;incstack = 0
 11895  002284  6892               	setf	3986,c	;volatile
 11896                           
 11897                           ;FastBuggy17_Main_Code_TUNING.c: 194: TRISB = 0xFF;
 11898  002286  6893               	setf	3987,c	;volatile
 11899                           
 11900                           ;FastBuggy17_Main_Code_TUNING.c: 197: TRISC = 0x9F;
 11901  002288  0E9F               	movlw	159
 11902  00228A  6E94               	movwf	3988,c	;volatile
 11903                           
 11904                           ;FastBuggy17_Main_Code_TUNING.c: 200: TRISD = 0xE0;
 11905  00228C  0EE0               	movlw	224
 11906  00228E  6E95               	movwf	3989,c	;volatile
 11907                           
 11908                           ;FastBuggy17_Main_Code_TUNING.c: 203: TRISE = 0x00;
 11909  002290  0E00               	movlw	0
 11910  002292  6E96               	movwf	3990,c	;volatile
 11911                           
 11912                           ;FastBuggy17_Main_Code_TUNING.c: 206: TRISG = 0xE7;
 11913  002294  0EE7               	movlw	231
 11914  002296  6E98               	movwf	3992,c	;volatile
 11915                           
 11916                           ;FastBuggy17_Main_Code_TUNING.c: 209: TRISJ = 0x00;
 11917  002298  0E00               	movlw	0
 11918  00229A  6E9A               	movwf	3994,c	;volatile
 11919  00229C  0012               	return		;funcret
 11920  00229E                     __end_of_ConfigureBuggyIO:
 11921                           	opt stack 0
 11922                           prodh	equ	0xFF4
 11923                           prodl	equ	0xFF3
 11924                           intcon	equ	0xFF2
 11925                           intcon2	equ	0xFF1
 11926                           intcon3	equ	0xFF0
 11927                           postinc0	equ	0xFEE
 11928                           wreg	equ	0xFE8
 11929                           postinc1	equ	0xFE6
 11930                           fsr1h	equ	0xFE2
 11931                           fsr1l	equ	0xFE1
 11932                           indf2	equ	0xFDF
 11933                           postinc2	equ	0xFDE
 11934                           postdec2	equ	0xFDD
 11935                           fsr2h	equ	0xFDA
 11936                           fsr2l	equ	0xFD9
 11937                           status	equ	0xFD8
 11938                           
 11939 ;; *************** function _ConfigureADC *****************
 11940 ;; Defined at:
 11941 ;;		line 214 in file "FastBuggy17_Main_Code_TUNING.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;		None
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;		None               void
 11948 ;; Registers used:
 11949 ;;		wreg, status,2, status,0, cstack
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    8
 11962 ;; This function calls:
 11963 ;;		_OpenADC
 11964 ;; This function is called by:
 11965 ;;		_main
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text97
 11970  002336                     __ptext97:
 11971                           	opt stack 0
 11972  002336                     _ConfigureADC:
 11973                           	opt stack 22
 11974                           
 11975                           ;FastBuggy17_Main_Code_TUNING.c: 216: OpenADC(0b10011111
 11976                           ;FastBuggy17_Main_Code_TUNING.c: 217: & 0b11111111
 11977                           ;FastBuggy17_Main_Code_TUNING.c: 218: & 0b11110101,
 11978                           ;FastBuggy17_Main_Code_TUNING.c: 219: 0b10000111
 11979                           ;FastBuggy17_Main_Code_TUNING.c: 220: & 0b01111111
 11980                           ;FastBuggy17_Main_Code_TUNING.c: 221: & 0b11111110
 11981                           ;FastBuggy17_Main_Code_TUNING.c: 222: & 0b11111101,
 11982                           ;FastBuggy17_Main_Code_TUNING.c: 223: 9);
 11983                           
 11984                           ;incstack = 0
 11985  002336  0E04               	movlw	4
 11986  002338  0100               	movlb	0	; () banked
 11987  00233A  6FCE               	movwf	OpenADC@config2& (0+255),b
 11988  00233C  0E09               	movlw	9
 11989  00233E  0100               	movlb	0	; () banked
 11990  002340  6FCF               	movwf	OpenADC@portconfig& (0+255),b
 11991  002342  0E95               	movlw	149
 11992  002344  EC0B  F00B         	call	_OpenADC
 11993  002348  0012               	return		;funcret
 11994  00234A                     __end_of_ConfigureADC:
 11995                           	opt stack 0
 11996                           prodh	equ	0xFF4
 11997                           prodl	equ	0xFF3
 11998                           intcon	equ	0xFF2
 11999                           intcon2	equ	0xFF1
 12000                           intcon3	equ	0xFF0
 12001                           postinc0	equ	0xFEE
 12002                           wreg	equ	0xFE8
 12003                           postinc1	equ	0xFE6
 12004                           fsr1h	equ	0xFE2
 12005                           fsr1l	equ	0xFE1
 12006                           indf2	equ	0xFDF
 12007                           postinc2	equ	0xFDE
 12008                           postdec2	equ	0xFDD
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013 ;; *************** function _OpenADC *****************
 12014 ;; Defined at:
 12015 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  config          1    wreg     unsigned char 
 12018 ;;  config2         1   16[BANK0 ] unsigned char 
 12019 ;;  portconfig      1   17[BANK0 ] unsigned char 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  config          1   20[BANK0 ] unsigned char 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;		None               void
 12024 ;; Registers used:
 12025 ;;		wreg, status,2, status,0
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12033 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;Total ram usage:        5 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; Hardware stack levels required when called:    7
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_ConfigureADC
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text98
 12046  001616                     __ptext98:
 12047                           	opt stack 0
 12048  001616                     _OpenADC:
 12049                           	opt stack 22
 12050                           
 12051                           ;incstack = 0
 12052                           ;OpenADC@config stored from wreg
 12053  001616  0100               	movlb	0	; () banked
 12054  001618  6FD2               	movwf	OpenADC@config& (0+255),b
 12055                           
 12056                           ; BSR set to: 0
 12057  00161A  0E00               	movlw	0
 12058  00161C  6EC2               	movwf	4034,c	;volatile
 12059  00161E  0E00               	movlw	0
 12060  001620  6EC0               	movwf	4032,c	;volatile
 12061                           
 12062                           ; BSR set to: 0
 12063  001622  0100               	movlb	0	; () banked
 12064  001624  90D8               	bcf	status,0,c
 12065  001626  31CE               	rrcf	OpenADC@config2& (0+255),w,b
 12066  001628  0B3C               	andlw	60
 12067  00162A  6EC2               	movwf	4034,c	;volatile
 12068                           
 12069                           ; BSR set to: 0
 12070  00162C  C0CE  F0D0         	movff	OpenADC@config2,??_OpenADC
 12071  001630  0100               	movlb	0	; () banked
 12072  001632  3BD0               	swapf	??_OpenADC& (0+255),f,b
 12073  001634  0EF0               	movlw	240
 12074  001636  17D0               	andwf	??_OpenADC& (0+255),f,b
 12075  001638  0E30               	movlw	48
 12076  00163A  0100               	movlb	0	; () banked
 12077  00163C  17D0               	andwf	??_OpenADC& (0+255),f,b
 12078  00163E  0100               	movlb	0	; () banked
 12079  001640  51CF               	movf	OpenADC@portconfig& (0+255),w,b
 12080  001642  0B0F               	andlw	15
 12081  001644  0100               	movlb	0	; () banked
 12082  001646  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12083  001648  6EC1               	movwf	4033,c	;volatile
 12084                           
 12085                           ; BSR set to: 0
 12086  00164A  C0D2  F0D0         	movff	OpenADC@config,??_OpenADC
 12087  00164E  0100               	movlb	0	; () banked
 12088  001650  90D8               	bcf	status,0,c
 12089  001652  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12090  001654  0100               	movlb	0	; () banked
 12091  001656  90D8               	bcf	status,0,c
 12092  001658  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12093  00165A  0E38               	movlw	56
 12094  00165C  0100               	movlb	0	; () banked
 12095  00165E  17D0               	andwf	??_OpenADC& (0+255),f,b
 12096  001660  C0D2  F0D1         	movff	OpenADC@config,??_OpenADC+1
 12097  001664  0100               	movlb	0	; () banked
 12098  001666  3BD1               	swapf	(??_OpenADC+1)& (0+255),f,b
 12099  001668  0E0F               	movlw	15
 12100  00166A  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12101  00166C  0E07               	movlw	7
 12102  00166E  0100               	movlb	0	; () banked
 12103  001670  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12104  001672  0100               	movlb	0	; () banked
 12105  001674  51D2               	movf	OpenADC@config& (0+255),w,b
 12106  001676  0B80               	andlw	128
 12107  001678  0100               	movlb	0	; () banked
 12108  00167A  11D1               	iorwf	(??_OpenADC+1)& (0+255),w,b
 12109  00167C  0100               	movlb	0	; () banked
 12110  00167E  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12111  001680  6EC0               	movwf	4032,c	;volatile
 12112                           
 12113                           ; BSR set to: 0
 12114  001682  0100               	movlb	0	; () banked
 12115  001684  AFCE               	btfss	OpenADC@config2& (0+255),7,b
 12116  001686  D003               	goto	l1051
 12117                           
 12118                           ; BSR set to: 0
 12119  001688  9C9E               	bcf	3998,6,c	;volatile
 12120  00168A  8C9D               	bsf	3997,6,c	;volatile
 12121  00168C  8CF2               	bsf	intcon,6,c	;volatile
 12122  00168E                     l1051:
 12123                           
 12124                           ; BSR set to: 0
 12125  00168E  80C2               	bsf	4034,0,c	;volatile
 12126                           
 12127                           ; BSR set to: 0
 12128  001690  0012               	return		;funcret
 12129  001692                     __end_of_OpenADC:
 12130                           	opt stack 0
 12131                           prodh	equ	0xFF4
 12132                           prodl	equ	0xFF3
 12133                           intcon	equ	0xFF2
 12134                           intcon2	equ	0xFF1
 12135                           intcon3	equ	0xFF0
 12136                           postinc0	equ	0xFEE
 12137                           wreg	equ	0xFE8
 12138                           postinc1	equ	0xFE6
 12139                           fsr1h	equ	0xFE2
 12140                           fsr1l	equ	0xFE1
 12141                           indf2	equ	0xFDF
 12142                           postinc2	equ	0xFDE
 12143                           postdec2	equ	0xFDD
 12144                           fsr2h	equ	0xFDA
 12145                           fsr2l	equ	0xFD9
 12146                           status	equ	0xFD8
 12147                           
 12148 ;; *************** function _CalculateSensorSumDiscrete *****************
 12149 ;; Defined at:
 12150 ;;		line 356 in file "FastBuggy17_Main_Code_TUNING.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
 12153 ;;		 -> sensor_statuses(5), 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  index           1   19[BANK0 ] unsigned char 
 12156 ;;  sum             1   18[BANK0 ] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      unsigned char 
 12159 ;; Registers used:
 12160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;Total ram usage:        4 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    7
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_main
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           	psect	text99
 12181  001CDE                     __ptext99:
 12182                           	opt stack 0
 12183  001CDE                     _CalculateSensorSumDiscrete:
 12184                           	opt stack 23
 12185                           
 12186                           ;FastBuggy17_Main_Code_TUNING.c: 357: unsigned char index, sum = 0;
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;incstack = 0
 12190  001CDE  0E00               	movlw	0
 12191  001CE0  0100               	movlb	0	; () banked
 12192  001CE2  6FD0               	movwf	CalculateSensorSumDiscrete@sum& (0+255),b
 12193                           
 12194                           ;FastBuggy17_Main_Code_TUNING.c: 359: for(index = 0; index < 5; index++) {
 12195  001CE4  0E00               	movlw	0
 12196  001CE6  0100               	movlb	0	; () banked
 12197  001CE8  6FD1               	movwf	CalculateSensorSumDiscrete@index& (0+255),b
 12198  001CEA                     l6471:
 12199                           
 12200                           ; BSR set to: 0
 12201  001CEA  0E04               	movlw	4
 12202  001CEC  0100               	movlb	0	; () banked
 12203  001CEE  65D1               	cpfsgt	CalculateSensorSumDiscrete@index& (0+255),b
 12204  001CF0  D001               	goto	l6475
 12205                           
 12206                           ; BSR set to: 0
 12207  001CF2  D011               	goto	l6481
 12208  001CF4                     l6475:
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;FastBuggy17_Main_Code_TUNING.c: 361: sum += *(sensor_statuses + index);
 12212  001CF4  0100               	movlb	0	; () banked
 12213  001CF6  51D1               	movf	CalculateSensorSumDiscrete@index& (0+255),w,b
 12214  001CF8  0D01               	mullw	1
 12215  001CFA  50F3               	movf	prodl,w,c
 12216  001CFC  0100               	movlb	0	; () banked
 12217  001CFE  25CE               	addwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),w,b
 12218  001D00  6ED9               	movwf	fsr2l,c
 12219  001D02  50F4               	movf	prodh,w,c
 12220  001D04  0100               	movlb	0	; () banked
 12221  001D06  21CF               	addwfc	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),w,b
 12222  001D08  6EDA               	movwf	fsr2h,c
 12223  001D0A  50DF               	movf	indf2,w,c
 12224  001D0C  0100               	movlb	0	; () banked
 12225  001D0E  27D0               	addwf	CalculateSensorSumDiscrete@sum& (0+255),f,b
 12226                           
 12227                           ; BSR set to: 0
 12228  001D10  0100               	movlb	0	; () banked
 12229  001D12  2BD1               	incf	CalculateSensorSumDiscrete@index& (0+255),f,b
 12230  001D14  D7EA               	goto	l6471
 12231  001D16                     l6481:
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;FastBuggy17_Main_Code_TUNING.c: 363: }
 12235                           ;FastBuggy17_Main_Code_TUNING.c: 365: return(sum);
 12236  001D16  0100               	movlb	0	; () banked
 12237  001D18  51D0               	movf	CalculateSensorSumDiscrete@sum& (0+255),w,b
 12238  001D1A  D000               	goto	l826
 12239  001D1C                     l826:
 12240                           
 12241                           ; BSR set to: 0
 12242  001D1C  0012               	return		;funcret
 12243  001D1E                     __end_of_CalculateSensorSumDiscrete:
 12244                           	opt stack 0
 12245                           prodh	equ	0xFF4
 12246                           prodl	equ	0xFF3
 12247                           intcon	equ	0xFF2
 12248                           intcon2	equ	0xFF1
 12249                           intcon3	equ	0xFF0
 12250                           postinc0	equ	0xFEE
 12251                           wreg	equ	0xFE8
 12252                           postinc1	equ	0xFE6
 12253                           fsr1h	equ	0xFE2
 12254                           fsr1l	equ	0xFE1
 12255                           indf2	equ	0xFDF
 12256                           postinc2	equ	0xFDE
 12257                           postdec2	equ	0xFDD
 12258                           fsr2h	equ	0xFDA
 12259                           fsr2l	equ	0xFD9
 12260                           status	equ	0xFD8
 12261                           
 12262 ;; *************** function _BusyDistanceAcq *****************
 12263 ;; Defined at:
 12264 ;;		line 78 in file "Ultrasound.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;		None
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;		None
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  1    wreg      unsigned char 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;Total ram usage:        0 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    7
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_main
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           	psect	text100
 12293  0023F6                     __ptext100:
 12294                           	opt stack 0
 12295  0023F6                     _BusyDistanceAcq:
 12296                           	opt stack 23
 12297                           
 12298                           ;Ultrasound.c: 80: return (!echo_acq_done);
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;incstack = 0
 12302  0023F6  501C               	movf	_echo_acq_done,w,c
 12303  0023F8  A4D8               	btfss	status,2,c
 12304  0023FA  D002               	goto	u5330
 12305  0023FC  0E01               	movlw	1
 12306  0023FE  D002               	goto	l36
 12307  002400                     u5330:
 12308  002400  0E00               	movlw	0
 12309  002402  D000               	goto	l36
 12310  002404                     l36:
 12311  002404  0012               	return		;funcret
 12312  002406                     __end_of_BusyDistanceAcq:
 12313                           	opt stack 0
 12314                           prodh	equ	0xFF4
 12315                           prodl	equ	0xFF3
 12316                           intcon	equ	0xFF2
 12317                           intcon2	equ	0xFF1
 12318                           intcon3	equ	0xFF0
 12319                           postinc0	equ	0xFEE
 12320                           wreg	equ	0xFE8
 12321                           postinc1	equ	0xFE6
 12322                           fsr1h	equ	0xFE2
 12323                           fsr1l	equ	0xFE1
 12324                           indf2	equ	0xFDF
 12325                           postinc2	equ	0xFDE
 12326                           postdec2	equ	0xFDD
 12327                           fsr2h	equ	0xFDA
 12328                           fsr2l	equ	0xFD9
 12329                           status	equ	0xFD8
 12330                           
 12331 ;; *************** function _isrLP *****************
 12332 ;; Defined at:
 12333 ;;		line 662 in file "FastBuggy17_Main_Code_TUNING.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;		None
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;		None               void
 12340 ;; Registers used:
 12341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;Total ram usage:       17 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    6
 12354 ;; This function calls:
 12355 ;;		_WirelessTx_ISR
 12356 ;;		i1_ConvertADC
 12357 ;;		i1_ReadADC
 12358 ;;		i1_SetADCChannel
 12359 ;; This function is called by:
 12360 ;;		Interrupt level 1
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	intcodelo
 12365  000018                     __pintcodelo:
 12366                           	opt stack 0
 12367  000018                     _isrLP:
 12368                           	opt stack 18
 12369                           
 12370                           ;incstack = 0
 12371  000018  CFD8 F033          	movff	status,??_isrLP
 12372  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 12373  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 12374  000024  CFFA F036          	movff	pclath,??_isrLP+3
 12375  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 12376  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 12377  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 12378  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 12379  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 12380  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 12381  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 12382  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 12383  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 12384  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 12385  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 12386  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 12387  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 12388                           
 12389                           ;FastBuggy17_Main_Code_TUNING.c: 665: if (PIR1bits.ADIF == 1) {
 12390  00005C  AC9E               	btfss	3998,6,c	;volatile
 12391  00005E  D01D               	goto	i1l952
 12392                           
 12393                           ;FastBuggy17_Main_Code_TUNING.c: 666: PIR1bits.ADIF = 0;
 12394  000060  9C9E               	bcf	3998,6,c	;volatile
 12395                           
 12396                           ;FastBuggy17_Main_Code_TUNING.c: 667: if (sensor_acq_index < 5) {
 12397  000062  0E05               	movlw	5
 12398  000064  6023               	cpfslt	_sensor_acq_index,c	;volatile
 12399  000066  D015               	goto	i1l5111
 12400                           
 12401                           ;FastBuggy17_Main_Code_TUNING.c: 668: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 12402  000068  EC03  F012         	call	i1_ReadADC	;wreg free
 12403  00006C  5023               	movf	_sensor_acq_index,w,c	;volatile
 12404  00006E  0D02               	mullw	2
 12405  000070  0EAE               	movlw	low _sensor_readings_raw
 12406  000072  24F3               	addwf	prodl,w,c
 12407  000074  6ED9               	movwf	fsr2l,c
 12408  000076  0E00               	movlw	high _sensor_readings_raw
 12409  000078  20F4               	addwfc	prodh,w,c
 12410  00007A  6EDA               	movwf	fsr2h,c
 12411  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 12412  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 12413                           
 12414                           ;FastBuggy17_Main_Code_TUNING.c: 669: sensor_acq_index++;
 12415  000084  2A23               	incf	_sensor_acq_index,f,c	;volatile
 12416                           
 12417                           ;FastBuggy17_Main_Code_TUNING.c: 670: SetADCChannel(sensor_acq_index);
 12418  000086  5023               	movf	_sensor_acq_index,w,c	;volatile
 12419  000088  ECDE  F006         	call	i1_SetADCChannel
 12420                           
 12421                           ;FastBuggy17_Main_Code_TUNING.c: 671: ConvertADC();
 12422  00008C  EC75  F012         	call	i1_ConvertADC	;wreg free
 12423                           
 12424                           ;FastBuggy17_Main_Code_TUNING.c: 672: } else {
 12425  000090  D00A               	goto	i1l957
 12426  000092                     i1l5111:
 12427                           
 12428                           ;FastBuggy17_Main_Code_TUNING.c: 673: sensor_acq_done = 1;
 12429  000092  0E01               	movlw	1
 12430  000094  6E22               	movwf	_sensor_acq_done,c	;volatile
 12431                           
 12432                           ;FastBuggy17_Main_Code_TUNING.c: 674: PIE1bits.ADIE = 0;
 12433  000096  9C9D               	bcf	3997,6,c	;volatile
 12434                           
 12435                           ;FastBuggy17_Main_Code_TUNING.c: 675: }
 12436                           ;FastBuggy17_Main_Code_TUNING.c: 676: }
 12437  000098  D006               	goto	i1l957
 12438  00009A                     i1l952:
 12439                           
 12440                           ;FastBuggy17_Main_Code_TUNING.c: 678: else if(PIR1bits.TX1IF == 1) {
 12441  00009A  A89E               	btfss	3998,4,c	;volatile
 12442  00009C  D004               	goto	i1l957
 12443                           
 12444                           ;FastBuggy17_Main_Code_TUNING.c: 679: PIR1bits.TX1IF = 0;
 12445  00009E  989E               	bcf	3998,4,c	;volatile
 12446                           
 12447                           ;FastBuggy17_Main_Code_TUNING.c: 680: WirelessTx_ISR();
 12448  0000A0  ECD5  F010         	call	_WirelessTx_ISR	;wreg free
 12449  0000A4  D000               	goto	i1l957
 12450  0000A6                     i1l957:
 12451  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 12452  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 12453  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 12454  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 12455  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 12456  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 12457  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 12458  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 12459  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 12460  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 12461  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 12462  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 12463  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 12464  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 12465  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 12466  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 12467  0000E6  C033  FFD8         	movff	??_isrLP,status
 12468  0000EA  0010               	retfie	
 12469  0000EC                     __end_of_isrLP:
 12470                           	opt stack 0
 12471                           pclatu	equ	0xFFB
 12472                           pclath	equ	0xFFA
 12473                           tblptru	equ	0xFF8
 12474                           tblptrh	equ	0xFF7
 12475                           tblptrl	equ	0xFF6
 12476                           tablat	equ	0xFF5
 12477                           prodh	equ	0xFF4
 12478                           prodl	equ	0xFF3
 12479                           intcon	equ	0xFF2
 12480                           intcon2	equ	0xFF1
 12481                           intcon3	equ	0xFF0
 12482                           postinc0	equ	0xFEE
 12483                           fsr0h	equ	0xFEA
 12484                           fsr0l	equ	0xFE9
 12485                           wreg	equ	0xFE8
 12486                           postinc1	equ	0xFE6
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           bsr	equ	0xFE0
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function i1_SetADCChannel *****************
 12498 ;; Defined at:
 12499 ;;		line 228 in file "FastBuggy17_Main_Code_TUNING.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  channel         1    wreg     unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  channel         1    2[COMRAM] unsigned char 
 12504 ;; Return value:  Size  Location     Type
 12505 ;;		None               void
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;Total ram usage:        1 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    4
 12520 ;; This function calls:
 12521 ;;		i1_SetChanADC
 12522 ;; This function is called by:
 12523 ;;		_isrLP
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text102
 12528  000DBC                     __ptext102:
 12529                           	opt stack 0
 12530  000DBC                     i1_SetADCChannel:
 12531                           	opt stack 19
 12532                           
 12533                           ;incstack = 0
 12534                           ;i1SetADCChannel@channel stored from wreg
 12535  000DBC  6E2D               	movwf	i1SetADCChannel@channel,c
 12536                           
 12537                           ;FastBuggy17_Main_Code_TUNING.c: 230: switch (channel) {
 12538  000DBE  D040               	goto	i1l4911
 12539  000DC0                     i1l4877:
 12540                           
 12541                           ;FastBuggy17_Main_Code_TUNING.c: 232: SetChanADC(0b10000111);
 12542  000DC0  0E87               	movlw	135
 12543  000DC2  EC71  F011         	call	i1_SetChanADC
 12544                           
 12545                           ;FastBuggy17_Main_Code_TUNING.c: 233: break;
 12546  000DC6  D06E               	goto	i1l793
 12547  000DC8                     i1l4879:
 12548                           
 12549                           ;FastBuggy17_Main_Code_TUNING.c: 235: SetChanADC(0b10001111);
 12550  000DC8  0E8F               	movlw	143
 12551  000DCA  EC71  F011         	call	i1_SetChanADC
 12552                           
 12553                           ;FastBuggy17_Main_Code_TUNING.c: 236: break;
 12554  000DCE  D06A               	goto	i1l793
 12555  000DD0                     i1l4881:
 12556                           
 12557                           ;FastBuggy17_Main_Code_TUNING.c: 238: SetChanADC(0b10010111);
 12558  000DD0  0E97               	movlw	151
 12559  000DD2  EC71  F011         	call	i1_SetChanADC
 12560                           
 12561                           ;FastBuggy17_Main_Code_TUNING.c: 239: break;
 12562  000DD6  D066               	goto	i1l793
 12563  000DD8                     i1l4883:
 12564                           
 12565                           ;FastBuggy17_Main_Code_TUNING.c: 241: SetChanADC(0b10011111);
 12566  000DD8  0E9F               	movlw	159
 12567  000DDA  EC71  F011         	call	i1_SetChanADC
 12568                           
 12569                           ;FastBuggy17_Main_Code_TUNING.c: 242: break;
 12570  000DDE  D062               	goto	i1l793
 12571  000DE0                     i1l4885:
 12572                           
 12573                           ;FastBuggy17_Main_Code_TUNING.c: 244: SetChanADC(0b10100111);
 12574  000DE0  0EA7               	movlw	167
 12575  000DE2  EC71  F011         	call	i1_SetChanADC
 12576                           
 12577                           ;FastBuggy17_Main_Code_TUNING.c: 245: break;
 12578  000DE6  D05E               	goto	i1l793
 12579  000DE8                     i1l4887:
 12580                           
 12581                           ;FastBuggy17_Main_Code_TUNING.c: 247: SetChanADC(0b10101111);
 12582  000DE8  0EAF               	movlw	175
 12583  000DEA  EC71  F011         	call	i1_SetChanADC
 12584                           
 12585                           ;FastBuggy17_Main_Code_TUNING.c: 248: break;
 12586  000DEE  D05A               	goto	i1l793
 12587  000DF0                     i1l4889:
 12588                           
 12589                           ;FastBuggy17_Main_Code_TUNING.c: 250: SetChanADC(0b10110111);
 12590  000DF0  0EB7               	movlw	183
 12591  000DF2  EC71  F011         	call	i1_SetChanADC
 12592                           
 12593                           ;FastBuggy17_Main_Code_TUNING.c: 251: break;
 12594  000DF6  D056               	goto	i1l793
 12595  000DF8                     i1l4891:
 12596                           
 12597                           ;FastBuggy17_Main_Code_TUNING.c: 253: SetChanADC(0b10111111);
 12598  000DF8  0EBF               	movlw	191
 12599  000DFA  EC71  F011         	call	i1_SetChanADC
 12600                           
 12601                           ;FastBuggy17_Main_Code_TUNING.c: 254: break;
 12602  000DFE  D052               	goto	i1l793
 12603  000E00                     i1l4893:
 12604                           
 12605                           ;FastBuggy17_Main_Code_TUNING.c: 256: SetChanADC(0b11000111);
 12606  000E00  0EC7               	movlw	199
 12607  000E02  EC71  F011         	call	i1_SetChanADC
 12608                           
 12609                           ;FastBuggy17_Main_Code_TUNING.c: 257: break;
 12610  000E06  D04E               	goto	i1l793
 12611  000E08                     i1l4895:
 12612                           
 12613                           ;FastBuggy17_Main_Code_TUNING.c: 259: SetChanADC(0b11001111);
 12614  000E08  0ECF               	movlw	207
 12615  000E0A  EC71  F011         	call	i1_SetChanADC
 12616                           
 12617                           ;FastBuggy17_Main_Code_TUNING.c: 260: break;
 12618  000E0E  D04A               	goto	i1l793
 12619  000E10                     i1l4897:
 12620                           
 12621                           ;FastBuggy17_Main_Code_TUNING.c: 262: SetChanADC(0b11010111);
 12622  000E10  0ED7               	movlw	215
 12623  000E12  EC71  F011         	call	i1_SetChanADC
 12624                           
 12625                           ;FastBuggy17_Main_Code_TUNING.c: 263: break;
 12626  000E16  D046               	goto	i1l793
 12627  000E18                     i1l4899:
 12628                           
 12629                           ;FastBuggy17_Main_Code_TUNING.c: 265: SetChanADC(0b11011111);
 12630  000E18  0EDF               	movlw	223
 12631  000E1A  EC71  F011         	call	i1_SetChanADC
 12632                           
 12633                           ;FastBuggy17_Main_Code_TUNING.c: 266: break;
 12634  000E1E  D042               	goto	i1l793
 12635  000E20                     i1l4901:
 12636                           
 12637                           ;FastBuggy17_Main_Code_TUNING.c: 268: SetChanADC(0b11100111);
 12638  000E20  0EE7               	movlw	231
 12639  000E22  EC71  F011         	call	i1_SetChanADC
 12640                           
 12641                           ;FastBuggy17_Main_Code_TUNING.c: 269: break;
 12642  000E26  D03E               	goto	i1l793
 12643  000E28                     i1l4903:
 12644                           
 12645                           ;FastBuggy17_Main_Code_TUNING.c: 271: SetChanADC(0b11101111);
 12646  000E28  0EEF               	movlw	239
 12647  000E2A  EC71  F011         	call	i1_SetChanADC
 12648                           
 12649                           ;FastBuggy17_Main_Code_TUNING.c: 272: break;
 12650  000E2E  D03A               	goto	i1l793
 12651  000E30                     i1l4905:
 12652                           
 12653                           ;FastBuggy17_Main_Code_TUNING.c: 274: SetChanADC(0b11110111);
 12654  000E30  0EF7               	movlw	247
 12655  000E32  EC71  F011         	call	i1_SetChanADC
 12656                           
 12657                           ;FastBuggy17_Main_Code_TUNING.c: 275: break;
 12658  000E36  D036               	goto	i1l793
 12659  000E38                     i1l4907:
 12660                           
 12661                           ;FastBuggy17_Main_Code_TUNING.c: 277: SetChanADC(0b11111111);
 12662  000E38  0EFF               	movlw	255
 12663  000E3A  EC71  F011         	call	i1_SetChanADC
 12664                           
 12665                           ;FastBuggy17_Main_Code_TUNING.c: 281: }
 12666                           
 12667                           ;FastBuggy17_Main_Code_TUNING.c: 280: break;
 12668                           
 12669                           ;FastBuggy17_Main_Code_TUNING.c: 279: default:
 12670                           
 12671                           ;FastBuggy17_Main_Code_TUNING.c: 278: break;
 12672  000E3E  D032               	goto	i1l793
 12673  000E40                     i1l4911:
 12674  000E40  502D               	movf	i1SetADCChannel@channel,w,c
 12675                           
 12676                           ; Switch size 1, requested type "space"
 12677                           ; Number of cases is 16, Range of values is 0 to 15
 12678                           ; switch strategies available:
 12679                           ; Name         Instructions Cycles
 12680                           ; simple_byte           49    25 (average)
 12681                           ;	Chosen strategy is simple_byte
 12682  000E42  0A00               	xorlw	0	; case 0
 12683  000E44  B4D8               	btfsc	status,2,c
 12684  000E46  D7BC               	goto	i1l4877
 12685  000E48  0A01               	xorlw	1	; case 1
 12686  000E4A  B4D8               	btfsc	status,2,c
 12687  000E4C  D7BD               	goto	i1l4879
 12688  000E4E  0A03               	xorlw	3	; case 2
 12689  000E50  B4D8               	btfsc	status,2,c
 12690  000E52  D7BE               	goto	i1l4881
 12691  000E54  0A01               	xorlw	1	; case 3
 12692  000E56  B4D8               	btfsc	status,2,c
 12693  000E58  D7BF               	goto	i1l4883
 12694  000E5A  0A07               	xorlw	7	; case 4
 12695  000E5C  B4D8               	btfsc	status,2,c
 12696  000E5E  D7C0               	goto	i1l4885
 12697  000E60  0A01               	xorlw	1	; case 5
 12698  000E62  B4D8               	btfsc	status,2,c
 12699  000E64  D7C1               	goto	i1l4887
 12700  000E66  0A03               	xorlw	3	; case 6
 12701  000E68  B4D8               	btfsc	status,2,c
 12702  000E6A  D7C2               	goto	i1l4889
 12703  000E6C  0A01               	xorlw	1	; case 7
 12704  000E6E  B4D8               	btfsc	status,2,c
 12705  000E70  D7C3               	goto	i1l4891
 12706  000E72  0A0F               	xorlw	15	; case 8
 12707  000E74  B4D8               	btfsc	status,2,c
 12708  000E76  D7C4               	goto	i1l4893
 12709  000E78  0A01               	xorlw	1	; case 9
 12710  000E7A  B4D8               	btfsc	status,2,c
 12711  000E7C  D7C5               	goto	i1l4895
 12712  000E7E  0A03               	xorlw	3	; case 10
 12713  000E80  B4D8               	btfsc	status,2,c
 12714  000E82  D7C6               	goto	i1l4897
 12715  000E84  0A01               	xorlw	1	; case 11
 12716  000E86  B4D8               	btfsc	status,2,c
 12717  000E88  D7C7               	goto	i1l4899
 12718  000E8A  0A07               	xorlw	7	; case 12
 12719  000E8C  B4D8               	btfsc	status,2,c
 12720  000E8E  D7C8               	goto	i1l4901
 12721  000E90  0A01               	xorlw	1	; case 13
 12722  000E92  B4D8               	btfsc	status,2,c
 12723  000E94  D7C9               	goto	i1l4903
 12724  000E96  0A03               	xorlw	3	; case 14
 12725  000E98  B4D8               	btfsc	status,2,c
 12726  000E9A  D7CA               	goto	i1l4905
 12727  000E9C  0A01               	xorlw	1	; case 15
 12728  000E9E  B4D8               	btfsc	status,2,c
 12729  000EA0  D7CB               	goto	i1l4907
 12730  000EA2  D000               	goto	i1l793
 12731  000EA4                     i1l793:
 12732  000EA4  0012               	return		;funcret
 12733  000EA6                     __end_ofi1_SetADCChannel:
 12734                           	opt stack 0
 12735                           pclatu	equ	0xFFB
 12736                           pclath	equ	0xFFA
 12737                           tblptru	equ	0xFF8
 12738                           tblptrh	equ	0xFF7
 12739                           tblptrl	equ	0xFF6
 12740                           tablat	equ	0xFF5
 12741                           prodh	equ	0xFF4
 12742                           prodl	equ	0xFF3
 12743                           intcon	equ	0xFF2
 12744                           intcon2	equ	0xFF1
 12745                           intcon3	equ	0xFF0
 12746                           postinc0	equ	0xFEE
 12747                           fsr0h	equ	0xFEA
 12748                           fsr0l	equ	0xFE9
 12749                           wreg	equ	0xFE8
 12750                           postinc1	equ	0xFE6
 12751                           fsr1h	equ	0xFE2
 12752                           fsr1l	equ	0xFE1
 12753                           bsr	equ	0xFE0
 12754                           indf2	equ	0xFDF
 12755                           postinc2	equ	0xFDE
 12756                           postdec2	equ	0xFDD
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761 ;; *************** function i1_SetChanADC *****************
 12762 ;; Defined at:
 12763 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  channel         1    wreg     unsigned char 
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;  channel         1    1[COMRAM] unsigned char 
 12768 ;; Return value:  Size  Location     Type
 12769 ;;		None               void
 12770 ;; Registers used:
 12771 ;;		wreg, status,2, status,0
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/0
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12781 ;;Total ram usage:        2 bytes
 12782 ;; Hardware stack levels used:    1
 12783 ;; Hardware stack levels required when called:    3
 12784 ;; This function calls:
 12785 ;;		Nothing
 12786 ;; This function is called by:
 12787 ;;		i1_SetADCChannel
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791                           	psect	text103
 12792  0022E2                     __ptext103:
 12793                           	opt stack 0
 12794  0022E2                     i1_SetChanADC:
 12795                           	opt stack 19
 12796                           
 12797                           ;incstack = 0
 12798                           ;i1SetChanADC@channel stored from wreg
 12799  0022E2  6E2C               	movwf	i1SetChanADC@channel,c
 12800  0022E4  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 12801  0022E8  0EC3               	movlw	195
 12802  0022EA  162B               	andwf	??i1_SetChanADC,f,c
 12803  0022EC  90D8               	bcf	status,0,c
 12804  0022EE  302C               	rrcf	i1SetChanADC@channel,w,c
 12805  0022F0  0B3C               	andlw	60
 12806  0022F2  102B               	iorwf	??i1_SetChanADC,w,c
 12807  0022F4  6EC2               	movwf	4034,c	;volatile
 12808  0022F6  0012               	return		;funcret
 12809  0022F8                     __end_ofi1_SetChanADC:
 12810                           	opt stack 0
 12811                           pclatu	equ	0xFFB
 12812                           pclath	equ	0xFFA
 12813                           tblptru	equ	0xFF8
 12814                           tblptrh	equ	0xFF7
 12815                           tblptrl	equ	0xFF6
 12816                           tablat	equ	0xFF5
 12817                           prodh	equ	0xFF4
 12818                           prodl	equ	0xFF3
 12819                           intcon	equ	0xFF2
 12820                           intcon2	equ	0xFF1
 12821                           intcon3	equ	0xFF0
 12822                           postinc0	equ	0xFEE
 12823                           fsr0h	equ	0xFEA
 12824                           fsr0l	equ	0xFE9
 12825                           wreg	equ	0xFE8
 12826                           postinc1	equ	0xFE6
 12827                           fsr1h	equ	0xFE2
 12828                           fsr1l	equ	0xFE1
 12829                           bsr	equ	0xFE0
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           postdec2	equ	0xFDD
 12833                           fsr2h	equ	0xFDA
 12834                           fsr2l	equ	0xFD9
 12835                           status	equ	0xFD8
 12836                           
 12837 ;; *************** function i1_ReadADC *****************
 12838 ;; Defined at:
 12839 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;		None
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  2    0[COMRAM] int 
 12846 ;; Registers used:
 12847 ;;		wreg, status,2
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;Total ram usage:        4 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:    3
 12860 ;; This function calls:
 12861 ;;		Nothing
 12862 ;; This function is called by:
 12863 ;;		_isrLP
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           	psect	text104
 12868  002406                     __ptext104:
 12869                           	opt stack 0
 12870  002406                     i1_ReadADC:
 12871                           	opt stack 20
 12872                           
 12873                           ;incstack = 0
 12874  002406  50C4               	movf	4036,w,c	;volatile
 12875  002408  6E2D               	movwf	??i1_ReadADC& (0+255),c
 12876  00240A  50C3               	movf	4035,w,c	;volatile
 12877  00240C  6E2B               	movwf	?i1_ReadADC,c
 12878  00240E  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 12879  002412  D000               	goto	i1l1059
 12880  002414                     i1l1059:
 12881  002414  0012               	return		;funcret
 12882  002416                     __end_ofi1_ReadADC:
 12883                           	opt stack 0
 12884                           pclatu	equ	0xFFB
 12885                           pclath	equ	0xFFA
 12886                           tblptru	equ	0xFF8
 12887                           tblptrh	equ	0xFF7
 12888                           tblptrl	equ	0xFF6
 12889                           tablat	equ	0xFF5
 12890                           prodh	equ	0xFF4
 12891                           prodl	equ	0xFF3
 12892                           intcon	equ	0xFF2
 12893                           intcon2	equ	0xFF1
 12894                           intcon3	equ	0xFF0
 12895                           postinc0	equ	0xFEE
 12896                           fsr0h	equ	0xFEA
 12897                           fsr0l	equ	0xFE9
 12898                           wreg	equ	0xFE8
 12899                           postinc1	equ	0xFE6
 12900                           fsr1h	equ	0xFE2
 12901                           fsr1l	equ	0xFE1
 12902                           bsr	equ	0xFE0
 12903                           indf2	equ	0xFDF
 12904                           postinc2	equ	0xFDE
 12905                           postdec2	equ	0xFDD
 12906                           fsr2h	equ	0xFDA
 12907                           fsr2l	equ	0xFD9
 12908                           status	equ	0xFD8
 12909                           
 12910 ;; *************** function i1_ConvertADC *****************
 12911 ;; Defined at:
 12912 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;		None
 12915 ;; Auto vars:     Size  Location     Type
 12916 ;;		None
 12917 ;; Return value:  Size  Location     Type
 12918 ;;		None               void
 12919 ;; Registers used:
 12920 ;;		None
 12921 ;; Tracked objects:
 12922 ;;		On entry : 0/0
 12923 ;;		On exit  : 0/0
 12924 ;;		Unchanged: 0/0
 12925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12930 ;;Total ram usage:        0 bytes
 12931 ;; Hardware stack levels used:    1
 12932 ;; Hardware stack levels required when called:    3
 12933 ;; This function calls:
 12934 ;;		Nothing
 12935 ;; This function is called by:
 12936 ;;		_isrLP
 12937 ;; This function uses a non-reentrant model
 12938 ;;
 12939                           
 12940                           	psect	text105
 12941  0024EA                     __ptext105:
 12942                           	opt stack 0
 12943  0024EA                     i1_ConvertADC:
 12944                           	opt stack 20
 12945                           
 12946                           ;incstack = 0
 12947  0024EA  82C2               	bsf	4034,1,c	;volatile
 12948  0024EC  0012               	return		;funcret
 12949  0024EE                     __end_ofi1_ConvertADC:
 12950                           	opt stack 0
 12951                           pclatu	equ	0xFFB
 12952                           pclath	equ	0xFFA
 12953                           tblptru	equ	0xFF8
 12954                           tblptrh	equ	0xFF7
 12955                           tblptrl	equ	0xFF6
 12956                           tablat	equ	0xFF5
 12957                           prodh	equ	0xFF4
 12958                           prodl	equ	0xFF3
 12959                           intcon	equ	0xFF2
 12960                           intcon2	equ	0xFF1
 12961                           intcon3	equ	0xFF0
 12962                           postinc0	equ	0xFEE
 12963                           fsr0h	equ	0xFEA
 12964                           fsr0l	equ	0xFE9
 12965                           wreg	equ	0xFE8
 12966                           postinc1	equ	0xFE6
 12967                           fsr1h	equ	0xFE2
 12968                           fsr1l	equ	0xFE1
 12969                           bsr	equ	0xFE0
 12970                           indf2	equ	0xFDF
 12971                           postinc2	equ	0xFDE
 12972                           postdec2	equ	0xFDD
 12973                           fsr2h	equ	0xFDA
 12974                           fsr2l	equ	0xFD9
 12975                           status	equ	0xFD8
 12976                           
 12977 ;; *************** function _WirelessTx_ISR *****************
 12978 ;; Defined at:
 12979 ;;		line 61 in file "Wireless.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;		None               void
 12986 ;; Registers used:
 12987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    5
 13000 ;; This function calls:
 13001 ;;		_GetCharTxBuf
 13002 ;;		_Write1USART
 13003 ;; This function is called by:
 13004 ;;		_isrLP
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           	psect	text106
 13009  0021AA                     __ptext106:
 13010                           	opt stack 0
 13011  0021AA                     _WirelessTx_ISR:
 13012                           	opt stack 18
 13013                           
 13014                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 13015                           
 13016                           ;incstack = 0
 13017  0021AA  EC3B  F00F         	call	_GetCharTxBuf	;wreg free
 13018  0021AE  6E19               	movwf	_TxCharacter,c	;volatile
 13019                           
 13020                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 13021  0021B0  0E0A               	movlw	10
 13022  0021B2  1819               	xorwf	_TxCharacter,w,c	;volatile
 13023  0021B4  A4D8               	btfss	status,2,c
 13024  0021B6  D007               	goto	i1l4591
 13025                           
 13026                           ;Wireless.c: 64: Write1USART(TxCharacter);
 13027  0021B8  5019               	movf	_TxCharacter,w,c	;volatile
 13028  0021BA  EC7C  F011         	call	_Write1USART
 13029                           
 13030                           ;Wireless.c: 65: Tx_complete = 1;
 13031  0021BE  0E01               	movlw	1
 13032  0021C0  6E1A               	movwf	_Tx_complete,c
 13033                           
 13034                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 13035  0021C2  989D               	bcf	3997,4,c	;volatile
 13036                           
 13037                           ;Wireless.c: 67: }
 13038  0021C4  D004               	goto	i1l303
 13039  0021C6                     i1l4591:
 13040                           
 13041                           ;Wireless.c: 68: else {
 13042                           ;Wireless.c: 69: Write1USART(TxCharacter);
 13043  0021C6  5019               	movf	_TxCharacter,w,c	;volatile
 13044  0021C8  EC7C  F011         	call	_Write1USART
 13045  0021CC  D000               	goto	i1l303
 13046  0021CE                     i1l303:
 13047  0021CE  0012               	return		;funcret
 13048  0021D0                     __end_of_WirelessTx_ISR:
 13049                           	opt stack 0
 13050                           pclatu	equ	0xFFB
 13051                           pclath	equ	0xFFA
 13052                           tblptru	equ	0xFF8
 13053                           tblptrh	equ	0xFF7
 13054                           tblptrl	equ	0xFF6
 13055                           tablat	equ	0xFF5
 13056                           prodh	equ	0xFF4
 13057                           prodl	equ	0xFF3
 13058                           intcon	equ	0xFF2
 13059                           intcon2	equ	0xFF1
 13060                           intcon3	equ	0xFF0
 13061                           postinc0	equ	0xFEE
 13062                           fsr0h	equ	0xFEA
 13063                           fsr0l	equ	0xFE9
 13064                           wreg	equ	0xFE8
 13065                           postinc1	equ	0xFE6
 13066                           fsr1h	equ	0xFE2
 13067                           fsr1l	equ	0xFE1
 13068                           bsr	equ	0xFE0
 13069                           indf2	equ	0xFDF
 13070                           postinc2	equ	0xFDE
 13071                           postdec2	equ	0xFDD
 13072                           fsr2h	equ	0xFDA
 13073                           fsr2l	equ	0xFD9
 13074                           status	equ	0xFD8
 13075                           
 13076 ;; *************** function _Write1USART *****************
 13077 ;; Defined at:
 13078 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;  data            1    wreg     unsigned char 
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;  data            1    0[COMRAM] unsigned char 
 13083 ;; Return value:  Size  Location     Type
 13084 ;;		None               void
 13085 ;; Registers used:
 13086 ;;		wreg
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;Total ram usage:        1 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:    3
 13099 ;; This function calls:
 13100 ;;		Nothing
 13101 ;; This function is called by:
 13102 ;;		_WirelessTx_ISR
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           	psect	text107
 13107  0022F8                     __ptext107:
 13108                           	opt stack 0
 13109  0022F8                     _Write1USART:
 13110                           	opt stack 19
 13111                           
 13112                           ;incstack = 0
 13113                           ;Write1USART@data stored from wreg
 13114  0022F8  6E2B               	movwf	Write1USART@data,c
 13115  0022FA  ACAC               	btfss	4012,6,c	;volatile
 13116  0022FC  D005               	goto	i1l4201
 13117  0022FE  90AC               	bcf	4012,0,c	;volatile
 13118  002300  A21B               	btfss	_USART1_Status,1,c
 13119  002302  D002               	goto	i1l4201
 13120  002304  80AC               	bsf	4012,0,c	;volatile
 13121  002306  D000               	goto	i1l4201
 13122  002308                     i1l4201:
 13123  002308  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 13124  00230C  0012               	return		;funcret
 13125  00230E                     __end_of_Write1USART:
 13126                           	opt stack 0
 13127                           pclatu	equ	0xFFB
 13128                           pclath	equ	0xFFA
 13129                           tblptru	equ	0xFF8
 13130                           tblptrh	equ	0xFF7
 13131                           tblptrl	equ	0xFF6
 13132                           tablat	equ	0xFF5
 13133                           prodh	equ	0xFF4
 13134                           prodl	equ	0xFF3
 13135                           intcon	equ	0xFF2
 13136                           intcon2	equ	0xFF1
 13137                           intcon3	equ	0xFF0
 13138                           postinc0	equ	0xFEE
 13139                           fsr0h	equ	0xFEA
 13140                           fsr0l	equ	0xFE9
 13141                           wreg	equ	0xFE8
 13142                           postinc1	equ	0xFE6
 13143                           fsr1h	equ	0xFE2
 13144                           fsr1l	equ	0xFE1
 13145                           bsr	equ	0xFE0
 13146                           indf2	equ	0xFDF
 13147                           postinc2	equ	0xFDE
 13148                           postdec2	equ	0xFDD
 13149                           fsr2h	equ	0xFDA
 13150                           fsr2l	equ	0xFD9
 13151                           status	equ	0xFD8
 13152                           
 13153 ;; *************** function _GetCharTxBuf *****************
 13154 ;; Defined at:
 13155 ;;		line 15 in file "Wireless.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  ch              1    7[COMRAM] unsigned char 
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      unsigned char 
 13162 ;; Registers used:
 13163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13173 ;;Total ram usage:        2 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:    4
 13176 ;; This function calls:
 13177 ;;		i1___awmod
 13178 ;; This function is called by:
 13179 ;;		_WirelessTx_ISR
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text108
 13184  001E76                     __ptext108:
 13185                           	opt stack 0
 13186  001E76                     _GetCharTxBuf:
 13187                           	opt stack 18
 13188                           
 13189                           ;Wireless.c: 16: unsigned char ch;
 13190                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 13191                           
 13192                           ;incstack = 0
 13193  001E76  501E               	movf	_get_Tx_index,w,c
 13194  001E78  0D01               	mullw	1
 13195  001E7A  0E79               	movlw	low _Tx_buffer
 13196  001E7C  24F3               	addwf	prodl,w,c
 13197  001E7E  6ED9               	movwf	fsr2l,c
 13198  001E80  0E00               	movlw	high _Tx_buffer
 13199  001E82  20F4               	addwfc	prodh,w,c
 13200  001E84  6EDA               	movwf	fsr2h,c
 13201  001E86  50DF               	movf	indf2,w,c
 13202  001E88  6E32               	movwf	GetCharTxBuf@ch,c
 13203                           
 13204                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 13205  001E8A  C01E  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 13206  001E8E  0E01               	movlw	1
 13207  001E90  2631               	addwf	??_GetCharTxBuf,f,c
 13208  001E92  5031               	movf	??_GetCharTxBuf,w,c
 13209  001E94  6E2B               	movwf	i1___awmod@dividend,c
 13210  001E96  6A2C               	clrf	i1___awmod@dividend+1,c
 13211  001E98  0E00               	movlw	0
 13212  001E9A  6E2E               	movwf	i1___awmod@divisor+1,c
 13213  001E9C  0E19               	movlw	25
 13214  001E9E  6E2D               	movwf	i1___awmod@divisor,c
 13215  001EA0  EC4B  F00A         	call	i1___awmod	;wreg free
 13216  001EA4  502B               	movf	?i1___awmod,w,c
 13217  001EA6  6E1E               	movwf	_get_Tx_index,c
 13218                           
 13219                           ;Wireless.c: 21: return(ch);
 13220  001EA8  5032               	movf	GetCharTxBuf@ch,w,c
 13221  001EAA  D000               	goto	i1l280
 13222  001EAC                     i1l280:
 13223  001EAC  0012               	return		;funcret
 13224  001EAE                     __end_of_GetCharTxBuf:
 13225                           	opt stack 0
 13226                           pclatu	equ	0xFFB
 13227                           pclath	equ	0xFFA
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           intcon	equ	0xFF2
 13235                           intcon2	equ	0xFF1
 13236                           intcon3	equ	0xFF0
 13237                           postinc0	equ	0xFEE
 13238                           fsr0h	equ	0xFEA
 13239                           fsr0l	equ	0xFE9
 13240                           wreg	equ	0xFE8
 13241                           postinc1	equ	0xFE6
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           bsr	equ	0xFE0
 13245                           indf2	equ	0xFDF
 13246                           postinc2	equ	0xFDE
 13247                           postdec2	equ	0xFDD
 13248                           fsr2h	equ	0xFDA
 13249                           fsr2l	equ	0xFD9
 13250                           status	equ	0xFD8
 13251                           
 13252 ;; *************** function i1___awmod *****************
 13253 ;; Defined at:
 13254 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  dividend        2    0[COMRAM] int 
 13257 ;;  divisor         2    2[COMRAM] int 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;  __awmod         1    5[COMRAM] unsigned char 
 13260 ;;  __awmod         1    4[COMRAM] unsigned char 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  2    0[COMRAM] int 
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;Total ram usage:        6 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; Hardware stack levels required when called:    3
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_GetCharTxBuf
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text109
 13285  001496                     __ptext109:
 13286                           	opt stack 0
 13287  001496                     i1___awmod:
 13288                           	opt stack 18
 13289                           
 13290                           ;incstack = 0
 13291  001496  0E00               	movlw	0
 13292  001498  6E30               	movwf	i1___awmod@sign,c
 13293  00149A  AE2C               	btfss	i1___awmod@dividend+1,7,c
 13294  00149C  D007               	goto	i1l4137
 13295  00149E  6C2B               	negf	i1___awmod@dividend,c
 13296  0014A0  1E2C               	comf	i1___awmod@dividend+1,f,c
 13297  0014A2  B0D8               	btfsc	status,0,c
 13298  0014A4  2A2C               	incf	i1___awmod@dividend+1,f,c
 13299  0014A6  0E01               	movlw	1
 13300  0014A8  6E30               	movwf	i1___awmod@sign,c
 13301  0014AA  D000               	goto	i1l4137
 13302  0014AC                     i1l4137:
 13303  0014AC  AE2E               	btfss	i1___awmod@divisor+1,7,c
 13304  0014AE  D005               	goto	i1l4141
 13305  0014B0  6C2D               	negf	i1___awmod@divisor,c
 13306  0014B2  1E2E               	comf	i1___awmod@divisor+1,f,c
 13307  0014B4  B0D8               	btfsc	status,0,c
 13308  0014B6  2A2E               	incf	i1___awmod@divisor+1,f,c
 13309  0014B8  D000               	goto	i1l4141
 13310  0014BA                     i1l4141:
 13311  0014BA  502D               	movf	i1___awmod@divisor,w,c
 13312  0014BC  102E               	iorwf	i1___awmod@divisor+1,w,c
 13313  0014BE  B4D8               	btfsc	status,2,c
 13314  0014C0  D01D               	goto	i1l4157
 13315  0014C2  0E01               	movlw	1
 13316  0014C4  6E2F               	movwf	i1___awmod@counter,c
 13317  0014C6  D005               	goto	i1l4147
 13318  0014C8                     i1l4145:
 13319  0014C8  90D8               	bcf	status,0,c
 13320  0014CA  362D               	rlcf	i1___awmod@divisor,f,c
 13321  0014CC  362E               	rlcf	i1___awmod@divisor+1,f,c
 13322  0014CE  2A2F               	incf	i1___awmod@counter,f,c
 13323  0014D0  D000               	goto	i1l4147
 13324  0014D2                     i1l4147:
 13325  0014D2  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 13326  0014D4  D002               	goto	i1l4149
 13327  0014D6  D7F8               	goto	i1l4145
 13328  0014D8  D000               	goto	i1l4149
 13329  0014DA                     i1l4149:
 13330  0014DA  502D               	movf	i1___awmod@divisor,w,c
 13331  0014DC  5C2B               	subwf	i1___awmod@dividend,w,c
 13332  0014DE  502E               	movf	i1___awmod@divisor+1,w,c
 13333  0014E0  582C               	subwfb	i1___awmod@dividend+1,w,c
 13334  0014E2  A0D8               	btfss	status,0,c
 13335  0014E4  D005               	goto	i1l4153
 13336  0014E6  502D               	movf	i1___awmod@divisor,w,c
 13337  0014E8  5E2B               	subwf	i1___awmod@dividend,f,c
 13338  0014EA  502E               	movf	i1___awmod@divisor+1,w,c
 13339  0014EC  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 13340  0014EE  D000               	goto	i1l4153
 13341  0014F0                     i1l4153:
 13342  0014F0  90D8               	bcf	status,0,c
 13343  0014F2  322E               	rrcf	i1___awmod@divisor+1,f,c
 13344  0014F4  322D               	rrcf	i1___awmod@divisor,f,c
 13345  0014F6  2E2F               	decfsz	i1___awmod@counter,f,c
 13346  0014F8  D7F0               	goto	i1l4149
 13347  0014FA  D000               	goto	i1l4157
 13348  0014FC                     i1l4157:
 13349  0014FC  5030               	movf	i1___awmod@sign,w,c
 13350  0014FE  B4D8               	btfsc	status,2,c
 13351  001500  D005               	goto	i1l4161
 13352  001502  6C2B               	negf	i1___awmod@dividend,c
 13353  001504  1E2C               	comf	i1___awmod@dividend+1,f,c
 13354  001506  B0D8               	btfsc	status,0,c
 13355  001508  2A2C               	incf	i1___awmod@dividend+1,f,c
 13356  00150A  D000               	goto	i1l4161
 13357  00150C                     i1l4161:
 13358  00150C  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 13359  001510  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13360  001514  D000               	goto	i1l1454
 13361  001516                     i1l1454:
 13362  001516  0012               	return		;funcret
 13363  001518                     __end_ofi1___awmod:
 13364                           	opt stack 0
 13365                           pclatu	equ	0xFFB
 13366                           pclath	equ	0xFFA
 13367                           tblptru	equ	0xFF8
 13368                           tblptrh	equ	0xFF7
 13369                           tblptrl	equ	0xFF6
 13370                           tablat	equ	0xFF5
 13371                           prodh	equ	0xFF4
 13372                           prodl	equ	0xFF3
 13373                           intcon	equ	0xFF2
 13374                           intcon2	equ	0xFF1
 13375                           intcon3	equ	0xFF0
 13376                           postinc0	equ	0xFEE
 13377                           fsr0h	equ	0xFEA
 13378                           fsr0l	equ	0xFE9
 13379                           wreg	equ	0xFE8
 13380                           postinc1	equ	0xFE6
 13381                           fsr1h	equ	0xFE2
 13382                           fsr1l	equ	0xFE1
 13383                           bsr	equ	0xFE0
 13384                           indf2	equ	0xFDF
 13385                           postinc2	equ	0xFDE
 13386                           postdec2	equ	0xFDD
 13387                           fsr2h	equ	0xFDA
 13388                           fsr2l	equ	0xFD9
 13389                           status	equ	0xFD8
 13390                           
 13391 ;; *************** function _isrHP *****************
 13392 ;; Defined at:
 13393 ;;		line 640 in file "FastBuggy17_Main_Code_TUNING.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;		None               void
 13400 ;; Registers used:
 13401 ;;		wreg, status,2, status,0, cstack
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13409 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13410 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13411 ;;Total ram usage:       14 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    2
 13414 ;; This function calls:
 13415 ;;		_MillisecondTimerISR
 13416 ;;		_UltrasoundISR
 13417 ;; This function is called by:
 13418 ;;		Interrupt level 2
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	intcode
 13423  000008                     __pintcode:
 13424                           	opt stack 0
 13425  000008                     _isrHP:
 13426                           	opt stack 18
 13427                           
 13428                           ;incstack = 0
 13429  000008  CFFA F0C0          	movff	pclath,??_isrHP
 13430  00000C  CFFB F0C1          	movff	pclatu,??_isrHP+1
 13431  000010  CFE9 F0C2          	movff	fsr0l,??_isrHP+2
 13432  000014  ED8C  F00A         	call	int_func,f	;refresh shadow registers
 13433                           pclatu	equ	0xFFB
 13434                           pclath	equ	0xFFA
 13435                           tblptru	equ	0xFF8
 13436                           tblptrh	equ	0xFF7
 13437                           tblptrl	equ	0xFF6
 13438                           tablat	equ	0xFF5
 13439                           prodh	equ	0xFF4
 13440                           prodl	equ	0xFF3
 13441                           intcon	equ	0xFF2
 13442                           intcon2	equ	0xFF1
 13443                           intcon3	equ	0xFF0
 13444                           postinc0	equ	0xFEE
 13445                           fsr0h	equ	0xFEA
 13446                           fsr0l	equ	0xFE9
 13447                           wreg	equ	0xFE8
 13448                           postinc1	equ	0xFE6
 13449                           fsr1h	equ	0xFE2
 13450                           fsr1l	equ	0xFE1
 13451                           bsr	equ	0xFE0
 13452                           indf2	equ	0xFDF
 13453                           postinc2	equ	0xFDE
 13454                           postdec2	equ	0xFDD
 13455                           fsr2h	equ	0xFDA
 13456                           fsr2l	equ	0xFD9
 13457                           status	equ	0xFD8
 13458                           
 13459                           	psect	intcode_body
 13460  001518                     __pintcode_body:
 13461                           	opt stack 18
 13462  001518                     int_func:
 13463                           	opt stack 18
 13464  001518  0006               	pop		; remove dummy address from shadow register refresh
 13465  00151A  CFEA F0C3          	movff	fsr0h,??_isrHP+3
 13466  00151E  CFE1 F0C4          	movff	fsr1l,??_isrHP+4
 13467  001522  CFE2 F0C5          	movff	fsr1h,??_isrHP+5
 13468  001526  CFD9 F0C6          	movff	fsr2l,??_isrHP+6
 13469  00152A  CFDA F0C7          	movff	fsr2h,??_isrHP+7
 13470  00152E  CFF3 F0C8          	movff	prodl,??_isrHP+8
 13471  001532  CFF4 F0C9          	movff	prodh,??_isrHP+9
 13472  001536  CFF6 F0CA          	movff	tblptrl,??_isrHP+10
 13473  00153A  CFF7 F0CB          	movff	tblptrh,??_isrHP+11
 13474  00153E  CFF8 F0CC          	movff	tblptru,??_isrHP+12
 13475  001542  CFF5 F0CD          	movff	tablat,??_isrHP+13
 13476                           
 13477                           ;FastBuggy17_Main_Code_TUNING.c: 643: if (INTCONbits.TMR0IF == 1) {
 13478  001546  A4F2               	btfss	intcon,2,c	;volatile
 13479  001548  D004               	goto	i2l946
 13480                           
 13481                           ;FastBuggy17_Main_Code_TUNING.c: 644: INTCONbits.TMR0IF = 0;
 13482  00154A  94F2               	bcf	intcon,2,c	;volatile
 13483                           
 13484                           ;FastBuggy17_Main_Code_TUNING.c: 646: MillisecondTimerISR();
 13485  00154C  EC33  F011         	call	_MillisecondTimerISR	;wreg free
 13486                           
 13487                           ;FastBuggy17_Main_Code_TUNING.c: 650: }
 13488  001550  D006               	goto	i2l949
 13489  001552                     i2l946:
 13490                           
 13491                           ;FastBuggy17_Main_Code_TUNING.c: 653: else if (INTCON3bits.INT3IF == 1) {
 13492  001552  A4F0               	btfss	intcon3,2,c	;volatile
 13493  001554  D004               	goto	i2l949
 13494                           
 13495                           ;FastBuggy17_Main_Code_TUNING.c: 654: INTCON3bits.INT3IF = 0;
 13496  001556  94F0               	bcf	intcon3,2,c	;volatile
 13497                           
 13498                           ;FastBuggy17_Main_Code_TUNING.c: 656: UltrasoundISR();
 13499  001558  ECA7  F00F         	call	_UltrasoundISR	;wreg free
 13500  00155C  D000               	goto	i2l949
 13501  00155E                     i2l949:
 13502  00155E  C0CD  FFF5         	movff	??_isrHP+13,tablat
 13503  001562  C0CC  FFF8         	movff	??_isrHP+12,tblptru
 13504  001566  C0CB  FFF7         	movff	??_isrHP+11,tblptrh
 13505  00156A  C0CA  FFF6         	movff	??_isrHP+10,tblptrl
 13506  00156E  C0C9  FFF4         	movff	??_isrHP+9,prodh
 13507  001572  C0C8  FFF3         	movff	??_isrHP+8,prodl
 13508  001576  C0C7  FFDA         	movff	??_isrHP+7,fsr2h
 13509  00157A  C0C6  FFD9         	movff	??_isrHP+6,fsr2l
 13510  00157E  C0C5  FFE2         	movff	??_isrHP+5,fsr1h
 13511  001582  C0C4  FFE1         	movff	??_isrHP+4,fsr1l
 13512  001586  C0C3  FFEA         	movff	??_isrHP+3,fsr0h
 13513  00158A  C0C2  FFE9         	movff	??_isrHP+2,fsr0l
 13514  00158E  C0C1  FFFB         	movff	??_isrHP+1,pclatu
 13515  001592  C0C0  FFFA         	movff	??_isrHP,pclath
 13516  001596  0011               	retfie		f
 13517  001598                     __end_of_isrHP:
 13518                           	opt stack 0
 13519                           pclatu	equ	0xFFB
 13520                           pclath	equ	0xFFA
 13521                           tblptru	equ	0xFF8
 13522                           tblptrh	equ	0xFF7
 13523                           tblptrl	equ	0xFF6
 13524                           tablat	equ	0xFF5
 13525                           prodh	equ	0xFF4
 13526                           prodl	equ	0xFF3
 13527                           intcon	equ	0xFF2
 13528                           intcon2	equ	0xFF1
 13529                           intcon3	equ	0xFF0
 13530                           postinc0	equ	0xFEE
 13531                           fsr0h	equ	0xFEA
 13532                           fsr0l	equ	0xFE9
 13533                           wreg	equ	0xFE8
 13534                           postinc1	equ	0xFE6
 13535                           fsr1h	equ	0xFE2
 13536                           fsr1l	equ	0xFE1
 13537                           bsr	equ	0xFE0
 13538                           indf2	equ	0xFDF
 13539                           postinc2	equ	0xFDE
 13540                           postdec2	equ	0xFDD
 13541                           fsr2h	equ	0xFDA
 13542                           fsr2l	equ	0xFD9
 13543                           status	equ	0xFD8
 13544                           
 13545 ;; *************** function _UltrasoundISR *****************
 13546 ;; Defined at:
 13547 ;;		line 17 in file "Ultrasound.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;		None
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;		None
 13552 ;; Return value:  Size  Location     Type
 13553 ;;		None               void
 13554 ;; Registers used:
 13555 ;;		wreg, status,2, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;Total ram usage:        0 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:    1
 13568 ;; This function calls:
 13569 ;;		_ReadTimer1
 13570 ;;		i2_WriteTimer1
 13571 ;; This function is called by:
 13572 ;;		_isrHP
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           	psect	text111
 13577  001F4E                     __ptext111:
 13578                           	opt stack 0
 13579  001F4E                     _UltrasoundISR:
 13580                           	opt stack 18
 13581                           
 13582                           ;Ultrasound.c: 46: INTCON3bits.INT3IE = 0;
 13583                           
 13584                           ;incstack = 0
 13585  001F4E  9AF0               	bcf	intcon3,5,c	;volatile
 13586                           
 13587                           ;Ultrasound.c: 47: if(T1CONbits.TMR1ON == 0) {
 13588  001F50  B0CD               	btfsc	4045,0,c	;volatile
 13589  001F52  D00A               	goto	i2l28
 13590                           
 13591                           ;Ultrasound.c: 48: T1CONbits.TMR1ON = 1;
 13592  001F54  80CD               	bsf	4045,0,c	;volatile
 13593                           
 13594                           ;Ultrasound.c: 49: WriteTimer1(0);
 13595  001F56  0E00               	movlw	0
 13596  001F58  6E45               	movwf	i2WriteTimer1@timer1+1,c
 13597  001F5A  0E00               	movlw	0
 13598  001F5C  6E44               	movwf	i2WriteTimer1@timer1,c
 13599  001F5E  ECC0  F011         	call	i2_WriteTimer1	;wreg free
 13600                           
 13601                           ;Ultrasound.c: 50: INTCON2bits.INTEDG3 = 0;
 13602  001F62  96F1               	bcf	intcon2,3,c	;volatile
 13603                           
 13604                           ;Ultrasound.c: 51: INTCON3bits.INT3IE = 1;
 13605  001F64  8AF0               	bsf	intcon3,5,c	;volatile
 13606                           
 13607                           ;Ultrasound.c: 52: }
 13608  001F66  D00B               	goto	i2l6263
 13609  001F68                     i2l28:
 13610                           
 13611                           ;Ultrasound.c: 53: else {
 13612                           ;Ultrasound.c: 54: T1CONbits.TMR1ON = 0;
 13613  001F68  90CD               	bcf	4045,0,c	;volatile
 13614                           
 13615                           ;Ultrasound.c: 55: echo_time = ReadTimer1();
 13616  001F6A  ECC9  F011         	call	_ReadTimer1	;wreg free
 13617  001F6E  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13618  001F72  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13619                           
 13620                           ;Ultrasound.c: 56: echo_acq_done = 1;
 13621  001F76  0E01               	movlw	1
 13622  001F78  6E1C               	movwf	_echo_acq_done,c
 13623                           
 13624                           ;Ultrasound.c: 57: INTCON3bits.INT3IE = 0;
 13625  001F7A  9AF0               	bcf	intcon3,5,c	;volatile
 13626  001F7C  D000               	goto	i2l6263
 13627  001F7E                     i2l6263:
 13628                           
 13629                           ;Ultrasound.c: 58: }
 13630                           ;Ultrasound.c: 59: INTCON3bits.INT3IF = 0;
 13631  001F7E  94F0               	bcf	intcon3,2,c	;volatile
 13632  001F80  0012               	return		;funcret
 13633  001F82                     __end_of_UltrasoundISR:
 13634                           	opt stack 0
 13635                           pclatu	equ	0xFFB
 13636                           pclath	equ	0xFFA
 13637                           tblptru	equ	0xFF8
 13638                           tblptrh	equ	0xFF7
 13639                           tblptrl	equ	0xFF6
 13640                           tablat	equ	0xFF5
 13641                           prodh	equ	0xFF4
 13642                           prodl	equ	0xFF3
 13643                           intcon	equ	0xFF2
 13644                           intcon2	equ	0xFF1
 13645                           intcon3	equ	0xFF0
 13646                           postinc0	equ	0xFEE
 13647                           fsr0h	equ	0xFEA
 13648                           fsr0l	equ	0xFE9
 13649                           wreg	equ	0xFE8
 13650                           postinc1	equ	0xFE6
 13651                           fsr1h	equ	0xFE2
 13652                           fsr1l	equ	0xFE1
 13653                           bsr	equ	0xFE0
 13654                           indf2	equ	0xFDF
 13655                           postinc2	equ	0xFDE
 13656                           postdec2	equ	0xFDD
 13657                           fsr2h	equ	0xFDA
 13658                           fsr2l	equ	0xFD9
 13659                           status	equ	0xFD8
 13660                           
 13661 ;; *************** function i2_WriteTimer1 *****************
 13662 ;; Defined at:
 13663 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  timer1          2   25[COMRAM] unsigned int 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 13668 ;; Return value:  Size  Location     Type
 13669 ;;		None               void
 13670 ;; Registers used:
 13671 ;;		None
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13680 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13681 ;;Total ram usage:        4 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; This function calls:
 13684 ;;		Nothing
 13685 ;; This function is called by:
 13686 ;;		_UltrasoundISR
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           	psect	text112
 13691  002380                     __ptext112:
 13692                           	opt stack 0
 13693  002380                     i2_WriteTimer1:
 13694                           	opt stack 18
 13695                           
 13696                           ;incstack = 0
 13697  002380  C044  F0BE         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13698  002384  C045  F0BF         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13699  002388  C0BF  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13700  00238C  C0BE  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13701  002390  0012               	return		;funcret
 13702  002392                     __end_ofi2_WriteTimer1:
 13703                           	opt stack 0
 13704                           pclatu	equ	0xFFB
 13705                           pclath	equ	0xFFA
 13706                           tblptru	equ	0xFF8
 13707                           tblptrh	equ	0xFF7
 13708                           tblptrl	equ	0xFF6
 13709                           tablat	equ	0xFF5
 13710                           prodh	equ	0xFF4
 13711                           prodl	equ	0xFF3
 13712                           intcon	equ	0xFF2
 13713                           intcon2	equ	0xFF1
 13714                           intcon3	equ	0xFF0
 13715                           postinc0	equ	0xFEE
 13716                           fsr0h	equ	0xFEA
 13717                           fsr0l	equ	0xFE9
 13718                           wreg	equ	0xFE8
 13719                           postinc1	equ	0xFE6
 13720                           fsr1h	equ	0xFE2
 13721                           fsr1l	equ	0xFE1
 13722                           bsr	equ	0xFE0
 13723                           indf2	equ	0xFDF
 13724                           postinc2	equ	0xFDE
 13725                           postdec2	equ	0xFDD
 13726                           fsr2h	equ	0xFDA
 13727                           fsr2l	equ	0xFD9
 13728                           status	equ	0xFD8
 13729                           
 13730 ;; *************** function _ReadTimer1 *****************
 13731 ;; Defined at:
 13732 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  timer           2    0[BANK0 ] struct Timers
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  2   25[COMRAM] unsigned int 
 13739 ;; Registers used:
 13740 ;;		None
 13741 ;; Tracked objects:
 13742 ;;		On entry : 0/0
 13743 ;;		On exit  : 0/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13749 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;Total ram usage:        4 bytes
 13751 ;; Hardware stack levels used:    1
 13752 ;; This function calls:
 13753 ;;		Nothing
 13754 ;; This function is called by:
 13755 ;;		_UltrasoundISR
 13756 ;; This function uses a non-reentrant model
 13757 ;;
 13758                           
 13759                           	psect	text113
 13760  002392                     __ptext113:
 13761                           	opt stack 0
 13762  002392                     _ReadTimer1:
 13763                           	opt stack 18
 13764                           
 13765                           ;incstack = 0
 13766  002392  CFCE F0BE          	movff	4046,ReadTimer1@timer	;volatile
 13767  002396  CFCF F0BF          	movff	4047,ReadTimer1@timer+1	;volatile
 13768  00239A  C0BE  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 13769  00239E  C0BF  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13770  0023A2  0012               	return		;funcret
 13771  0023A4                     __end_of_ReadTimer1:
 13772                           	opt stack 0
 13773                           pclatu	equ	0xFFB
 13774                           pclath	equ	0xFFA
 13775                           tblptru	equ	0xFF8
 13776                           tblptrh	equ	0xFF7
 13777                           tblptrl	equ	0xFF6
 13778                           tablat	equ	0xFF5
 13779                           prodh	equ	0xFF4
 13780                           prodl	equ	0xFF3
 13781                           intcon	equ	0xFF2
 13782                           intcon2	equ	0xFF1
 13783                           intcon3	equ	0xFF0
 13784                           postinc0	equ	0xFEE
 13785                           fsr0h	equ	0xFEA
 13786                           fsr0l	equ	0xFE9
 13787                           wreg	equ	0xFE8
 13788                           postinc1	equ	0xFE6
 13789                           fsr1h	equ	0xFE2
 13790                           fsr1l	equ	0xFE1
 13791                           bsr	equ	0xFE0
 13792                           indf2	equ	0xFDF
 13793                           postinc2	equ	0xFDE
 13794                           postdec2	equ	0xFDD
 13795                           fsr2h	equ	0xFDA
 13796                           fsr2l	equ	0xFD9
 13797                           status	equ	0xFD8
 13798                           
 13799 ;; *************** function _MillisecondTimerISR *****************
 13800 ;; Defined at:
 13801 ;;		line 55 in file "MillisecondTimer.c"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;		None
 13804 ;; Auto vars:     Size  Location     Type
 13805 ;;		None
 13806 ;; Return value:  Size  Location     Type
 13807 ;;		None               void
 13808 ;; Registers used:
 13809 ;;		wreg, status,2, status,0, cstack
 13810 ;; Tracked objects:
 13811 ;;		On entry : 0/0
 13812 ;;		On exit  : 0/0
 13813 ;;		Unchanged: 0/0
 13814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;Total ram usage:        0 bytes
 13820 ;; Hardware stack levels used:    1
 13821 ;; Hardware stack levels required when called:    1
 13822 ;; This function calls:
 13823 ;;		i2_WriteTimer0
 13824 ;; This function is called by:
 13825 ;;		_isrHP
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text114
 13830  002266                     __ptext114:
 13831                           	opt stack 0
 13832  002266                     _MillisecondTimerISR:
 13833                           	opt stack 18
 13834                           
 13835                           ;MillisecondTimer.c: 57: WriteTimer0(63036);
 13836                           
 13837                           ;incstack = 0
 13838  002266  0EF6               	movlw	246
 13839  002268  6E45               	movwf	i2WriteTimer0@timer0+1,c
 13840  00226A  0E3C               	movlw	60
 13841  00226C  6E44               	movwf	i2WriteTimer0@timer0,c
 13842  00226E  ECD2  F011         	call	i2_WriteTimer0	;wreg free
 13843                           
 13844                           ;MillisecondTimer.c: 58: millisecond_COUNT0++;
 13845  002272  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13846  002274  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13847                           
 13848                           ;MillisecondTimer.c: 59: millisecond_COUNT1++;
 13849  002276  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13850  002278  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13851                           
 13852                           ;MillisecondTimer.c: 60: millisecond_COUNT2++;
 13853  00227A  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13854  00227C  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13855                           
 13856                           ;MillisecondTimer.c: 61: millisecond_COUNT3++;
 13857  00227E  4A13               	infsnz	_millisecond_COUNT3,f,c	;volatile
 13858  002280  2A14               	incf	_millisecond_COUNT3+1,f,c	;volatile
 13859  002282  0012               	return		;funcret
 13860  002284                     __end_of_MillisecondTimerISR:
 13861                           	opt stack 0
 13862                           pclatu	equ	0xFFB
 13863                           pclath	equ	0xFFA
 13864                           tblptru	equ	0xFF8
 13865                           tblptrh	equ	0xFF7
 13866                           tblptrl	equ	0xFF6
 13867                           tablat	equ	0xFF5
 13868                           prodh	equ	0xFF4
 13869                           prodl	equ	0xFF3
 13870                           intcon	equ	0xFF2
 13871                           intcon2	equ	0xFF1
 13872                           intcon3	equ	0xFF0
 13873                           postinc0	equ	0xFEE
 13874                           fsr0h	equ	0xFEA
 13875                           fsr0l	equ	0xFE9
 13876                           wreg	equ	0xFE8
 13877                           postinc1	equ	0xFE6
 13878                           fsr1h	equ	0xFE2
 13879                           fsr1l	equ	0xFE1
 13880                           bsr	equ	0xFE0
 13881                           indf2	equ	0xFDF
 13882                           postinc2	equ	0xFDE
 13883                           postdec2	equ	0xFDD
 13884                           fsr2h	equ	0xFDA
 13885                           fsr2l	equ	0xFD9
 13886                           status	equ	0xFD8
 13887                           
 13888 ;; *************** function i2_WriteTimer0 *****************
 13889 ;; Defined at:
 13890 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  timer0          2   25[COMRAM] unsigned int 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 13895 ;; Return value:  Size  Location     Type
 13896 ;;		None               void
 13897 ;; Registers used:
 13898 ;;		None
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;Total ram usage:        4 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; This function calls:
 13911 ;;		Nothing
 13912 ;; This function is called by:
 13913 ;;		_MillisecondTimerISR
 13914 ;; This function uses a non-reentrant model
 13915 ;;
 13916                           
 13917                           	psect	text115
 13918  0023A4                     __ptext115:
 13919                           	opt stack 0
 13920  0023A4                     i2_WriteTimer0:
 13921                           	opt stack 18
 13922                           
 13923                           ;incstack = 0
 13924  0023A4  C044  F0BE         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13925  0023A8  C045  F0BF         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13926  0023AC  C0BF  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13927  0023B0  C0BE  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13928  0023B4  0012               	return		;funcret
 13929  0023B6                     __end_ofi2_WriteTimer0:
 13930                           	opt stack 0
 13931  0000                     pclatu	equ	0xFFB
 13932                           pclath	equ	0xFFA
 13933                           tblptru	equ	0xFF8
 13934                           tblptrh	equ	0xFF7
 13935                           tblptrl	equ	0xFF6
 13936                           tablat	equ	0xFF5
 13937                           prodh	equ	0xFF4
 13938                           prodl	equ	0xFF3
 13939                           intcon	equ	0xFF2
 13940                           intcon2	equ	0xFF1
 13941                           intcon3	equ	0xFF0
 13942                           postinc0	equ	0xFEE
 13943                           fsr0h	equ	0xFEA
 13944                           fsr0l	equ	0xFE9
 13945                           wreg	equ	0xFE8
 13946                           postinc1	equ	0xFE6
 13947                           fsr1h	equ	0xFE2
 13948                           fsr1l	equ	0xFE1
 13949                           bsr	equ	0xFE0
 13950                           indf2	equ	0xFDF
 13951                           postinc2	equ	0xFDE
 13952                           postdec2	equ	0xFDD
 13953                           fsr2h	equ	0xFDA
 13954                           fsr2l	equ	0xFD9
 13955                           status	equ	0xFD8
 13956                           pclatu	equ	0xFFB
 13957                           pclath	equ	0xFFA
 13958                           tblptru	equ	0xFF8
 13959                           tblptrh	equ	0xFF7
 13960                           tblptrl	equ	0xFF6
 13961                           tablat	equ	0xFF5
 13962                           prodh	equ	0xFF4
 13963                           prodl	equ	0xFF3
 13964                           intcon	equ	0xFF2
 13965                           intcon2	equ	0xFF1
 13966                           intcon3	equ	0xFF0
 13967                           postinc0	equ	0xFEE
 13968                           fsr0h	equ	0xFEA
 13969                           fsr0l	equ	0xFE9
 13970                           wreg	equ	0xFE8
 13971                           postinc1	equ	0xFE6
 13972                           fsr1h	equ	0xFE2
 13973                           fsr1l	equ	0xFE1
 13974                           bsr	equ	0xFE0
 13975                           indf2	equ	0xFDF
 13976                           postinc2	equ	0xFDE
 13977                           postdec2	equ	0xFDD
 13978                           fsr2h	equ	0xFDA
 13979                           fsr2l	equ	0xFD9
 13980                           status	equ	0xFD8
 13981                           
 13982                           	psect	rparam
 13983  0000                     pclatu	equ	0xFFB
 13984                           pclath	equ	0xFFA
 13985                           tblptru	equ	0xFF8
 13986                           tblptrh	equ	0xFF7
 13987                           tblptrl	equ	0xFF6
 13988                           tablat	equ	0xFF5
 13989                           prodh	equ	0xFF4
 13990                           prodl	equ	0xFF3
 13991                           intcon	equ	0xFF2
 13992                           intcon2	equ	0xFF1
 13993                           intcon3	equ	0xFF0
 13994                           postinc0	equ	0xFEE
 13995                           fsr0h	equ	0xFEA
 13996                           fsr0l	equ	0xFE9
 13997                           wreg	equ	0xFE8
 13998                           postinc1	equ	0xFE6
 13999                           fsr1h	equ	0xFE2
 14000                           fsr1l	equ	0xFE1
 14001                           bsr	equ	0xFE0
 14002                           indf2	equ	0xFDF
 14003                           postinc2	equ	0xFDE
 14004                           postdec2	equ	0xFDD
 14005                           fsr2h	equ	0xFDA
 14006                           fsr2l	equ	0xFD9
 14007                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         136
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160     40     140
    BANK1           256     43      43
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@PID_set_point_ptr	PTR int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    main@PID_error_ptr	PTR int  size(2) Largest target is 2
		 -> PID_error(BANK0[2]), 

    main@sensor_sum_ptr	PTR int  size(2) Largest target is 2
		 -> main@sensor_sum(BANK1[2]), 

    main@sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    CalibrateThreshold@sensor_threshold_temp_ptr	PTR int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), 

    DisplaySensorStatuses@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSumDiscrete@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSum@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    CalculateSensorStatuses@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), sensor_threshold(BANK0[2]), 

    CalculateSensorStatuses@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    NormaliseSensorReadings@sensor_offsets	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    NormaliseSensorReadings@sensor_readings_raw	PTR  int  size(2) Largest target is 10
		 -> sensor_readings_raw(BANK0[10]), 

    SendPIDSetPointOnLine@set_point	PTR const int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_LoadCalibration
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendThreshold->_PutCharTxBuf
    _SendStoredPIDValues->_PutCharTxBuf
    _SendPIDSetPointOnLine->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_CalibrateThreshold
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateOnLine->_CalculateSensorSum
    _CalculateSensorSum->___wmul
    _CalibrateOffsets->_SendStatus
    _SendStatus->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer3
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   67758
                                             36 BANK0      4     4      0
                                              0 BANK1     43    43      0
                    _BusyDistanceAcq
                      _BusySensorAcq
            _CalculateSensorStatuses
                 _CalculateSensorSum
         _CalculateSensorSumDiscrete
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                       _ResetMillis3
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                        _SendOffsets
              _SendPIDSetPointOnLine
                         _SendStatus
                _SendStoredPIDValues
                      _SendThreshold
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1300
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1520
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     650
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     650
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendThreshold                                        4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOnLine                                4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1270
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11417
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5850
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   13137
                                             33 BANK0      3     3      0
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1167
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     514
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0   11326
                                             30 BANK0      3     3      0
                   _CalibrateOffsets
                    _CalibrateOnLine
                 _CalibrateThreshold
                          _FlashLEDS
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3     966
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   4     4      0    3762
                                             26 BANK0      4     4      0
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                            _ReadADC
                         _SendStatus
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                             10     6      4    1096
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOnLine                                      0     0      0    3359
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              9     5      4    1003
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorSum                                   6     4      2    1216
                                             22 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0    1270
                                             25 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     573
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     375
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      93
                         _OpenTimer3
 ---------------------------------------------------------------------------------
 (2) _OpenTimer3                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSumDiscrete                           4     2      2     297
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorStatuses
   _CalculateSensorSum
     ___wmul
   _CalculateSensorSumDiscrete
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer3
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOnLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _ReadADC
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SetADCChannel
         _SetChanADC
     _FlashLEDS
       _Delay10KTCYx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOnLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _ReadADC
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
         _SetADCChannel
           _SetChanADC
       _FlashLEDS
         _Delay10KTCYx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _ResetMillis3
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOnLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendThreshold
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___awdiv
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2B      2B       7       16.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      8C       5       87.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      32        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 28 14:46:43 2017

                             __size_of_WriteEEPROM 0040                                __end_of_OWWriteByte 206E  
                             __end_of_GetCharRxBuf 1B92                               __end_of_GetCharTxBuf 1EAE  
                                               l36 2404                                       ___awdiv@sign 00D3  
                              WriteCharEEPROM@data 00D3                                                 bsr 000FE0  
                              ___wmul@multiplicand 00D0                                        __CFG_BORV$0 000000  
                       __end_of_CalculateSensorSum 0BD8                                  main@line_end_flag 0109  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                      __CFG_OSC$HS 000000                                       __CFG_CP4$OFF 000000  
                                     __CFG_CP5$OFF 000000                                __end_of_GetDistance 2336  
                                     __CFG_CP6$OFF 000000                                       __CFG_CP7$OFF 000000  
                             LoadCalibration@index 00E1                                                l213 1CAC  
                                              l214 1CDC                                                l223 207C  
                                              l216 1CD0                                                l224 2098  
                                              l240 23C4                                                l128 123C  
                                              l226 2090                                                l324 23D4  
                                              l237 1A98                                                l461 24BA  
                                              l286 1B90                                                l552 1D7C  
                                              l458 244C                                                l554 1D92  
                                              l562 206C                                                l475 1910  
                                              l804 1614                                                l821 0BD6  
                                              l557 2014                                                l549 1E04  
                                              l831 1B4A                                                l567 1E30  
                                              l487 2040                                                l568 1E3C  
                                              l826 1D1C                                                l818 0ADE  
                                              l843 1ABA                                                l915 1030  
                                              l923 08B4                                                l860 1A3A  
                                              l845 1AF6                                                l918 089E  
                                              l863 1A08                                                l943 0CCC  
                                              l848 1AC4                                                l793 0DBA  
                                              l881 140E                                                l858 19FE  
                                              l799 23E4                                       __CFG_CPB$OFF 000000  
                                              _PR2 000FCB                                                _PR4 000F77  
                                     __CFG_CPD$OFF 000000                      __size_of_SendCurrentPIDValues 006A  
                           __size_of_SetDCMotorPID 00A8                               __size_of_WriteTimer0 0012  
                             __size_of_WriteTimer1 0012                              CalibrateOffsets@index 00D9  
                                       _OWReadByte 1E06                                      _SetADCChannel 0CCE  
                                     ___awmod@sign 00D3                                                prod 000FF3  
                             ?_SendStoredPIDValues 00D6                                                wreg 000FE8  
                                       _TXSTA1bits 000FAC                                       __CFG_MODE$MC 000000  
                        ??_CalculateSensorStatuses 00D2                                        ?_PB1pressed 002B  
                                  ReadTimer1@timer 00BE                                      main@Kd_stored 0124  
                                main@line_mode_ptr 0111                                        ?_PB2pressed 002B  
                                     __CFG_LVP$OFF 000000                                         _Delay1TCYx 23E6  
                                     __CFG_WDT$OFF 000000                                               l1130 215A  
                                             l1051 168E                                               l1107 2176  
                                             l1212 1446                                               l1221 1494  
                                             l1029 243E                                               l1230 2124  
                                             l1216 1468                                               l1081 219E  
                                             l1129 2158                                               l1153 1F30  
                                             l1218 1476                                               l1234 2136  
                                             l1083 21A8                                               l1155 1F48  
                                             l1219 1478                                               l1059 2320  
                                             l1156 1F4A                                               l1248 1E74  
                                             l1441 0F74                                               l1186 1FD4  
                                             l1187 1FD6                                               l1188 1FE0  
                                             l1189 1FE2                                               l1454 10E4  
                                             l1480 23F4                                               l1473 2228  
                                             l1478 23EA                                               l6031 2056  
                                             l6041 1E12                                               l7001 07A0  
                                             l6131 2180                                               l6019 1DF6  
                                             l6027 204C                                               l5501 1076  
                                             l6053 1E36                                               l6045 1E1C  
                                             l7013 07D4                                               l5503 1084  
                                             l6215 08A8                                               l7023 0800  
                                             l7015 07DC                                               l5505 108E  
                                             l5513 10C4                                               l6225 08C8  
                                             l6401 1840                                               l7009 07C0  
                                             l6075 1F34                                               l6227 08D6  
                                             l6411 1914                                               l5517 10DA  
                                             l5509 10B4                                               l6405 1898  
                                             l6421 1700                                               l5535 1EB4  
                                             l6191 10FA                                               l6175 1A30  
                                             l6167 1A12                                               l6415 196A  
                                             l5545 1EDA                                               l5561 0CD4  
                                             l6505 1002                                               l6169 1A2A  
                                             l6353 1304                                               l6425 175A  
                                             l5539 1EBE                                               l5571 0CFC  
                                             l5563 0CDC                                               l5635 1D9A  
                                             l5723 1B0C                                               l6187 10F0  
                                             l6179 1A36                                               l6523 0C62  
                                             l6435 18EA                                               l6339 1D20  
                                             l6363 1366                                               l6347 12E4  
                                             l6371 1694                                               l6291 1212  
                                             l5581 0D24                                               l5573 0D04  
                                             l5565 0CE4                                               l5493 1050  
                                             l6197 1144                                               l6509 0BE0  
                                             l6381 17D6                                               l6365 1374  
                                             l6357 130E                                               l6471 1CEA  
                                             l5591 0D4C                                               l5583 0D2C  
                                             l5575 0D0C                                               l5567 0CEC  
                                             l5655 159E                                               l5719 1B02  
                                             l5911 1256                                               l6391 176C  
                                             l6375 16EE                                               l6287 11D6  
                                             l6551 0EFA                                               l6481 1D16  
                                             l5825 1EEA                                               l5585 0D34  
                                             l5577 0D14                                               l5569 0CF4  
                                             l5497 1062                                               l5673 09F0  
                                             l5921 127E                                               l5729 2210  
                                             l6529 0C86                                               l6385 182E  
                                             l6553 0F08                                               l6545 0EDC  
                                             l6801 0224                                               l6475 1CF4  
                                             l5835 1F10                                               l5587 0D3C  
                                             l5579 0D1C                                               l5595 0D54  
                                             l5763 1AEC                                               l5755 1ACE  
                                             l5659 15A8                                               l5691 0A72  
                                             l5683 0A5C                                               l5915 1262  
                                             l6491 0F90                                               l6395 17C4  
                                             l6571 0F6A                                               l6563 0F44  
                                             l6555 0F12                                               l6539 0EC4  
                                             l5829 1EF4                                               l5589 0D44  
                                             l5757 1AE6                                               l5677 0A3C  
                                             l5669 09E6                                               l5767 1AF2  
                                             l5695 0ABE                                               l5687 0A68  
                                             l5679 0A54                                               l6495 0FAA  
                                             l6567 0F54                                               l6807 023A  
                                             l5881 13B0                                               l5873 1390  
                                             l5697 0AD6                                               l5929 12CE  
                                             l6825 02F2                                               l5971 144A  
                                             l5963 1432                                               l6499 0FB4  
                                             l6851 0354                                               l6843 0326  
                                             l6835 030C                                               l5885 13BA  
                                             l5877 13A0                                               l6861 037C  
                                             l6845 0344                                               l6773 01CC  
                                             l5983 146C                                               l5975 1454  
                                             l5967 143C                                               l5959 1426  
                                             l5895 1986                                               l6951 0636  
                                             l6855 0362                                               l6783 01EE  
                                             l6793 020E                                               l5979 145E  
                                             l5899 1996                                               l6891 0404  
                                             l6779 01DC                                               l6957 0676  
                                             l6983 0718                                               l6959 067C  
                                             l6967 06CC                                               l6887 03FA  
                                             l6985 0730                                               l6977 0702  
                                             l6987 0736                                               l6979 0708  
                                             _LATE 000F8D                                               _LATJ 000F91  
                                             u4500 2448                                               u5220 1A26  
                                             u5330 2400                                               u6130 0584  
                                             u4540 23E0                                               u4480 23D0  
                                             u5360 11EA                                               u4730 1AE2  
                                             u6307 1D6E                                               u6317 1D76  
                                             u4750 243A                                               u6407 2218  
                                             u6327 1D82                                               u6337 1D8A  
                                             u4674 1B38                                               u4675 1B32  
                                             u6347 1DDA                                               i2l28 1F68  
                                             u6357 1DE4                                               u5565 18F8  
                                             u4765 1BE0                                               u6367 1DF8  
                                             u4775 1B9C                                               u6377 1FEC  
                                             u6387 1FF4                                               u6397 2006  
                                  _BusyDistanceAcq 23F6                                      main@Ki_stored 0126  
                        __size_of_ConfigureBuggyIO 001A                                     Read1USART@data 00CE  
                                             _main 00F0                           __end_of_EnableSensorLEDS 24D6  
                          _NormaliseSensorReadings 1598                             __end_of_WirelessTx_ISR 21D0  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr0l 000FE9                                               fsr2h 000FDA  
                                             fsr1l 000FE1                                               indf2 000FDF  
                                             fsr2l 000FD9                             __size_ofi2_WriteTimer0 0012  
                           __size_ofi2_WriteTimer1 0012                                               pclat 000FFA  
                          ??_SendPIDSetPointOnLine 00D8               DisplaySensorStatuses@sensor_statuses 00CE  
                                             prodh 000FF4                                               prodl 000FF3  
                                   _ReadCharEEPROM 23B6                                               start 00EC  
                                  __end_of_OWReset 1E06                                         _OWWriteBit 1D5A  
                                    __CFG_IESO$OFF 000000                                _ConfigureInterrupts 20EA  
                                    main@Kp_stored 0122                                      _BusySensorAcq 23D6  
                                    _ReadIntEEPROM 1A3C                               __end_of_EnableMotors 24E6  
                                    __CFG_MCLRE$ON 000000                                         _GetCommand 24B4  
                                     ___param_bank 000010                                    __end_of_BusyADC 2440  
                                  __end_of_ReadADC 2322                                      ??_ReadMillis0 00D0  
                                    ??_ReadMillis1 00D0                                      ??_ReadMillis2 00D0  
                                  __end_of_OpenADC 1692                                      ??_SetDCMotorL 00D6  
                                    ??_SetDCMotorR 00D6                              _DisplaySensorStatuses 1AF8  
                                    __CFG_WAIT$OFF 000000                                    __end_of_StartTx 24B4  
                                    ??_ReadVoltage 00D3                                     _ReadEchoLength 248E  
                                            ?_main 002B                                    __end_of___awdiv 0F76  
                                            _EEADR 000FA9                                    __end_of___awmod 10E6  
                                   PutCharRxBuf@ch 00D5                                              _T0CON 000FD5  
                                  ___awdiv@divisor 00D0                                              _T1CON 000FCD  
                                            _T3CON 000FB1                                              i1l303 21CE  
                                            i1l280 1EAC                                     ?_SetADCChannel 002B  
                                            i1l952 009A                                              i1l793 0EA4  
                 __size_of_ResetAccumulatedCurrent 002C                                              i1l957 00A6  
                                  _CalibrateOnLine 197A                                              i2l946 1552  
                                  ___awdiv@counter 00D2                                              i2l949 155E  
                                    _UltrasoundISR 1F4E                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                     PutCharTxBuf@ch 00D5  
                            ??_SendStoredPIDValues 00DC                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                            CalculateSensorSum@sum 00D8                                              _TRISG 000F98  
                                            _TRISJ 000F9A                               ?_ConfigureInterrupts 002B  
                            __size_of_Delay10KTCYx 001E                                      __CFG_PWRT$OFF 000000  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                    __CFG_WRT4$OFF 000000                                      __CFG_WRT5$OFF 000000  
                                    __CFG_WRT6$OFF 000000                                      __CFG_WRT7$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                     __CFG_EBTR4$OFF 000000  
                                   __CFG_EBTR5$OFF 000000                                     __CFG_EBTR6$OFF 000000  
                                   __CFG_EBTR7$OFF 000000                             WriteCharEEPROM@address 00D1  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     i1___awmod@sign 0030  
          CalculateSensorStatuses@sensor_threshold 00D0                                     __CFG_EBTRB$OFF 000000  
                               __size_ofi1_ReadADC 0010                                              _isrHP 0008  
                                            _isrLP 0018                                         _Read1USART 2112  
                                       _ConvertADC 24DE                                    ??_LoadPIDValues 00DB  
                                   __CFG_BOREN$OFF 000000                                              tablat 000FF5  
                                       _ReadEEPROM 206E                             __end_of_ReadCharEEPROM 23C6  
                                            status 000FD8                              SendStoredPIDValues@Kd 00D8  
                            SendStoredPIDValues@Ki 00DA                              SendStoredPIDValues@Kp 00D6  
                                  ?_WirelessTx_ISR 002B                                 __size_ofi1___awmod 0082  
                                      _OWWriteByte 2042                                      _SetDCMotorPID 1196  
                                   ?_BusySensorAcq 002B                                     ?_ReadIntEEPROM 00D0  
                                    ?_SetPIDValues 002B                                         _FlushRxBuf 1EE4  
                                  _ConfigureTimer0 22CC                                    _ConfigureTimer1 229E  
                                  _ConfigureTimer2 24BC                                         _FlushTxBuf 1EAE  
                               __size_of_OWReadBit 0030                                    __initialization 21D0  
                                 ?_LoadCalibration 002B                                        _GetDistance 2322  
                               main@sensor_sum_ptr 0100                                       __end_of_main 0892  
                                       _ReadTimer1 2392                                __size_of_PB1pressed 005E  
                              __size_of_PB2pressed 005E                                       _Delay10KTCYx 220C  
                                    ??_SendOffsets 00D8                             __end_of_ReadEchoLength 2498  
                          __size_of_WriteIntEEPROM 0032                                   _CommandAvailable 2440  
                                       _Open1USART 1410                                   __end_of_OpenPWM4 21AA  
                                 __end_of_OpenPWM5 2184                                             ??_main 00E2  
                             __end_of_ConfigureADC 234A                                     ?_UltrasoundISR 002B  
                                    i2_WriteTimer0 23A4                               __end_of_ConfigurePWM 245C  
                                    i2_WriteTimer1 2380                                      __activetblptr 000003  
                                ReadVoltage@result 00D6                                __end_of_ReadMillis0 248E  
                              __end_of_ReadMillis1 2484                                __end_of_ReadMillis2 24AC  
                            ??_ConfigureInterrupts 00CE                                 __size_of_FlashLEDS 0028  
                                       _SetChanADC 222A                                _ConfigureUltrasound 20C2  
                                      ?_OWReadByte 002B                        __size_of_CalibrateThreshold 00A4  
                          __end_of_BusyDistanceAcq 2406                                __end_of_SetDCMotorL 2432  
                              __end_of_SetDCMotorR 2424                                __end_of_ReadVoltage 1912  
                            __end_of_DisableMotors 24EA                                             _ADCON0 000FC2  
                                           _ADCON1 000FC1                                             _ADCON2 000FC0  
                                ReadEEPROM@address 00CE                                             ?_isrHP 002B  
                                           ?_isrLP 002B                                             _ADRESH 000FC4  
                                           _EEADRH 000FAA                                             _ADRESL 000FC3  
                                           _EEDATA 000FA8                                        ?_Delay1TCYx 002B  
                                    ??_SetUnipolar 00CE                                             _CCPR4L 000F74  
                                           _CCPR5L 000F71                                             _EECON2 000FA7  
                                 ___awdiv@dividend 00CE                                    i1_SetADCChannel 0DBC  
                        ??_NormaliseSensorReadings 00D2                                         _SendStatus 1D94  
                                           i1l1059 2414                                             i1l1454 1516  
                                           i1l4201 2308                                             i1l4141 14BA  
                                           i1l5111 0092                                             i1l4161 150C  
                                           i1l4153 14F0                                             i1l4145 14C8  
                                           i1l4137 14AC                                             i1l4147 14D2  
                                           i1l4149 14DA                                             i1l4157 14FC  
                                        ??_OWReset 00CE                                    __CFG_BBSIZ$BB2K 000000  
                                           i1l4901 0E20                                             i1l4591 21C6  
                                           i1l4903 0E28                                             i1l4911 0E40  
                                           i1l4905 0E30                                         _OpenTimer0 2138  
                                       _OpenTimer1 1F1A                                             i1l4907 0E38  
                                       _OpenTimer3 1FB4                                             i1l4881 0DD0  
                                           i1l4891 0DF8                                             i1l4883 0DD8  
                                           i1l4893 0E00                                             i1l4885 0DE0  
                                           i1l4877 0DC0                                             i1l4895 0E08  
                                           i1l4887 0DE8                                             i1l4879 0DC8  
                                           i1l4897 0E10                                             i1l4889 0DF0  
                                           i1l4899 0E18                                             i2l6263 1F7E  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _PID_Kd 0092                                             _PID_Ki 0094  
                                           _PID_Kp 0096                           GenerateCalibration@index 00DE  
                                           _SPBRG1 000FAF                                    ?_ReadCharEEPROM 00D0  
                               __size_of_SetDCPWM4 0044                                 __size_of_SetDCPWM5 0044  
                                 _CalibrateOffsets 1384                                     ?_SetDCMotorPID 00D6  
                                        ??_BusyADC 00CE                                             _TXREG1 000FAD  
                                        ??_ReadADC 00D0                                             _TXSTA1 000FAC  
                             ?_ConfigureUltrasound 00D2                                _SetDirectionForward 24CA  
                                   ??_SetPIDValues 00D7                                        ?_OWWriteBit 002B  
                            __size_of_GetCharRxBuf 0046                                          ??_OpenADC 00D0  
                            __size_of_GetCharTxBuf 0038                         _sensor_readings_normalised 00A4  
                                           _BusyTx 23C6                                     __CFG_XINST$OFF 000000  
                                      ?_GetCommand 002B                                  ?_SetReverseMotorL 002B  
                                        ??_StartTx 00CE                                  __end_ofi1_ReadADC 2416  
                                           ___wmul 1E3E                                _sensor_readings_raw 00AE  
                                        ??___awdiv 00D2                             ?_DisplaySensorStatuses 00CE  
                                        ??___awmod 00D2                            __end_of_CalibrateOnLine 19DE  
                                 OpenTimer0@config 00CE                                 ??_SetReverseMotorL 00CE  
                                 OpenTimer1@config 00CE                                    ?_ReadEchoLength 00CE  
                           SendCurrentPIDValues@Kd 00D8                             SendCurrentPIDValues@Ki 00DA  
                           SendCurrentPIDValues@Kp 00D6                                             clear_0 21D6  
                                           clear_1 21E2                                   ___awdiv@quotient 00D4  
                                  ___awmod@divisor 00D0                                   OpenTimer3@config 00CE  
                                  ??_SetADCChannel 00D0                                     ?i2_WriteTimer0 0044  
                                   ?i2_WriteTimer1 0044                                    ___awmod@counter 00D2  
                            ReadCharEEPROM@address 00D0                                      ?_SendLineMode 00D6  
                         __size_of_WriteCharEEPROM 0012                                  __end_ofi1___awmod 1518  
                             ?_SetDirectionForward 002B                                __end_of_SendOffsets 1384  
                     ??_CalculateSensorSumDiscrete 00D0                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                __end_of_OWReadBit 2016                              WriteIntEEPROM@address 00D1  
                               main@find_line_flag 0108                                        ?_Read1USART 002B  
                                     _GetCharRxBuf 1B4C                                        ?_ConvertADC 002B  
                                     _GetCharTxBuf 1E76                            __end_of_ConfigureTimer0 22E2  
                          __end_of_ConfigureTimer1 22B6                            __end_of_ConfigureTimer2 24C4  
                                    main@stop_flag 0121                                   _ConfigureBuggyIO 2284  
                                      ?_ReadEEPROM 00CE                                         __accesstop 0060  
                          __end_of__initialization 21E8                              __size_of_EnableMotors 0004  
                                  ??_BusySensorAcq 00CE                                 _millisecond_COUNT0 000D  
                               _millisecond_COUNT1 000F                                 _millisecond_COUNT2 0011  
                               _millisecond_COUNT3 0013                                    ??_ReadIntEEPROM 00D2  
                                       _StopMotors 21EE                              ??_ConfigureUltrasound 00D8  
                         ??_SendBattVoltageInitial 00D8                      ConfigureUltrasound@echo_to_cm 00D2  
                    ConfigureUltrasound@echo_to_in 00D5                                      ___rparam_used 000001  
                              __end_of_SetUnipolar 24CA                                  __end_of_FlashLEDS 20C2  
                     __end_of_SendDefaultPIDValues 183E                                        ?_FlushRxBuf 002B  
                                      ?_FlushTxBuf 002B                                __size_of_OWReadByte 0038  
                                   __pcstackCOMRAM 002B                                        ?_ReadTimer1 0044  
                                      _ReadMillis0 2484                                        _ReadMillis1 247A  
                                      _ReadMillis2 24A2                                      __end_of_isrHP 1598  
                                    __end_of_isrLP 00EC                                __size_of_Delay1TCYx 0010  
                                  ??_UltrasoundISR 0046                                        _SetDCMotorL 2424  
                                      _SetDCMotorR 2416                                     ??_SendLineMode 00D8  
                                      ?_Open1USART 00CE                            _ResetAccumulatedCurrent 2016  
                                __end_of_SetDCPWM4 1BD6                                  __end_of_SetDCPWM5 1C1A  
                                      _ReadVoltage 18A8                              ??_SetDirectionForward 00CE  
                                    ?_ResetMillis0 002B                                      ?_ResetMillis1 002B  
                                    ?_ResetMillis2 002B                                      ?_ResetMillis3 002B  
                              i1SetChanADC@channel 002C                                        ?_SetChanADC 002B  
                          __end_ofi1_SetADCChannel 0EA6  CalculateSensorStatuses@sensor_readings_normalised 00CE  
                                  _sensor_acq_done 0022                        __end_of_MillisecondTimerISR 2284  
                             ReadIntEEPROM@address 00D0                       CalculateSensorStatuses@index 00D7  
                                 ?_BusyDistanceAcq 002B                                __size_of_OWWriteBit 003A  
                                     _EnableMotors 24E2                                       ??_PB1pressed 00D0  
                                     ??_PB2pressed 00D0                                __size_of_GetCommand 0008  
                                          ??_isrHP 00C0                                            ??_isrLP 0033  
                      __end_of_GenerateCalibration 1196                                 _CalculateSensorSum 0AE0  
                  CalculateSensorSumDiscrete@index 00D1                                        ?_SendStatus 002B  
                                       __pbssBANK0 0060                                    ??_SetDCMotorPID 00D8  
                                      ?_OpenTimer0 002B                                        ?_OpenTimer1 002B  
                                      ?_OpenTimer3 002B                                      ??_Write1USART 002B  
                     __end_of_SendCurrentPIDValues 18A8                            main@battery_current_acc 010B  
                           __size_of_SendThreshold 006C                                  ?_EnableSensorLEDS 002B  
                          main@battery_current_ptr 0104                                      ??_WriteEEPROM 00D1  
                                        ?_OpenPWM4 002B                                          ?_OpenPWM5 002B  
                              ?_CalculateSensorSum 00D4                      CalculateSensorSumDiscrete@sum 00D0  
                                          ?_BusyTx 002B                     __size_of_SendPIDSetPointOnLine 006C  
                               ??_EnableSensorLEDS 00CE                      __end_of_SendPIDSetPointOnLine 176A  
                            __size_of_ConfigureADC 0014                                            ?___wmul 00CE  
                                      _RxCharacter 0015                              __size_of_ConfigurePWM 000E  
                                 ?_CalibrateOnLine 002B                                    ??i2_WriteTimer0 0046  
                                  ??i2_WriteTimer1 0046                                 __end_of_PB1pressed 1AF8  
                                   _WriteIntEEPROM 1F82                                  main@PID_error_ptr 0102  
                                          _CCP4CON 000F73                                            _CCP5CON 000F70  
                                 WriteTimer0@timer 00D0                                 __end_of_PB2pressed 1A3C  
                                      _SendOffsets 12E2                                   WriteTimer1@timer 00D0  
                                    ??_WriteTimer0 00D0                                      ??_WriteTimer1 00D0  
                              __size_of_Read1USART 0026                                __size_of_ConvertADC 0004  
                                  _sensor_statuses 0025                                      ?_PutCharRxBuf 002B  
                                 SendOffsets@index 00DA                                      ?_PutCharTxBuf 002B  
                                   ??_ResetMillis0 00CE                                     ??_ResetMillis1 00CE  
                                   ??_ResetMillis2 00CE                                     ??_ResetMillis3 00CE  
                              __size_of_ReadEEPROM 002C                               ??_CalculateSensorSum 00D6  
                                 Open1USART@config 00D0                             SetPIDValues@char_index 00DA  
                             __end_of_SetPIDValues 09DA                                __size_of_FlushRxBuf 0036  
                                          _SPBRGH1 000F7F                                __size_of_FlushTxBuf 0036  
                          main@sensor_sum_discrete 0128                                  ??_WriteCharEEPROM 00D4  
                                      _TxCharacter 0019                                   ??_WirelessTx_ISR 0033  
                                      _SetUnipolar 24C4                                __size_of_ReadTimer1 0012  
                                          _OWReset 1DCE                           __end_of_CommandAvailable 244E  
                           SetDCMotorPID@PIDoutput 00D6                                   ?_ConfigureTimer0 002B  
                                 ?_ConfigureTimer1 002B                                   ?_ConfigureTimer2 002B  
                                       _convert_cm 00E6                                         _convert_in 00E9  
                                      ?_StopMotors 002B                                __size_of_Open1USART 0086  
                                     ?_OWWriteByte 002B                                       _ConfigureADC 2336  
                                          _BusyADC 2432                                            _ReadADC 230E  
                                     _ConfigurePWM 244E                                i2WriteTimer0@timer0 0044  
                                       ??_OpenPWM4 00CE                                         ??_OpenPWM5 00CE  
                  __size_of_SendBattVoltageInitial 0068                                i2WriteTimer1@timer1 0044  
                                          _OpenADC 1616                                            __Hparam 0000  
                              __size_of_SetChanADC 001E                                    __size_of_BusyTx 0010  
                                          __Lparam 0000                                __end_of_Write1USART 230E  
                                     ?_GetDistance 002B                             __end_of_WriteIntEEPROM 1FB4  
                                          _StartTx 24AC                                            ___awdiv 0EA6  
                                          ___awmod 1032                                    __size_of___wmul 0038  
                        ??_ResetAccumulatedCurrent 00D1                                __end_of_WriteEEPROM 1CDE  
                                    ?i1_ConvertADC 002B          CalculateSensorSumDiscrete@sensor_statuses 00CE  
                                ReadIntEEPROM@data 00D5                        __end_of_SendStoredPIDValues 17D4  
                                   ??_PutCharRxBuf 00D4                                    __CFG_STVREN$OFF 000000  
                                   ??_PutCharTxBuf 00D4                                            __pcinit 21D0  
                               WriteEEPROM@address 00CE                                            __ramtop 1000  
                              __size_of_SendStatus 003A                                __size_of_OpenTimer0 0026  
                              __size_of_OpenTimer1 0034                                __size_of_OpenTimer3 0032  
                                          __ptext0 00F0                                            __ptext1 0EA6  
                                          __ptext2 21EE                                            __ptext3 24C4  
                                          __ptext4 24D6                                            __ptext5 24DA  
                                          __ptext6 24CA                                            __ptext7 1196  
                                          __ptext8 2416                                            __ptext9 1B92  
                                     _get_Rx_index 001D                           __end_of_CalibrateOffsets 1410  
                                    _SendThreshold 1692                                          _T0CONbits 000FD5  
                         ?_CalculateSensorStatuses 00CE                                          _T1CONbits 000FCD  
                                     _get_Tx_index 001E         NormaliseSensorReadings@sensor_readings_raw 00CE  
               __end_of_CalculateSensorSumDiscrete 1D1E                         _CalculateSensorSumDiscrete 1CDE  
                                     ??_OWReadByte 00CF                                          _T2CONbits 000FCA  
                                 ?i1_SetADCChannel 002B                                          _T3CONbits 000FB1  
                                 ___awmod@dividend 00CE                                          _T4CONbits 000F76  
                             _SendDefaultPIDValues 17D4                                __end_of_WriteTimer0 2380  
                              __end_of_WriteTimer1 236E                                   ??_ReadCharEEPROM 00D2  
                                     ??_Delay1TCYx 00CE                                     OpenADC@config2 00CE  
                                   __pintcode_body 1518                                  _GetSensorReadings 22B6  
                             end_of_initialization 21E8                                     main@sensor_sum 011F  
                                  FlushRxBuf@index 00CE                                 ?_GetSensorReadings 002B  
                            __end_of_LoadPIDValues 0CCE                               __end_of_SendLineMode 1D5A  
                                          int_func 1518                                main@battery_current 010F  
                                    ?i1_SetChanADC 002B                                       ??_OWWriteBit 00CE  
     CalculateSensorSum@sensor_readings_normalised 00D4                            ??_DisplaySensorStatuses 00D0  
                                 ??_ReadEchoLength 00D0                                        _Rx_complete 0017  
                                     ??_GetCommand 00CF                                ??_GetSensorReadings 00D1  
                               __end_of_OWReadByte 1E3E                                    ?_WriteIntEEPROM 00D1  
                                          postdec2 000FDD                                main@battery_voltage 0119  
                                          postinc0 000FEE                                            postinc1 000FE6  
                                          postinc2 000FDE                                     ??i1_ConvertADC 002B  
                                        _PID_error 00B8                        __end_of_ConfigureInterrupts 2112  
                               __end_of_Delay1TCYx 23F6                                    FlushTxBuf@index 00CE  
                         __end_of_ConfigureBuggyIO 229E                                     ?_SendThreshold 00D6  
                       __end_of_CalibrateThreshold 12E2                                     GetCharRxBuf@ch 00D5  
                                        i1_ReadADC 2406                                          _PORTBbits 000F81  
                                        _PORTHbits 000F87                           __size_of_LoadCalibration 00BC  
                                   GetCharTxBuf@ch 0032                             _SendBattVoltageInitial 1912  
                                _SetForwardsMotorR 24DA                               _SendCurrentPIDValues 183E  
                              __size_of_StopMotors 001E                              ?_SendDefaultPIDValues 00D6  
                                      _Tx_complete 001A                                          _TRISCbits 000F94  
                               ?_SetForwardsMotorR 002B                          __size_of_SetReverseMotorL 0004  
                                        _TRISGbits 000F98                                          _TRISHbits 000F99  
                                       main@D_temp 011B                                 __end_of_OWWriteBit 1D94  
                        __end_of_GetSensorReadings 22CC                                          i1___awmod 1496  
                                       main@I_temp 011D                             main@wall_detected_flag 0118  
                                     ??_Read1USART 00CE                                 __end_of_GetCommand 24BC  
                                     ??_ConvertADC 00CE                                          _OWReadBit 1FE6  
                              ??_SetForwardsMotorR 00CE                                       ??_ReadEEPROM 00D0  
                                      _Write1USART 22F8                                     ??i1_SetChanADC 002B  
                             __end_of_ResetMillis0 247A                               __end_of_ResetMillis1 2470  
                             __end_of_ResetMillis2 24A2                               __end_of_ResetMillis3 2466  
                           i1SetADCChannel@channel 002D                                        _WriteEEPROM 1C9E  
                                     ??_FlushRxBuf 00CE                                       ??_FlushTxBuf 00CE  
            NormaliseSensorReadings@sensor_offsets 00D0                              SetDCMotorL@duty_cycle 00D4  
                                   __end_of_BusyTx 23D6                                  _ConfigureWireless 2248  
                                     ??_ReadTimer1 0046                                          _FlashLEDS 209A  
                                     ?_ReadMillis0 00CE                                       ?_ReadMillis1 00CE  
                                     ?_ReadMillis2 00CE                               _second_rollover_flag 0021  
                           __size_of_DisableMotors 0004                    __end_of_CalculateSensorStatuses 0AE0  
                               ?_ConfigureWireless 002B                                     __end_of___wmul 1E76  
                                     ?_SetDCMotorL 00D4                                       ?_SetDCMotorR 00D4  
                                     ??_Open1USART 00D0                              __size_of_SetPIDValues 0148  
                                      _WriteTimer0 236E                                        _WriteTimer1 235C  
                        __end_of_SetForwardsMotorR 24DE                                 __end_of_Read1USART 2138  
                                       ?i1_ReadADC 002B                                 __end_of_ConvertADC 24E2  
                                     ?_ReadVoltage 00D1                              ?_SendCurrentPIDValues 00D6  
                            __end_of_SetADCChannel 0DBC                                       ??_SetChanADC 00CE  
                               __end_of_ReadEEPROM 209A                            main@battery_voltage_ptr 0115  
                              ??_ConfigureWireless 00D1                                start_initialization 21D0  
                         ?_NormaliseSensorReadings 00CE                           main@sensor_threshold_ptr 0129  
                                        _SetDCPWM4 1B92                                          _SetDCPWM5 1BD6  
                                       ?i1___awmod 002B                                 __end_of_FlushRxBuf 1F1A  
                               __end_of_FlushTxBuf 1EE4                                    SetDCPWM4@DCycle 00D2  
                      __end_of_ConfigureUltrasound 20EA                                    SetDCPWM5@DCycle 00D2  
                                     ??_SendStatus 00D6                                       ??_OpenTimer0 00CE  
                                     ??_OpenTimer1 00CE                                       ??_OpenTimer3 00CE  
                                       ?_OWReadBit 002B                                      _echo_acq_done 001C  
                               __end_of_ReadTimer1 23A4                                   OWReadByte@result 00CF  
                             __end_of_PutCharRxBuf 1C5C                               __end_of_PutCharTxBuf 1C9E  
                                      _SystemClock 0001                                   _sensor_acq_index 0023  
                               __end_of_Open1USART 1496                              __end_of_BusySensorAcq 23E6  
                             SetADCChannel@channel 00D0                              __end_of_ReadIntEEPROM 1A9A  
                        __end_of_ConfigureWireless 2266                                           ??_BusyTx 00CE  
                             __size_of_OWWriteByte 002C                                       _SetPIDValues 0892  
                               __end_of_SetChanADC 2248                                  __size_of_OpenPWM4 0026  
                                __size_of_OpenPWM5 0026                                           ??___wmul 00D2  
                                       ?_FlashLEDS 002B                        __end_of_SetDirectionForward 24D0  
                                  ??_SendThreshold 00D8                                 i1___awmod@dividend 002B  
                                 __CFG_LPT1OSC$OFF 000000                               __size_of_GetDistance 0014  
                                     ?_SendOffsets 00D6                                          _Rx_buffer 0060  
                                  _WriteCharEEPROM 234A                          __size_of_EnableSensorLEDS 0006  
                               __end_of_SendStatus 1DCE                              __end_of_UltrasoundISR 1F82  
                               __end_of_OpenTimer0 215E                                 __end_of_OpenTimer1 1F4E  
                               __end_of_OpenTimer3 1FE6                                       OWWriteByte@i 00D0  
                           ??_SendDefaultPIDValues 00DC                                          _Tx_buffer 0079  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00BE  
                                    __pcstackBANK1 0100                                         ?_SetDCPWM4 00CE  
                                       ?_SetDCPWM5 00CE                         __size_of_GetSensorReadings 0016  
                            __size_of_SendLineMode 003C                                  ??_LoadCalibration 00DF  
                                    _PID_set_point 00BA                                      _DisableMotors 24E6  
                                     ?_SetUnipolar 002B                               __end_ofi1_ConvertADC 24EE  
                     __size_of_MillisecondTimerISR 001E                                           ?_OWReset 002B  
                                ?_CommandAvailable 002B                           __size_of_BusyDistanceAcq 0010  
                            __end_of_SetDCMotorPID 123E                                       ??_StopMotors 00D6  
                               WriteIntEEPROM@data 00D3                                           ?_BusyADC 002B  
                                         ?_ReadADC 00CE                                          __pnvBANK0 00E6  
                     __size_of_GenerateCalibration 00B0                                 ??_CommandAvailable 00CE  
                                OpenADC@portconfig 00CF                                           ?_OpenADC 00CE  
                                   _sensor_offsets 009A                                          _echo_time 000B  
                                __CFG_CCP2MX$PORTC 000000                                          __pintcode 0008  
                                  main@command_msg 0117                                           ?_StartTx 002B  
                                         ?___awdiv 00CE                                          __ptext100 23F6  
                                        __ptext102 0DBC                                          __ptext111 1F4E  
                                        __ptext103 22E2                                          __ptext112 2380  
                                        __ptext104 2406                                          __ptext113 2392  
                                        __ptext105 24EA                                          __ptext114 2266  
                                        __ptext106 21AA                                          __ptext115 23A4  
                                        __ptext107 22F8                                          __ptext108 1E76  
                                        __ptext109 1496                                           ?___awmod 00CE  
                                      OWReadByte@i 00D0                              _SendPIDSetPointOnLine 16FE  
                                    ?_Delay10KTCYx 002B                        main@battery_current_acc_ptr 0106  
                                      __pintcodelo 0018                                    Open1USART@spbrg 00CE  
                       __size_of_SetForwardsMotorR 0004                             ??_SendCurrentPIDValues 00DC  
                            __end_ofi2_WriteTimer0 23B6                              __end_ofi2_WriteTimer1 2392  
                  __end_of_NormaliseSensorReadings 1616                                        ??i1_ReadADC 002D  
                                 _sensor_threshold 00BC                                       _SendLineMode 1D1E  
                                ?_CalibrateOffsets 002B                              SendLineMode@line_mode 00D6  
                                WriteTimer0@timer0 00CE                               __end_ofi1_SetChanADC 22F8  
                      __size_of_CalculateSensorSum 00F8                                  WriteTimer1@timer1 00CE  
                      ?_CalculateSensorSumDiscrete 00CE                                 i2WriteTimer0@timer 00BE  
                               __end_of_StopMotors 220C                           __size_of_CalibrateOnLine 0064  
                               i2WriteTimer1@timer 00BE                                 ??_CalibrateOffsets 00D7  
                                 _SetReverseMotorL 24D6        CalibrateThreshold@sensor_threshold_temp_ptr 00D8  
                                      ??i1___awmod 002F                                     ?_DisableMotors 002B  
                                        _line_mode 002A                                     __size_of_isrHP 1590  
                                   __size_of_isrLP 00D4                                    Write1USART@data 002B  
                            __size_of_ResetMillis0 000A                              __size_of_ResetMillis1 000A  
                            __size_of_ResetMillis2 000A                              __size_of_ResetMillis3 000A  
                                  OWReadBit@result 00CE                                        ??_OWReadBit 00CE  
                 __size_of_CalculateSensorStatuses 0106                                     ___wmul@product 00D2  
                                    OpenADC@config 00D2                                           _LATDbits 000F8C  
                                         _LATEbits 000F8D                                           _LATHbits 000F90  
                                 ??_WriteIntEEPROM 00D5                                           _IPR1bits 000F9F  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                       __size_of_ConfigureWireless 001E                         DisplaySensorStatuses@index 00D2  
                      main@send_battery_stats_flag 010A                             SendDefaultPIDValues@Kd 00D8  
                           SendDefaultPIDValues@Ki 00DA                             SendDefaultPIDValues@Kp 00D6  
                                         _PIR1bits 000F9E                                           _PIR2bits 000FA1  
                                         _DCmotorL 0007                                           _DCmotorR 0009  
                            __CFG_DATABW$DATA16BIT 000000                            __end_of_WriteCharEEPROM 235C  
                   __size_of_DisplaySensorStatuses 0054                                           _RCONbits 000FD0  
                         __size_of_ConfigureTimer0 0016                           __size_of_ConfigureTimer1 0018  
                         __size_of_ConfigureTimer2 0008                      __end_of_DisplaySensorStatuses 1B4C  
                                 __CFG_WDTPS$32768 000000                                     ??_Delay10KTCYx 00CE  
                            SetDCMotorR@duty_cycle 00D4                                        ??_FlashLEDS 00D0  
                          ?_SendBattVoltageInitial 00D6                               __size_of_ReadMillis0 000A  
                             __size_of_ReadMillis1 000A                               __size_of_ReadMillis2 000A  
                                __CFG_ECCPMX$PORTH 000000                                         _ADCON0bits 000FC2  
                                ?_ConfigureBuggyIO 002B                                  ___wmul@multiplier 00CE  
                             __size_of_SetDCMotorL 000E                               __size_of_SetDCMotorR 000E  
                                     _ResetMillis0 2470                                       _ResetMillis1 2466  
                                     _ResetMillis2 2498                                       _ResetMillis3 245C  
                               ??_ConfigureBuggyIO 00CE                               __size_of_ReadVoltage 006A  
                     __size_of_SendStoredPIDValues 006A                                        ??_SetDCPWM4 00D0  
                                      ??_SetDCPWM5 00D0                                   Delay10KTCYx@unit 00CF  
                            __size_of_PutCharRxBuf 0042                              __size_of_PutCharTxBuf 0042  
                                      _INTCON2bits 000FF1                                      ?_GetCharRxBuf 002B  
                                      _INTCON3bits 000FF0                                      ?_GetCharTxBuf 002B  
                               _CalibrateThreshold 123E                           __size_ofi1_SetADCChannel 00EA  
                                 __size_of_OWReset 0038                                       ?_Write1USART 002B  
                                       _EECON1bits 000FA6                                           _OpenPWM4 2184  
                                         _OpenPWM5 215E                                       ?_WriteEEPROM 00CE  
                              ?_CalibrateThreshold 002B                                   __size_of_BusyADC 000E  
                                 __size_of_ReadADC 0014                                           __Hrparam 0000  
                         ?_ResetAccumulatedCurrent 002B                            __size_of_WirelessTx_ISR 0026  
                                 __size_of_OpenADC 007C                                           __Lrparam 0000  
                    SendThreshold@sensor_threshold 00D6                                  ??_BusyDistanceAcq 00CE  
                           ?_SendPIDSetPointOnLine 00D6                     __end_of_SendBattVoltageInitial 197A  
                                i1___awmod@divisor 002D                                        OWWriteBit@b 00CE  
                                i1___awmod@counter 002F                                   __size_of_StartTx 0008  
                                 __size_of___awdiv 00D0                                   __size_of___awmod 00B4  
                                     ?_WriteTimer0 00CE                                       ?_WriteTimer1 00CE  
                                 _EnableSensorLEDS 24D0                                       _PutCharRxBuf 1C1A  
                                     _PutCharTxBuf 1C5C                               __size_of_SendOffsets 00A2  
                           __size_of_LoadPIDValues 00F6                                _system_clock_enable 0024  
                             ??_CalibrateThreshold 00D8                       __size_of_ConfigureInterrupts 0028  
                            __size_ofi1_ConvertADC 0004                                    ??_DisableMotors 00CE  
                                    ?_EnableMotors 002B                                 SetDCPWM4@dutycycle 00CE  
                                   OpenPWM4@period 00CE                                           __ptext10 2424  
                                         __ptext11 1BD6                                           __ptext20 245C  
                                         __ptext12 1692                                           __ptext21 2466  
                                         __ptext13 176A                                           __ptext30 247A  
                                         __ptext22 2470                                           __ptext14 16FE  
                                         __ptext31 2484                                           __ptext23 2016  
                                         __ptext15 12E2                                           __ptext40 23B6  
                                         __ptext32 248E                                           __ptext24 18A8  
                                         __ptext16 1D1E                                           __ptext41 206E  
                                         __ptext33 0BD8                                           __ptext25 2042  
                                         __ptext17 17D4                                           __ptext50 1AF8  
                                         __ptext42 10E6                                           __ptext34 0892  
                                         __ptext26 1D5A                                           __ptext18 183E  
                                         __ptext51 09DA                                           __ptext43 1F82  
                                         __ptext35 1C1A                                           __ptext27 1DCE  
                                         __ptext19 1912                                           __ptext60 1C5C  
                                         __ptext52 2432                                           __ptext44 234A  
                                         __ptext36 1B4C                                           __ptext28 1E06  
                                         __ptext61 1032                                           __ptext53 197A  
                                         __ptext45 1C9E                                           __ptext37 19DE  
                                         __ptext29 1FE6                                           __ptext70 0CCE  
                                         __ptext62 23C6                                           __ptext54 1598  
                                         __ptext46 209A                                           __ptext38 0F76  
                                         __ptext71 222A                                           __ptext63 1A9A  
                                         __ptext55 0AE0                                           __ptext47 220C  
                                         __ptext39 1A3C                                           __ptext80 1410  
                                         __ptext72 24DE                                           __ptext64 2498  
                                         __ptext56 1E3E                                           __ptext48 123E  
                                         __ptext81 1EAE                                           __ptext73 23D6  
                                         __ptext65 24A2                                           __ptext57 1384  
                                         __ptext49 230E                                           __ptext90 236E  
                                         __ptext82 1EE4                                           __ptext74 2322  
                                         __ptext66 24B4                                           __ptext58 1D94  
                                         __ptext91 2138                                           __ptext83 20C2  
                                         __ptext75 23E6                                           __ptext67 2112  
                                         __ptext59 24AC                                           __ptext92 244E  
                                         __ptext84 24BC                                           __ptext76 24D0  
                                         __ptext68 2440                                           __ptext93 215E  
                                         __ptext85 1FB4                                           __ptext77 24E2  
                                         __ptext69 22B6                                           __ptext94 2184  
                                         __ptext86 229E                                           __ptext78 24E6  
                                         __ptext95 20EA                                           __ptext87 235C  
                                         __ptext79 2248                                           __ptext96 2284  
                                         __ptext88 1F1A                                           __ptext97 2336  
                                         __ptext89 22CC                                     OpenPWM5@period 00CE  
                                         __ptext98 1616                                           __ptext99 1CDE  
                                   ??_GetCharRxBuf 00D4                                     ??_GetCharTxBuf 0031  
                                ??_CalibrateOnLine 00DA                                 SetDCPWM5@dutycycle 00CE  
                             __size_of_SetUnipolar 0006                                      __size_of_main 07A2  
                                   Delay1TCYx@unit 00CE                   __size_of_NormaliseSensorReadings 007E  
                          __size_of_ReadCharEEPROM 0010                __size_of_CalculateSensorSumDiscrete 0040  
                                 ?_WriteCharEEPROM 00D1            CalibrateThreshold@sensor_threshold_temp 00DA  
                            __size_ofi1_SetChanADC 0016                                       i1_ConvertADC 24EA  
                              _MillisecondTimerISR 2266                                    _LoadCalibration 0F76  
                                    _USART1_Status 001B                                  ??_ConfigureTimer0 00D2  
                                ??_ConfigureTimer1 00D2                                  ??_ConfigureTimer2 00CF  
                          __size_of_ReadEchoLength 000A                              __CFG_ADDRBW$ADDR20BIT 000000  
                     NormaliseSensorReadings@index 00D6                                _GenerateCalibration 10E6  
                                       _INTCONbits 000FF2                                     ??_EnableMotors 00CE  
                                _Rx_chars_received 0016                                         _PB1pressed 1A9A  
                                       _PB2pressed 19DE                                      OWReset@result 00CE  
                             __end_of_Delay10KTCYx 222A                               ?_MillisecondTimerISR 002B  
                                         intlevel1 0000                                           intlevel2 0000  
                          _CalculateSensorStatuses 09DA                    __end_of_ResetAccumulatedCurrent 2042  
                                    ??_OWWriteByte 00CF                                      ?_ConfigureADC 002B  
                                    ?_ConfigurePWM 002B                                      _LoadPIDValues 0BD8  
                             ?_GenerateCalibration 002B                                  SetChanADC@channel 00CF  
                                       _RCSTA1bits 000FAB                       __size_of_ConfigureUltrasound 0028  
                                  WriteEEPROM@data 00D0                                       i1_SetChanADC 22E2  
                                    _Rx_msg_length 0018                             __size_of_SetADCChannel 00EE  
                            SendStatus@status_code 00D6                                  ??i1_SetADCChannel 002D  
                         __end_of_SetReverseMotorL 24DA                                      ??_GetDistance 00CF  
                   SendPIDSetPointOnLine@set_point 00D6                              main@PID_set_point_ptr 0113  
                        __size_of_CommandAvailable 000E                      SendBattVoltageInitial@reading 00D6  
                            __end_of_SendThreshold 16FE                                         _PID_output 0098  
                     __size_of_SetDirectionForward 0006                           SendOffsets@offsets_array 00D6  
                           __size_of_BusySensorAcq 0010                      __size_of_SendDefaultPIDValues 006A  
                           __size_of_ReadIntEEPROM 005E                              ??_MillisecondTimerISR 0046  
                                   ??_ConfigureADC 00D3                                     ??_ConfigurePWM 00CF  
                                   ?_LoadPIDValues 002B                                    OWWriteByte@byte 00CF  
                        __size_of_CalibrateOffsets 008C                              ??_GenerateCalibration 00DC  
                           __size_of_UltrasoundISR 0034                               __size_of_Write1USART 0016  
                                     _put_Rx_index 001F                                     _WirelessTx_ISR 21AA  
                              _SendStoredPIDValues 176A                            __end_of_LoadCalibration 1032  
                                     _put_Tx_index 0020  
