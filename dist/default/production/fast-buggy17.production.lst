

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Mar 26 20:03:38 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           	psect	smallconst
   104  001000                     __psmallconst:
   105                           	opt stack 0
   106  001000  00                 	db	0
   107  001001                     exp@coeff:
   108                           	opt stack 0
   109  001001  00                 	db	0
   110  001002  80                 	db	128
   111  001003  3F                 	db	63
   112  001004  72                 	db	114
   113  001005  31                 	db	49
   114  001006  3F                 	db	63
   115  001007  FE                 	db	254
   116  001008  75                 	db	117
   117  001009  3E                 	db	62
   118  00100A  58                 	db	88
   119  00100B  63                 	db	99
   120  00100C  3D                 	db	61
   121  00100D  95                 	db	149
   122  00100E  1D                 	db	29
   123  00100F  3C                 	db	60
   124  001010  C5                 	db	197
   125  001011  AE                 	db	174
   126  001012  3A                 	db	58
   127  001013  79                 	db	121
   128  001014  21                 	db	33
   129  001015  39                 	db	57
   130  001016  94                 	db	148
   131  001017  80                 	db	128
   132  001018  37                 	db	55
   133  001019  93                 	db	147
   134  00101A  A7                 	db	167
   135  00101B  35                 	db	53
   136  00101C  56                 	db	86
   137  00101D  15                 	db	21
   138  00101E  34                 	db	52
   139  00101F                     __end_ofexp@coeff:
   140                           	opt stack 0
   141  00101F                     log@coeff:
   142                           	opt stack 0
   143  00101F  00                 	db	0
   144  001020  00                 	db	0
   145  001021  00                 	db	0
   146  001022  00                 	db	0
   147  001023  80                 	db	128
   148  001024  3F                 	db	63
   149  001025  F0                 	db	240
   150  001026  FF                 	db	255
   151  001027  BE                 	db	190
   152  001028  E2                 	db	226
   153  001029  A9                 	db	169
   154  00102A  3E                 	db	62
   155  00102B  83                 	db	131
   156  00102C  76                 	db	118
   157  00102D  BE                 	db	190
   158  00102E  AE                 	db	174
   159  00102F  2B                 	db	43
   160  001030  3E                 	db	62
   161  001031  3C                 	db	60
   162  001032  C3                 	db	195
   163  001033  BD                 	db	189
   164  001034  D2                 	db	210
   165  001035  13                 	db	19
   166  001036  3D                 	db	61
   167  001037  78                 	db	120
   168  001038  D3                 	db	211
   169  001039  BB                 	db	187
   170  00103A                     __end_oflog@coeff:
   171                           	opt stack 0
   172  00103A  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	nvCOMRAM
   175  000046                     __pnvCOMRAM:
   176                           	opt stack 0
   177  000046                     _echo_acq_done:
   178                           	opt stack 0
   179  000046                     	ds	1
   180                           
   181                           	psect	nvBANK0
   182  0000DE                     __pnvBANK0:
   183                           	opt stack 0
   184  0000DE                     _convert_cm:
   185                           	opt stack 0
   186  0000DE                     	ds	3
   187  0000E1                     _convert_in:
   188                           	opt stack 0
   189  0000E1                     	ds	3
   190  0000                     _ADCON0	set	4034
   191  0000                     _ADCON0bits	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ADCON2	set	4032
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADRESL	set	4035
   196  0000                     _CCP4CON	set	3955
   197  0000                     _CCP5CON	set	3952
   198  0000                     _CCPR4L	set	3956
   199  0000                     _CCPR5L	set	3953
   200  0000                     _INTCON2bits	set	4081
   201  0000                     _INTCONbits	set	4082
   202  0000                     _IPR1bits	set	3999
   203  0000                     _LATDbits	set	3980
   204  0000                     _LATE	set	3981
   205  0000                     _LATEbits	set	3981
   206  0000                     _LATJ	set	3985
   207  0000                     _LATJbits	set	3985
   208  0000                     _PIE1bits	set	3997
   209  0000                     _PIR1bits	set	3998
   210  0000                     _PORTBbits	set	3969
   211  0000                     _PR2	set	4043
   212  0000                     _PR4	set	3959
   213  0000                     _RCONbits	set	4048
   214  0000                     _T0CON	set	4053
   215  0000                     _T0CONbits	set	4053
   216  0000                     _T1CON	set	4045
   217  0000                     _T1CONbits	set	4045
   218  0000                     _T2CON	set	4042
   219  0000                     _T2CONbits	set	4042
   220  0000                     _T3CONbits	set	4017
   221  0000                     _T4CONbits	set	3958
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR1H	set	4047
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR2	set	4044
   227  0000                     _TRISA	set	3986
   228  0000                     _TRISB	set	3987
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISD	set	3989
   231  0000                     _TRISE	set	3990
   232  0000                     _TRISG	set	3992
   233  0000                     _TRISGbits	set	3992
   234  0000                     _TRISJ	set	3994
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  002D36                     __pcinit:
   240                           	opt stack 0
   241  002D36                     start_initialization:
   242                           	opt stack 0
   243  002D36                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK0 (26 bytes)
   247  002D36  EE00  F0C4         	lfsr	0,__pbssBANK0
   248  002D3A  0E1A               	movlw	26
   249  002D3C                     clear_0:
   250  002D3C  6AEE               	clrf	postinc0,c
   251  002D3E  06E8               	decf	wreg,f,c
   252  002D40  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to COMRAM (36 bytes)
   255  002D42  EE00  F001         	lfsr	0,__pbssCOMRAM
   256  002D46  0E24               	movlw	36
   257  002D48                     clear_1:
   258  002D48  6AEE               	clrf	postinc0,c
   259  002D4A  06E8               	decf	wreg,f,c
   260  002D4C  E1FD               	bnz	clear_1
   261  002D4E                     end_of_initialization:
   262                           	opt stack 0
   263  002D4E                     __end_of__initialization:
   264                           	opt stack 0
   265  002D4E  0100               	movlb	0
   266  002D50  EF5D  F009         	goto	_main	;jump to C main() function
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           
   270                           	psect	bssCOMRAM
   271  000001                     __pbssCOMRAM:
   272                           	opt stack 0
   273  000001                     _sensor_readings_raw:
   274                           	opt stack 0
   275  000001                     	ds	10
   276  00000B                     _SystemClock:
   277                           	opt stack 0
   278  00000B                     	ds	6
   279  000011                     _DCmotorL:
   280                           	opt stack 0
   281  000011                     	ds	2
   282  000013                     _DCmotorR:
   283                           	opt stack 0
   284  000013                     	ds	2
   285  000015                     _echo_time:
   286                           	opt stack 0
   287  000015                     	ds	2
   288  000017                     _millisecond_COUNT:
   289                           	opt stack 0
   290  000017                     	ds	2
   291  000019                     _sensor_threshold:
   292                           	opt stack 0
   293  000019                     	ds	2
   294  00001B                     _line_mode:
   295                           	opt stack 0
   296  00001B                     	ds	1
   297  00001C                     _second_rollover_flag:
   298                           	opt stack 0
   299  00001C                     	ds	1
   300  00001D                     _sensor_acq_done:
   301                           	opt stack 0
   302  00001D                     	ds	1
   303  00001E                     _sensor_acq_index:
   304                           	opt stack 0
   305  00001E                     	ds	1
   306  00001F                     _system_clock_enable:
   307                           	opt stack 0
   308  00001F                     	ds	1
   309  000020                     _sensor_status:
   310                           	opt stack 0
   311  000020                     	ds	5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	bssBANK0
   316  0000C4                     __pbssBANK0:
   317                           	opt stack 0
   318  0000C4                     _sensor_offsets:
   319                           	opt stack 0
   320  0000C4                     	ds	10
   321  0000CE                     _sensor_readings_normalised:
   322                           	opt stack 0
   323  0000CE                     	ds	10
   324  0000D8                     _PID_output:
   325                           	opt stack 0
   326  0000D8                     	ds	2
   327  0000DA                     _errno:
   328                           	opt stack 0
   329  0000DA                     	ds	2
   330  0000DC                     _PID_error:
   331                           	opt stack 0
   332  0000DC                     	ds	2
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336                           	psect	cstackBANK0
   337  000060                     __pcstackBANK0:
   338                           	opt stack 0
   339  000060                     ??_isrHP:
   340                           
   341                           ; 0 bytes @ 0x0
   342  000060                     	ds	14
   343  00006E                     ??___ftge:
   344  00006E                     ?___ftdiv:
   345                           	opt stack 0
   346  00006E                     ?___awtoft:
   347                           	opt stack 0
   348  00006E                     ?___lbtoft:
   349                           	opt stack 0
   350  00006E                     ?___lltoft:
   351                           	opt stack 0
   352  00006E                     SetDCMotorPID@PIDoutput:
   353                           	opt stack 0
   354  00006E                     ___awtoft@c:
   355                           	opt stack 0
   356  00006E                     ConfigureUltrasound@echo_to_cm:
   357                           	opt stack 0
   358  00006E                     ___ftdiv@f1:
   359                           	opt stack 0
   360  00006E                     ___lltoft@c:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0xE
   364  00006E                     	ds	2
   365  000070                     ??_SetDCMotorPID:
   366                           
   367                           ; 0 bytes @ 0x10
   368  000070                     	ds	1
   369  000071                     ___awtoft@sign:
   370                           	opt stack 0
   371  000071                     ___lbtoft@c:
   372                           	opt stack 0
   373  000071                     ConfigureUltrasound@echo_to_in:
   374                           	opt stack 0
   375  000071                     ___ftdiv@f2:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x11
   379  000071                     	ds	1
   380  000072                     ??___lltoft:
   381  000072                     ?___ftmul:
   382                           	opt stack 0
   383  000072                     ___ftmul@f1:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x12
   387  000072                     	ds	2
   388  000074                     ??___ftdiv:
   389                           
   390                           ; 0 bytes @ 0x14
   391  000074                     	ds	1
   392  000075                     ___ftmul@f2:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x15
   396  000075                     	ds	1
   397  000076                     ___lltoft@exp:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x16
   401  000076                     	ds	1
   402  000077                     ___ftdiv@cntr:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x17
   406  000077                     	ds	1
   407  000078                     ??___ftmul:
   408  000078                     ___ftdiv@f3:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x18
   412  000078                     	ds	3
   413  00007B                     ___ftdiv@exp:
   414                           	opt stack 0
   415  00007B                     ___ftmul@exp:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x1B
   419  00007B                     	ds	1
   420  00007C                     ___ftdiv@sign:
   421                           	opt stack 0
   422  00007C                     ___ftmul@f3_as_product:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x1C
   426  00007C                     	ds	3
   427  00007F                     ___ftmul@cntr:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x1F
   431  00007F                     	ds	1
   432  000080                     ___ftmul@sign:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x20
   436  000080                     	ds	1
   437  000081                     ?___ftadd:
   438                           	opt stack 0
   439  000081                     ?___fttol:
   440                           	opt stack 0
   441  000081                     ___ftadd@f1:
   442                           	opt stack 0
   443  000081                     ___fttol@f1:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0x21
   447  000081                     	ds	3
   448  000084                     ___ftadd@f2:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0x24
   452  000084                     	ds	1
   453  000085                     ??___fttol:
   454                           
   455                           ; 0 bytes @ 0x25
   456  000085                     	ds	2
   457  000087                     ??___ftadd:
   458                           
   459                           ; 0 bytes @ 0x27
   460  000087                     	ds	3
   461  00008A                     ___ftadd@sign:
   462                           	opt stack 0
   463  00008A                     ___fttol@sign1:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2A
   467  00008A                     	ds	1
   468  00008B                     ___ftadd@exp2:
   469                           	opt stack 0
   470  00008B                     ___fttol@lval:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x2B
   474  00008B                     	ds	1
   475  00008C                     ___ftadd@exp1:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x2C
   479  00008C                     	ds	1
   480  00008D                     ?___ftsub:
   481                           	opt stack 0
   482  00008D                     ?_eval_poly:
   483                           	opt stack 0
   484  00008D                     ___ftsub@f1:
   485                           	opt stack 0
   486  00008D                     eval_poly@x:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x2D
   490  00008D                     	ds	2
   491  00008F                     ___fttol@exp1:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x2F
   495  00008F                     	ds	1
   496  000090                     ?___altoft:
   497                           	opt stack 0
   498  000090                     eval_poly@d:
   499                           	opt stack 0
   500  000090                     ___ftsub@f2:
   501                           	opt stack 0
   502  000090                     ___altoft@c:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x30
   506  000090                     	ds	2
   507  000092                     eval_poly@n:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x32
   511  000092                     	ds	2
   512  000094                     ??_eval_poly:
   513  000094                     ??___altoft:
   514                           
   515                           ; 0 bytes @ 0x34
   516  000094                     	ds	2
   517  000096                     eval_poly@res:
   518                           	opt stack 0
   519                           
   520                           ; 3 bytes @ 0x36
   521  000096                     	ds	2
   522  000098                     ___altoft@exp:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x38
   526  000098                     	ds	1
   527  000099                     ?_log:
   528                           	opt stack 0
   529  000099                     ?_ldexp:
   530                           	opt stack 0
   531  000099                     ___altoft@sign:
   532                           	opt stack 0
   533  000099                     ldexp@value:
   534                           	opt stack 0
   535  000099                     log@x:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x39
   539  000099                     	ds	1
   540  00009A                     ?_floor:
   541                           	opt stack 0
   542  00009A                     floor@x:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x3A
   546  00009A                     	ds	2
   547  00009C                     ldexp@newexp:
   548                           	opt stack 0
   549  00009C                     log@exponent:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x3C
   553  00009C                     	ds	1
   554  00009D                     floor@i:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x3D
   558  00009D                     	ds	1
   559  00009E                     ??_ldexp:
   560                           
   561                           ; 0 bytes @ 0x3E
   562  00009E                     	ds	2
   563  0000A0                     floor@expon:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x40
   567  0000A0                     	ds	2
   568  0000A2                     ?_exp:
   569                           	opt stack 0
   570  0000A2                     exp@x:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x42
   574  0000A2                     	ds	3
   575  0000A5                     _exp$2928:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x45
   579  0000A5                     	ds	3
   580  0000A8                     exp@exponent:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x48
   584  0000A8                     	ds	2
   585  0000AA                     exp@sign:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x4A
   589  0000AA                     	ds	1
   590  0000AB                     ?_pow:
   591                           	opt stack 0
   592  0000AB                     pow@x:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x4B
   596  0000AB                     	ds	3
   597  0000AE                     pow@y:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0x4E
   601  0000AE                     	ds	3
   602  0000B1                     _pow$2926:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x51
   606  0000B1                     	ds	3
   607  0000B4                     _pow$2927:
   608                           	opt stack 0
   609                           
   610                           ; 3 bytes @ 0x54
   611  0000B4                     	ds	3
   612  0000B7                     pow@sign:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x57
   616  0000B7                     	ds	1
   617  0000B8                     pow@yi:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x58
   621  0000B8                     	ds	4
   622  0000BC                     _CalculateSensorSums$2925:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0x5C
   626  0000BC                     	ds	3
   627  0000BF                     CalculateSensorSums@sum:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x5F
   631  0000BF                     	ds	1
   632  0000C0                     CalculateSensorSums@index:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x60
   636  0000C0                     	ds	1
   637  0000C1                     main@sensor_sum_ptr:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x61
   641  0000C1                     	ds	2
   642  0000C3                     main@sensor_sum:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x63
   646  0000C3                     	ds	1
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           
   650                           	psect	cstackCOMRAM
   651  000025                     __pcstackCOMRAM:
   652                           	opt stack 0
   653  000025                     ??i1_SetChanADC:
   654  000025                     ?i1_ReadADC:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x0
   658  000025                     	ds	1
   659  000026                     i1SetChanADC@channel:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x1
   663  000026                     	ds	1
   664  000027                     ??i1_ReadADC:
   665  000027                     i1SetADCChannel@channel:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x2
   669  000027                     	ds	2
   670  000029                     ??_isrLP:
   671                           
   672                           ; 0 bytes @ 0x4
   673  000029                     	ds	17
   674  00003A                     ?_ReadTimer1:
   675                           	opt stack 0
   676  00003A                     i2WriteTimer0@timer0:
   677                           	opt stack 0
   678  00003A                     i2WriteTimer1@timer1:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x15
   682  00003A                     	ds	2
   683  00003C                     ReadTimer1@timer:
   684                           	opt stack 0
   685  00003C                     i2WriteTimer0@timer:
   686                           	opt stack 0
   687  00003C                     i2WriteTimer1@timer:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x17
   691  00003C                     	ds	2
   692  00003E                     ??_SetChanADC:
   693  00003E                     ??_Delay10KTCYx:
   694  00003E                     ??_NormaliseSensorReadings:
   695  00003E                     ??_CalculateSensorStatuses:
   696  00003E                     ?_ReadADC:
   697                           	opt stack 0
   698  00003E                     ?_ReadEchoLength:
   699                           	opt stack 0
   700  00003E                     ?_ReadMillis:
   701                           	opt stack 0
   702  00003E                     ?_CalculateSensorError:
   703                           	opt stack 0
   704  00003E                     ?___wmul:
   705                           	opt stack 0
   706  00003E                     ?___ftpack:
   707                           	opt stack 0
   708  00003E                     ?_frexp:
   709                           	opt stack 0
   710  00003E                     ?___ftneg:
   711                           	opt stack 0
   712  00003E                     OpenADC@config2:
   713                           	opt stack 0
   714  00003E                     OpenPWM4@period:
   715                           	opt stack 0
   716  00003E                     OpenPWM5@period:
   717                           	opt stack 0
   718  00003E                     OpenTimer0@config:
   719                           	opt stack 0
   720  00003E                     OpenTimer1@config:
   721                           	opt stack 0
   722  00003E                     OpenTimer2@config:
   723                           	opt stack 0
   724  00003E                     Delay1TCYx@unit:
   725                           	opt stack 0
   726  00003E                     CalculateSensorError@sum:
   727                           	opt stack 0
   728  00003E                     DisplaySensorStatuses@status_array:
   729                           	opt stack 0
   730  00003E                     SetDCPWM4@dutycycle:
   731                           	opt stack 0
   732  00003E                     SetDCPWM5@dutycycle:
   733                           	opt stack 0
   734  00003E                     WriteTimer0@timer0:
   735                           	opt stack 0
   736  00003E                     WriteTimer1@timer1:
   737                           	opt stack 0
   738  00003E                     ___wmul@multiplier:
   739                           	opt stack 0
   740  00003E                     ___ftpack@arg:
   741                           	opt stack 0
   742  00003E                     ___ftge@ff1:
   743                           	opt stack 0
   744  00003E                     ___ftneg@f1:
   745                           	opt stack 0
   746  00003E                     frexp@value:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x19
   750  00003E                     	ds	1
   751  00003F                     OpenADC@portconfig:
   752                           	opt stack 0
   753  00003F                     SetChanADC@channel:
   754                           	opt stack 0
   755  00003F                     Delay10KTCYx@unit:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x1A
   759  00003F                     	ds	1
   760  000040                     ??_SetDCPWM5:
   761  000040                     ??_SetDCPWM4:
   762  000040                     ??_OpenADC:
   763  000040                     ??_ReadADC:
   764  000040                     ??_DisplaySensorStatuses:
   765  000040                     SetADCChannel@channel:
   766                           	opt stack 0
   767  000040                     WriteTimer0@timer:
   768                           	opt stack 0
   769  000040                     WriteTimer1@timer:
   770                           	opt stack 0
   771  000040                     ___wmul@multiplicand:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x1B
   775  000040                     	ds	1
   776  000041                     ??_CalibrateSensors:
   777  000041                     CalculateSensorStatuses@index:
   778                           	opt stack 0
   779  000041                     ___ftpack@exp:
   780                           	opt stack 0
   781  000041                     frexp@eptr:
   782                           	opt stack 0
   783  000041                     ___ftge@ff2:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x1C
   787  000041                     	ds	1
   788  000042                     NormaliseSensorReadings@index:
   789                           	opt stack 0
   790  000042                     DisplaySensorStatuses@index:
   791                           	opt stack 0
   792  000042                     OpenADC@config:
   793                           	opt stack 0
   794  000042                     ___ftpack@sign:
   795                           	opt stack 0
   796  000042                     SetDCPWM4@DCycle:
   797                           	opt stack 0
   798  000042                     SetDCPWM5@DCycle:
   799                           	opt stack 0
   800  000042                     ___wmul@product:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x1D
   804  000042                     	ds	1
   805  000043                     ??___ftpack:
   806  000043                     ??_frexp:
   807  000043                     CalibrateSensors@index:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x1E
   811  000043                     	ds	1
   812  000044                     SetDCMotorL@duty_cycle:
   813                           	opt stack 0
   814  000044                     SetDCMotorR@duty_cycle:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x1F
   818  000044                     	ds	2
   819  000046                     postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           
   822                           ; 0 bytes @ 0x21
   823 ;;
   824 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   825 ;;
   826 ;; *************** function _main *****************
   827 ;; Defined at:
   828 ;;		line 567 in file "FastBuggy17_Main_Code.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  sensor_sum_p    2   97[BANK0 ] PTR unsigned char 
   833 ;;		 -> main@sensor_sum(1), 
   834 ;;  sensor_sum      1   99[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;		None               void
   837 ;; Registers used:
   838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        3 bytes
   849 ;; Hardware stack levels required when called:   12
   850 ;; This function calls:
   851 ;;		_BusyDistanceAcq
   852 ;;		_BusySensorAcq
   853 ;;		_CalculateSensorError
   854 ;;		_CalculateSensorStatuses
   855 ;;		_CalculateSensorSums
   856 ;;		_CalibrateLine
   857 ;;		_CalibrateSensors
   858 ;;		_ChangeMode
   859 ;;		_ConfigureADC
   860 ;;		_ConfigureBuggyIO
   861 ;;		_ConfigureInterrupts
   862 ;;		_ConfigurePWM
   863 ;;		_ConfigureTimer0
   864 ;;		_ConfigureTimer1
   865 ;;		_ConfigureTimer2
   866 ;;		_ConfigureUltrasound
   867 ;;		_Delay10KTCYx
   868 ;;		_DisableMotors
   869 ;;		_DisplaySensorStatuses
   870 ;;		_EnableMotors
   871 ;;		_EnableSensorLEDS
   872 ;;		_GetDistance
   873 ;;		_GetSensorReadings
   874 ;;		_NormaliseSensorReadings
   875 ;;		_ReadEchoLength
   876 ;;		_ReadMillis
   877 ;;		_ResetEchoLength
   878 ;;		_ResetMillis
   879 ;;		_SetDCMotorL
   880 ;;		_SetDCMotorPID
   881 ;;		_SetDCMotorR
   882 ;;		_SetDirectionForward
   883 ;;		_SetForwardsMotorL
   884 ;;		_SetForwardsMotorR
   885 ;;		_SetReverseMotorL
   886 ;;		_SetReverseMotorR
   887 ;;		_SetUnipolar
   888 ;;		_StopMotors
   889 ;;		___wmul
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text0
   896  0012BA                     __ptext0:
   897                           	opt stack 0
   898  0012BA                     _main:
   899                           	opt stack 19
   900                           
   901                           ;FastBuggy17_Main_Code.c: 570: unsigned char sensor_sum;
   902                           ;FastBuggy17_Main_Code.c: 573: unsigned char *sensor_sum_ptr;
   903                           ;FastBuggy17_Main_Code.c: 574: sensor_sum_ptr = &sensor_sum;
   904                           
   905                           ;incstack = 0
   906  0012BA  0EC3               	movlw	low main@sensor_sum
   907  0012BC  0100               	movlb	0	; () banked
   908  0012BE  6FC1               	movwf	main@sensor_sum_ptr& (0+255),b
   909  0012C0  0E00               	movlw	high main@sensor_sum
   910  0012C2  0100               	movlb	0	; () banked
   911  0012C4  6FC2               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
   912                           
   913                           ; BSR set to: 0
   914                           ;FastBuggy17_Main_Code.c: 576: ConfigureUltrasound(0.0137, 0.054);
   915  0012C6  0E76               	movlw	118
   916  0012C8  0100               	movlb	0	; () banked
   917  0012CA  6F6E               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
   918  0012CC  0E60               	movlw	96
   919  0012CE  0100               	movlb	0	; () banked
   920  0012D0  6F6F               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
   921  0012D2  0E3C               	movlw	60
   922  0012D4  0100               	movlb	0	; () banked
   923  0012D6  6F70               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
   924  0012D8  0E2F               	movlw	47
   925  0012DA  0100               	movlb	0	; () banked
   926  0012DC  6F71               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
   927  0012DE  0E5D               	movlw	93
   928  0012E0  0100               	movlb	0	; () banked
   929  0012E2  6F72               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
   930  0012E4  0E3D               	movlw	61
   931  0012E6  0100               	movlb	0	; () banked
   932  0012E8  6F73               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
   933  0012EA  EC03  F016         	call	_ConfigureUltrasound	;wreg free
   934                           
   935                           ;FastBuggy17_Main_Code.c: 577: ConfigureBuggyIO();
   936  0012EE  ECD2  F016         	call	_ConfigureBuggyIO	;wreg free
   937                           
   938                           ;FastBuggy17_Main_Code.c: 578: ConfigureInterrupts();
   939  0012F2  ECC5  F016         	call	_ConfigureInterrupts	;wreg free
   940                           
   941                           ;FastBuggy17_Main_Code.c: 579: ConfigureTimer0();
   942  0012F6  EC22  F017         	call	_ConfigureTimer0	;wreg free
   943                           
   944                           ;FastBuggy17_Main_Code.c: 580: ConfigureTimer1();
   945  0012FA  ECF6  F016         	call	_ConfigureTimer1	;wreg free
   946                           
   947                           ;FastBuggy17_Main_Code.c: 581: ConfigureTimer2();
   948  0012FE  ECC6  F017         	call	_ConfigureTimer2	;wreg free
   949                           
   950                           ;FastBuggy17_Main_Code.c: 582: ConfigurePWM();
   951  001302  ECA8  F017         	call	_ConfigurePWM	;wreg free
   952                           
   953                           ;FastBuggy17_Main_Code.c: 583: ConfigureADC();
   954  001306  EC6B  F017         	call	_ConfigureADC	;wreg free
   955                           
   956                           ;FastBuggy17_Main_Code.c: 585: EnableSensorLEDS();
   957  00130A  ECD0  F017         	call	_EnableSensorLEDS	;wreg free
   958                           
   959                           ;FastBuggy17_Main_Code.c: 587: line_mode = 1;
   960  00130E  0E01               	movlw	1
   961  001310  6E1B               	movwf	_line_mode,c
   962                           
   963                           ;FastBuggy17_Main_Code.c: 589: PID_error = 0;
   964  001312  0E00               	movlw	0
   965  001314  0100               	movlb	0	; () banked
   966  001316  6FDD               	movwf	(_PID_error+1)& (0+255),b
   967  001318  0E00               	movlw	0
   968  00131A  6FDC               	movwf	_PID_error& (0+255),b
   969                           
   970                           ; BSR set to: 0
   971                           ;FastBuggy17_Main_Code.c: 590: PID_output = 0;
   972  00131C  0E00               	movlw	0
   973  00131E  0100               	movlb	0	; () banked
   974  001320  6FD9               	movwf	(_PID_output+1)& (0+255),b
   975  001322  0E00               	movlw	0
   976  001324  6FD8               	movwf	_PID_output& (0+255),b
   977                           
   978                           ; BSR set to: 0
   979                           ;FastBuggy17_Main_Code.c: 592: LATJ = 0x00;
   980  001326  0E00               	movlw	0
   981  001328  6E91               	movwf	3985,c	;volatile
   982                           
   983                           ;FastBuggy17_Main_Code.c: 594: ResetMillis();
   984  00132A  ECEB  F016         	call	_ResetMillis	;wreg free
   985                           
   986                           ;FastBuggy17_Main_Code.c: 597: while(PORTBbits.RB1 == 0) {
   987  00132E  D011               	goto	l4264
   988  001330                     l4254:
   989                           
   990                           ;FastBuggy17_Main_Code.c: 599: CalibrateSensors();
   991  001330  EC7B  F014         	call	_CalibrateSensors	;wreg free
   992                           
   993                           ;FastBuggy17_Main_Code.c: 600: Delay10KTCYx(10);
   994  001334  0E0A               	movlw	10
   995  001336  ECDF  F016         	call	_Delay10KTCYx
   996                           
   997                           ;FastBuggy17_Main_Code.c: 602: if(ReadMillis() >= 100) {
   998  00133A  ECBC  F017         	call	_ReadMillis	;wreg free
   999  00133E  503F               	movf	?_ReadMillis+1,w,c
  1000  001340  E104               	bnz	u3710
  1001  001342  0E64               	movlw	100
  1002  001344  5C3E               	subwf	?_ReadMillis,w,c
  1003  001346  A0D8               	btfss	status,0,c
  1004  001348  D004               	goto	l4264
  1005  00134A                     u3710:
  1006                           
  1007                           ;FastBuggy17_Main_Code.c: 603: LATJbits.LATJ0 ^= 1;
  1008  00134A  7091               	btg	3985,0,c	;volatile
  1009                           
  1010                           ;FastBuggy17_Main_Code.c: 604: ResetMillis();
  1011  00134C  ECEB  F016         	call	_ResetMillis	;wreg free
  1012  001350  D000               	goto	l4264
  1013  001352                     l4264:
  1014  001352  A281               	btfss	3969,1,c	;volatile
  1015  001354  D7ED               	goto	l4254
  1016                           
  1017                           ;FastBuggy17_Main_Code.c: 605: }
  1018                           ;FastBuggy17_Main_Code.c: 607: }
  1019                           ;FastBuggy17_Main_Code.c: 609: ChangeMode();
  1020  001356  EC2D  F016         	call	_ChangeMode	;wreg free
  1021                           
  1022                           ;FastBuggy17_Main_Code.c: 610: ResetMillis();
  1023  00135A  ECEB  F016         	call	_ResetMillis	;wreg free
  1024                           
  1025                           ;FastBuggy17_Main_Code.c: 624: while(PORTBbits.RB1 == 0) {
  1026  00135E  D006               	goto	l4272
  1027  001360                     l4268:
  1028                           
  1029                           ;FastBuggy17_Main_Code.c: 626: CalibrateLine();
  1030  001360  EC34  F015         	call	_CalibrateLine	;wreg free
  1031                           
  1032                           ;FastBuggy17_Main_Code.c: 627: Delay10KTCYx(10);
  1033  001364  0E0A               	movlw	10
  1034  001366  ECDF  F016         	call	_Delay10KTCYx
  1035  00136A  D000               	goto	l4272
  1036  00136C                     l4272:
  1037  00136C  B281               	btfsc	3969,1,c	;volatile
  1038  00136E  D00E               	goto	l4280
  1039  001370  D7F7               	goto	l4268
  1040                           
  1041                           ;FastBuggy17_Main_Code.c: 629: }
  1042                           ;FastBuggy17_Main_Code.c: 631: while(PORTBbits.RB1 == 0) {
  1043  001372  D00C               	goto	l4280
  1044  001374                     l4274:
  1045                           
  1046                           ;FastBuggy17_Main_Code.c: 632: if(ReadMillis() >= 100) {
  1047  001374  ECBC  F017         	call	_ReadMillis	;wreg free
  1048  001378  503F               	movf	?_ReadMillis+1,w,c
  1049  00137A  E104               	bnz	u3740
  1050  00137C  0E64               	movlw	100
  1051  00137E  5C3E               	subwf	?_ReadMillis,w,c
  1052  001380  A0D8               	btfss	status,0,c
  1053  001382  D004               	goto	l4280
  1054  001384                     u3740:
  1055                           
  1056                           ;FastBuggy17_Main_Code.c: 633: LATJbits.LATJ0 ^= 1;
  1057  001384  7091               	btg	3985,0,c	;volatile
  1058                           
  1059                           ;FastBuggy17_Main_Code.c: 634: ResetMillis();
  1060  001386  ECEB  F016         	call	_ResetMillis	;wreg free
  1061  00138A  D000               	goto	l4280
  1062  00138C                     l4280:
  1063  00138C  A281               	btfss	3969,1,c	;volatile
  1064  00138E  D7F2               	goto	l4274
  1065                           
  1066                           ;FastBuggy17_Main_Code.c: 635: }
  1067                           ;FastBuggy17_Main_Code.c: 637: }
  1068                           ;FastBuggy17_Main_Code.c: 639: ChangeMode();
  1069  001390  EC2D  F016         	call	_ChangeMode	;wreg free
  1070                           
  1071                           ;FastBuggy17_Main_Code.c: 641: SetUnipolar();
  1072  001394  ECCA  F017         	call	_SetUnipolar	;wreg free
  1073                           
  1074                           ;FastBuggy17_Main_Code.c: 642: StopMotors();
  1075  001398  ECB8  F016         	call	_StopMotors	;wreg free
  1076                           
  1077                           ;FastBuggy17_Main_Code.c: 643: EnableMotors();
  1078  00139C  ECDB  F017         	call	_EnableMotors	;wreg free
  1079                           
  1080                           ;FastBuggy17_Main_Code.c: 644: SetDirectionForward();
  1081  0013A0  ECCD  F017         	call	_SetDirectionForward	;wreg free
  1082                           
  1083                           ;FastBuggy17_Main_Code.c: 646: GetDistance();
  1084  0013A4  EC2C  F017         	call	_GetDistance	;wreg free
  1085  0013A8  D000               	goto	l4294
  1086  0013AA                     l4294:
  1087                           
  1088                           ;FastBuggy17_Main_Code.c: 652: GetSensorReadings();
  1089  0013AA  EC01  F017         	call	_GetSensorReadings	;wreg free
  1090                           
  1091                           ;FastBuggy17_Main_Code.c: 654: while(BusySensorAcq());
  1092  0013AE  D000               	goto	l4296
  1093  0013B0                     l4296:
  1094  0013B0  EC7B  F017         	call	_BusySensorAcq	;wreg free
  1095  0013B4  0900               	iorlw	0
  1096  0013B6  A4D8               	btfss	status,2,c
  1097  0013B8  D7FB               	goto	l4296
  1098                           
  1099                           ;FastBuggy17_Main_Code.c: 656: NormaliseSensorReadings();
  1100  0013BA  ECAC  F014         	call	_NormaliseSensorReadings	;wreg free
  1101                           
  1102                           ;FastBuggy17_Main_Code.c: 658: CalculateSensorStatuses();
  1103  0013BE  EC4F  F011         	call	_CalculateSensorStatuses	;wreg free
  1104                           
  1105                           ;FastBuggy17_Main_Code.c: 659: sensor_sum = CalculateSensorSums();
  1106  0013C2  EC6C  F012         	call	_CalculateSensorSums	;wreg free
  1107  0013C6  0100               	movlb	0	; () banked
  1108  0013C8  6FC3               	movwf	main@sensor_sum& (0+255),b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;FastBuggy17_Main_Code.c: 664: PID_error = CalculateSensorError(sensor_sum_ptr);
  1112  0013CA  C0C1  F03E         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1113  0013CE  C0C2  F03F         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1114  0013D2  EC63  F013         	call	_CalculateSensorError	;wreg free
  1115  0013D6  C03E  F0DC         	movff	?_CalculateSensorError,_PID_error
  1116  0013DA  C03F  F0DD         	movff	?_CalculateSensorError+1,_PID_error+1
  1117                           
  1118                           ;FastBuggy17_Main_Code.c: 665: PID_output = 12 * PID_error;
  1119  0013DE  C0DC  F03E         	movff	_PID_error,___wmul@multiplier
  1120  0013E2  C0DD  F03F         	movff	_PID_error+1,___wmul@multiplier+1
  1121  0013E6  0E00               	movlw	0
  1122  0013E8  6E41               	movwf	___wmul@multiplicand+1,c
  1123  0013EA  0E0C               	movlw	12
  1124  0013EC  6E40               	movwf	___wmul@multiplicand,c
  1125  0013EE  EC41  F016         	call	___wmul	;wreg free
  1126  0013F2  C03E  F0D8         	movff	?___wmul,_PID_output
  1127  0013F6  C03F  F0D9         	movff	?___wmul+1,_PID_output+1
  1128                           
  1129                           ;FastBuggy17_Main_Code.c: 667: SetDCMotorPID(PID_output);
  1130  0013FA  C0D8  F06E         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1131  0013FE  C0D9  F06F         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1132  001402  EC19  F012         	call	_SetDCMotorPID	;wreg free
  1133                           
  1134                           ;FastBuggy17_Main_Code.c: 671: DisplaySensorStatuses(sensor_status);
  1135  001406  0E20               	movlw	low _sensor_status
  1136  001408  6E3E               	movwf	DisplaySensorStatuses@status_array,c
  1137  00140A  0E00               	movlw	high _sensor_status
  1138  00140C  6E3F               	movwf	DisplaySensorStatuses@status_array+1,c
  1139  00140E  ECB6  F015         	call	_DisplaySensorStatuses	;wreg free
  1140                           
  1141                           ;FastBuggy17_Main_Code.c: 675: if(BusyDistanceAcq() == 0) {
  1142  001412  EC83  F017         	call	_BusyDistanceAcq	;wreg free
  1143  001416  0900               	iorlw	0
  1144  001418  A4D8               	btfss	status,2,c
  1145  00141A  D06F               	goto	l453
  1146                           
  1147                           ;FastBuggy17_Main_Code.c: 676: if(ReadEchoLength() <= 1232 ) {
  1148  00141C  ECC1  F017         	call	_ReadEchoLength	;wreg free
  1149  001420  0ED1               	movlw	209
  1150  001422  5C3E               	subwf	?_ReadEchoLength,w,c
  1151  001424  0E04               	movlw	4
  1152  001426  583F               	subwfb	?_ReadEchoLength+1,w,c
  1153  001428  B0D8               	btfsc	status,0,c
  1154  00142A  D064               	goto	l4356
  1155                           
  1156                           ;FastBuggy17_Main_Code.c: 678: DisableMotors();
  1157  00142C  ECDD  F017         	call	_DisableMotors	;wreg free
  1158                           
  1159                           ;FastBuggy17_Main_Code.c: 680: if(PID_output < 0){
  1160  001430  0100               	movlb	0	; () banked
  1161  001432  AFD9               	btfss	(_PID_output+1)& (0+255),7,b
  1162  001434  D005               	goto	l4320
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;FastBuggy17_Main_Code.c: 681: SetForwardsMotorR();
  1166  001436  ECD7  F017         	call	_SetForwardsMotorR	;wreg free
  1167                           
  1168                           ;FastBuggy17_Main_Code.c: 682: SetReverseMotorL();
  1169  00143A  ECD5  F017         	call	_SetReverseMotorL	;wreg free
  1170  00143E  D000               	goto	l4320
  1171  001440                     l4320:
  1172                           
  1173                           ;FastBuggy17_Main_Code.c: 683: }
  1174                           ;FastBuggy17_Main_Code.c: 684: if(PID_output > 0){
  1175  001440  0100               	movlb	0	; () banked
  1176  001442  BFD9               	btfsc	(_PID_output+1)& (0+255),7,b
  1177  001444  D00C               	goto	l4324
  1178  001446  0100               	movlb	0	; () banked
  1179  001448  51D9               	movf	(_PID_output+1)& (0+255),w,b
  1180  00144A  E104               	bnz	u3800
  1181  00144C  0100               	movlb	0	; () banked
  1182  00144E  05D8               	decf	_PID_output& (0+255),w,b
  1183  001450  A0D8               	btfss	status,0,c
  1184  001452  D005               	goto	l4324
  1185  001454                     u3800:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;FastBuggy17_Main_Code.c: 685: SetForwardsMotorL();
  1189  001454  ECD9  F017         	call	_SetForwardsMotorL	;wreg free
  1190                           
  1191                           ;FastBuggy17_Main_Code.c: 686: SetReverseMotorR();
  1192  001458  ECD3  F017         	call	_SetReverseMotorR	;wreg free
  1193  00145C  D000               	goto	l4324
  1194  00145E                     l4324:
  1195                           
  1196                           ;FastBuggy17_Main_Code.c: 687: }
  1197                           ;FastBuggy17_Main_Code.c: 690: SetDCMotorL(400);
  1198  00145E  0E01               	movlw	1
  1199  001460  6E45               	movwf	SetDCMotorL@duty_cycle+1,c
  1200  001462  0E90               	movlw	144
  1201  001464  6E44               	movwf	SetDCMotorL@duty_cycle,c
  1202  001466  EC9A  F017         	call	_SetDCMotorL	;wreg free
  1203                           
  1204                           ;FastBuggy17_Main_Code.c: 691: SetDCMotorR(400);
  1205  00146A  0E01               	movlw	1
  1206  00146C  6E45               	movwf	SetDCMotorR@duty_cycle+1,c
  1207  00146E  0E90               	movlw	144
  1208  001470  6E44               	movwf	SetDCMotorR@duty_cycle,c
  1209  001472  EC93  F017         	call	_SetDCMotorR	;wreg free
  1210                           
  1211                           ;FastBuggy17_Main_Code.c: 693: EnableMotors();
  1212  001476  ECDB  F017         	call	_EnableMotors	;wreg free
  1213                           
  1214                           ;FastBuggy17_Main_Code.c: 695: ResetMillis();
  1215  00147A  ECEB  F016         	call	_ResetMillis	;wreg free
  1216                           
  1217                           ;FastBuggy17_Main_Code.c: 696: while(ReadMillis() < 30);
  1218  00147E  D000               	goto	l4330
  1219  001480                     l4330:
  1220  001480  ECBC  F017         	call	_ReadMillis	;wreg free
  1221  001484  503F               	movf	?_ReadMillis+1,w,c
  1222  001486  E106               	bnz	l4332
  1223  001488  0E1E               	movlw	30
  1224  00148A  5C3E               	subwf	?_ReadMillis,w,c
  1225  00148C  B0D8               	btfsc	status,0,c
  1226  00148E  D002               	goto	l4332
  1227  001490  D7F7               	goto	l4330
  1228  001492  D000               	goto	l4332
  1229  001494                     l4332:
  1230                           
  1231                           ;FastBuggy17_Main_Code.c: 697: sensor_sum = 0;
  1232  001494  0E00               	movlw	0
  1233  001496  0100               	movlb	0	; () banked
  1234  001498  6FC3               	movwf	main@sensor_sum& (0+255),b
  1235                           
  1236                           ;FastBuggy17_Main_Code.c: 701: while(sensor_sum == 0) {
  1237  00149A  D017               	goto	l4344
  1238  00149C                     l4334:
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;FastBuggy17_Main_Code.c: 702: GetSensorReadings();
  1242  00149C  EC01  F017         	call	_GetSensorReadings	;wreg free
  1243                           
  1244                           ;FastBuggy17_Main_Code.c: 703: while(BusySensorAcq());
  1245  0014A0  D000               	goto	l4336
  1246  0014A2                     l4336:
  1247  0014A2  EC7B  F017         	call	_BusySensorAcq	;wreg free
  1248  0014A6  0900               	iorlw	0
  1249  0014A8  A4D8               	btfss	status,2,c
  1250  0014AA  D7FB               	goto	l4336
  1251                           
  1252                           ;FastBuggy17_Main_Code.c: 704: NormaliseSensorReadings();
  1253  0014AC  ECAC  F014         	call	_NormaliseSensorReadings	;wreg free
  1254                           
  1255                           ;FastBuggy17_Main_Code.c: 705: CalculateSensorStatuses();
  1256  0014B0  EC4F  F011         	call	_CalculateSensorStatuses	;wreg free
  1257                           
  1258                           ;FastBuggy17_Main_Code.c: 706: sensor_sum = CalculateSensorSums();
  1259  0014B4  EC6C  F012         	call	_CalculateSensorSums	;wreg free
  1260  0014B8  0100               	movlb	0	; () banked
  1261  0014BA  6FC3               	movwf	main@sensor_sum& (0+255),b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;FastBuggy17_Main_Code.c: 707: DisplaySensorStatuses(sensor_status);
  1265  0014BC  0E20               	movlw	low _sensor_status
  1266  0014BE  6E3E               	movwf	DisplaySensorStatuses@status_array,c
  1267  0014C0  0E00               	movlw	high _sensor_status
  1268  0014C2  6E3F               	movwf	DisplaySensorStatuses@status_array+1,c
  1269  0014C4  ECB6  F015         	call	_DisplaySensorStatuses	;wreg free
  1270  0014C8  D000               	goto	l4344
  1271  0014CA                     l4344:
  1272  0014CA  0100               	movlb	0	; () banked
  1273  0014CC  51C3               	movf	main@sensor_sum& (0+255),w,b
  1274  0014CE  0100               	movlb	0	; () banked
  1275  0014D0  B4D8               	btfsc	status,2,c
  1276  0014D2  D7E4               	goto	l4334
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;FastBuggy17_Main_Code.c: 709: }
  1280                           ;FastBuggy17_Main_Code.c: 711: ResetEchoLength();
  1281                           
  1282                           ; BSR set to: 0
  1283  0014D4  ECA1  F017         	call	_ResetEchoLength	;wreg free
  1284                           
  1285                           ;FastBuggy17_Main_Code.c: 713: DisableMotors();
  1286  0014D8  ECDD  F017         	call	_DisableMotors	;wreg free
  1287                           
  1288                           ;FastBuggy17_Main_Code.c: 714: SetDirectionForward();
  1289  0014DC  ECCD  F017         	call	_SetDirectionForward	;wreg free
  1290                           
  1291                           ;FastBuggy17_Main_Code.c: 715: EnableMotors();
  1292  0014E0  ECDB  F017         	call	_EnableMotors	;wreg free
  1293                           
  1294                           ;FastBuggy17_Main_Code.c: 717: PID_error = 0;
  1295  0014E4  0E00               	movlw	0
  1296  0014E6  0100               	movlb	0	; () banked
  1297  0014E8  6FDD               	movwf	(_PID_error+1)& (0+255),b
  1298  0014EA  0E00               	movlw	0
  1299  0014EC  6FDC               	movwf	_PID_error& (0+255),b
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;FastBuggy17_Main_Code.c: 719: GetDistance();
  1303  0014EE  EC2C  F017         	call	_GetDistance	;wreg free
  1304                           
  1305                           ;FastBuggy17_Main_Code.c: 720: }
  1306  0014F2  D003               	goto	l453
  1307  0014F4                     l4356:
  1308                           
  1309                           ;FastBuggy17_Main_Code.c: 721: else {
  1310                           ;FastBuggy17_Main_Code.c: 722: GetDistance();
  1311  0014F4  EC2C  F017         	call	_GetDistance	;wreg free
  1312  0014F8  D000               	goto	l453
  1313  0014FA                     l453:
  1314                           
  1315                           ;FastBuggy17_Main_Code.c: 723: }
  1316                           ;FastBuggy17_Main_Code.c: 724: }
  1317                           ;FastBuggy17_Main_Code.c: 728: ResetMillis();
  1318  0014FA  ECEB  F016         	call	_ResetMillis	;wreg free
  1319                           
  1320                           ;FastBuggy17_Main_Code.c: 729: while(ReadMillis() < 5);
  1321  0014FE  D000               	goto	l4358
  1322  001500                     l4358:
  1323  001500  ECBC  F017         	call	_ReadMillis	;wreg free
  1324  001504  503F               	movf	?_ReadMillis+1,w,c
  1325  001506  E106               	bnz	l4360
  1326  001508  0E05               	movlw	5
  1327  00150A  5C3E               	subwf	?_ReadMillis,w,c
  1328  00150C  B0D8               	btfsc	status,0,c
  1329  00150E  D002               	goto	l4360
  1330  001510  D7F7               	goto	l4358
  1331  001512  D000               	goto	l4360
  1332  001514                     l4360:
  1333                           
  1334                           ;FastBuggy17_Main_Code.c: 730: LATJ = 0x00;
  1335  001514  0E00               	movlw	0
  1336  001516  6E91               	movwf	3985,c	;volatile
  1337  001518  D748               	goto	l4294
  1338  00151A  EF70  F000         	goto	start
  1339  00151E                     __end_of_main:
  1340                           	opt stack 0
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _StopMotors *****************
  1346 ;; Defined at:
  1347 ;;		line 128 in file "Motors.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;		None               void
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    8
  1368 ;; This function calls:
  1369 ;;		_SetDCMotorL
  1370 ;;		_SetDCMotorR
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text1
  1377  002D70                     __ptext1:
  1378                           	opt stack 0
  1379  002D70                     _StopMotors:
  1380                           	opt stack 22
  1381                           
  1382                           ;Motors.c: 130: SetDCMotorR(526);
  1383                           
  1384                           ;incstack = 0
  1385  002D70  0E02               	movlw	2
  1386  002D72  6E45               	movwf	SetDCMotorR@duty_cycle+1,c
  1387  002D74  0E0E               	movlw	14
  1388  002D76  6E44               	movwf	SetDCMotorR@duty_cycle,c
  1389  002D78  EC93  F017         	call	_SetDCMotorR	;wreg free
  1390                           
  1391                           ;Motors.c: 131: SetDCMotorL(526);
  1392  002D7C  0E02               	movlw	2
  1393  002D7E  6E45               	movwf	SetDCMotorL@duty_cycle+1,c
  1394  002D80  0E0E               	movlw	14
  1395  002D82  6E44               	movwf	SetDCMotorL@duty_cycle,c
  1396  002D84  EC9A  F017         	call	_SetDCMotorL	;wreg free
  1397  002D88  0012               	return		;funcret
  1398  002D8A                     __end_of_StopMotors:
  1399                           	opt stack 0
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _SetUnipolar *****************
  1405 ;; Defined at:
  1406 ;;		line 121 in file "Motors.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		None
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    6
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text2
  1435  002F94                     __ptext2:
  1436                           	opt stack 0
  1437  002F94                     _SetUnipolar:
  1438                           	opt stack 24
  1439                           
  1440                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  1441                           
  1442                           ;incstack = 0
  1443  002F94  908C               	bcf	3980,0,c	;volatile
  1444                           
  1445                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  1446  002F96  948C               	bcf	3980,2,c	;volatile
  1447  002F98  0012               	return		;funcret
  1448  002F9A                     __end_of_SetUnipolar:
  1449                           	opt stack 0
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _SetReverseMotorR *****************
  1455 ;; Defined at:
  1456 ;;		line 90 in file "Motors.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		None
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    6
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text3
  1485  002FA6                     __ptext3:
  1486                           	opt stack 0
  1487  002FA6                     _SetReverseMotorR:
  1488                           	opt stack 24
  1489                           
  1490                           ;Motors.c: 92: LATDbits.LATD1 = 0;
  1491                           
  1492                           ;incstack = 0
  1493  002FA6  928C               	bcf	3980,1,c	;volatile
  1494  002FA8  0012               	return		;funcret
  1495  002FAA                     __end_of_SetReverseMotorR:
  1496                           	opt stack 0
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _SetReverseMotorL *****************
  1502 ;; Defined at:
  1503 ;;		line 96 in file "Motors.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		None
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    6
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text4
  1532  002FAA                     __ptext4:
  1533                           	opt stack 0
  1534  002FAA                     _SetReverseMotorL:
  1535                           	opt stack 24
  1536                           
  1537                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  1538                           
  1539                           ;incstack = 0
  1540  002FAA  968C               	bcf	3980,3,c	;volatile
  1541  002FAC  0012               	return		;funcret
  1542  002FAE                     __end_of_SetReverseMotorL:
  1543                           	opt stack 0
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _SetForwardsMotorR *****************
  1549 ;; Defined at:
  1550 ;;		line 78 in file "Motors.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		None
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    6
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text5
  1579  002FAE                     __ptext5:
  1580                           	opt stack 0
  1581  002FAE                     _SetForwardsMotorR:
  1582                           	opt stack 24
  1583                           
  1584                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  1585                           
  1586                           ;incstack = 0
  1587  002FAE  828C               	bsf	3980,1,c	;volatile
  1588  002FB0  0012               	return		;funcret
  1589  002FB2                     __end_of_SetForwardsMotorR:
  1590                           	opt stack 0
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _SetForwardsMotorL *****************
  1596 ;; Defined at:
  1597 ;;		line 84 in file "Motors.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		None
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    6
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text6
  1626  002FB2                     __ptext6:
  1627                           	opt stack 0
  1628  002FB2                     _SetForwardsMotorL:
  1629                           	opt stack 24
  1630                           
  1631                           ;Motors.c: 86: LATDbits.LATD3 = 1;
  1632                           
  1633                           ;incstack = 0
  1634  002FB2  868C               	bsf	3980,3,c	;volatile
  1635  002FB4  0012               	return		;funcret
  1636  002FB6                     __end_of_SetForwardsMotorL:
  1637                           	opt stack 0
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           status	equ	0xFD8
  1641                           
  1642 ;; *************** function _SetDirectionForward *****************
  1643 ;; Defined at:
  1644 ;;		line 64 in file "Motors.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;		None               void
  1651 ;; Registers used:
  1652 ;;		None
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    6
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text7
  1673  002F9A                     __ptext7:
  1674                           	opt stack 0
  1675  002F9A                     _SetDirectionForward:
  1676                           	opt stack 24
  1677                           
  1678                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  1679                           
  1680                           ;incstack = 0
  1681  002F9A  868C               	bsf	3980,3,c	;volatile
  1682                           
  1683                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  1684  002F9C  828C               	bsf	3980,1,c	;volatile
  1685  002F9E  0012               	return		;funcret
  1686  002FA0                     __end_of_SetDirectionForward:
  1687                           	opt stack 0
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           status	equ	0xFD8
  1691                           
  1692 ;; *************** function _SetDCMotorPID *****************
  1693 ;; Defined at:
  1694 ;;		line 47 in file "Motors.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  PIDoutput       2   14[BANK0 ] int 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;		None               void
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;Total ram usage:        4 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    8
  1715 ;; This function calls:
  1716 ;;		_SetDCMotorL
  1717 ;;		_SetDCMotorR
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text8
  1724  002432                     __ptext8:
  1725                           	opt stack 0
  1726  002432                     _SetDCMotorPID:
  1727                           	opt stack 22
  1728                           
  1729                           ;Motors.c: 49: if(PIDoutput <= 0) {
  1730                           
  1731                           ;incstack = 0
  1732  002432  0100               	movlb	0	; () banked
  1733  002434  BF6F               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1734  002436  D007               	goto	l4188
  1735  002438  0100               	movlb	0	; () banked
  1736  00243A  516F               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1737  00243C  E11E               	bnz	l4190
  1738  00243E  0100               	movlb	0	; () banked
  1739  002440  056E               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1740  002442  B0D8               	btfsc	status,0,c
  1741  002444  D01A               	goto	l4190
  1742  002446                     l4188:
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;Motors.c: 50: SetDCMotorL(408 - PIDoutput);
  1746  002446  C06E  F070         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  1747  00244A  C06F  F071         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  1748  00244E  0100               	movlb	0	; () banked
  1749  002450  1F70               	comf	??_SetDCMotorPID& (0+255),f,b
  1750  002452  1F71               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  1751  002454  4B70               	infsnz	??_SetDCMotorPID& (0+255),f,b
  1752  002456  2B71               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  1753  002458  0E98               	movlw	152
  1754  00245A  0100               	movlb	0	; () banked
  1755  00245C  2570               	addwf	??_SetDCMotorPID& (0+255),w,b
  1756  00245E  6E44               	movwf	SetDCMotorL@duty_cycle,c
  1757  002460  0E01               	movlw	1
  1758  002462  0100               	movlb	0	; () banked
  1759  002464  2171               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  1760  002466  6E45               	movwf	SetDCMotorL@duty_cycle+1,c
  1761  002468  EC9A  F017         	call	_SetDCMotorL	;wreg free
  1762                           
  1763                           ;Motors.c: 51: SetDCMotorR(408);
  1764  00246C  0E01               	movlw	1
  1765  00246E  6E45               	movwf	SetDCMotorR@duty_cycle+1,c
  1766  002470  0E98               	movlw	152
  1767  002472  6E44               	movwf	SetDCMotorR@duty_cycle,c
  1768  002474  EC93  F017         	call	_SetDCMotorR	;wreg free
  1769                           
  1770                           ;Motors.c: 52: }
  1771  002478  D02E               	goto	l128
  1772  00247A                     l4190:
  1773                           
  1774                           ;Motors.c: 53: else if(PIDoutput > 0) {
  1775  00247A  0100               	movlb	0	; () banked
  1776  00247C  BF6F               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1777  00247E  D018               	goto	l4194
  1778  002480  0100               	movlb	0	; () banked
  1779  002482  516F               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1780  002484  E104               	bnz	u3650
  1781  002486  0100               	movlb	0	; () banked
  1782  002488  056E               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1783  00248A  A0D8               	btfss	status,0,c
  1784  00248C  D011               	goto	l4194
  1785  00248E                     u3650:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;Motors.c: 54: SetDCMotorL(408);
  1789  00248E  0E01               	movlw	1
  1790  002490  6E45               	movwf	SetDCMotorL@duty_cycle+1,c
  1791  002492  0E98               	movlw	152
  1792  002494  6E44               	movwf	SetDCMotorL@duty_cycle,c
  1793  002496  EC9A  F017         	call	_SetDCMotorL	;wreg free
  1794                           
  1795                           ;Motors.c: 55: SetDCMotorR(408 + PIDoutput);
  1796  00249A  0E98               	movlw	152
  1797  00249C  0100               	movlb	0	; () banked
  1798  00249E  256E               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1799  0024A0  6E44               	movwf	SetDCMotorR@duty_cycle,c
  1800  0024A2  0E01               	movlw	1
  1801  0024A4  0100               	movlb	0	; () banked
  1802  0024A6  216F               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1803  0024A8  6E45               	movwf	SetDCMotorR@duty_cycle+1,c
  1804  0024AA  EC93  F017         	call	_SetDCMotorR	;wreg free
  1805                           
  1806                           ;Motors.c: 56: }
  1807  0024AE  D013               	goto	l128
  1808  0024B0                     l4194:
  1809                           
  1810                           ;Motors.c: 57: else if(PIDoutput == 0) {
  1811  0024B0  0100               	movlb	0	; () banked
  1812  0024B2  516E               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1813  0024B4  0100               	movlb	0	; () banked
  1814  0024B6  116F               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1815  0024B8  A4D8               	btfss	status,2,c
  1816  0024BA  D00D               	goto	l128
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;Motors.c: 58: SetDCMotorL(408);
  1820  0024BC  0E01               	movlw	1
  1821  0024BE  6E45               	movwf	SetDCMotorL@duty_cycle+1,c
  1822  0024C0  0E98               	movlw	152
  1823  0024C2  6E44               	movwf	SetDCMotorL@duty_cycle,c
  1824  0024C4  EC9A  F017         	call	_SetDCMotorL	;wreg free
  1825                           
  1826                           ;Motors.c: 59: SetDCMotorR(408);
  1827  0024C8  0E01               	movlw	1
  1828  0024CA  6E45               	movwf	SetDCMotorR@duty_cycle+1,c
  1829  0024CC  0E98               	movlw	152
  1830  0024CE  6E44               	movwf	SetDCMotorR@duty_cycle,c
  1831  0024D0  EC93  F017         	call	_SetDCMotorR	;wreg free
  1832  0024D4  D000               	goto	l128
  1833  0024D6                     l128:
  1834  0024D6  0012               	return		;funcret
  1835  0024D8                     __end_of_SetDCMotorPID:
  1836                           	opt stack 0
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _SetDCMotorR *****************
  1842 ;; Defined at:
  1843 ;;		line 19 in file "Motors.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  duty_cycle      2   31[COMRAM] unsigned int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;		None               void
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    7
  1864 ;; This function calls:
  1865 ;;		_SetDCPWM4
  1866 ;; This function is called by:
  1867 ;;		_SetDCMotorPID
  1868 ;;		_StopMotors
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text9
  1874  002F26                     __ptext9:
  1875                           	opt stack 0
  1876  002F26                     _SetDCMotorR:
  1877                           	opt stack 22
  1878                           
  1879                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  1880                           
  1881                           ;incstack = 0
  1882  002F26  C044  F03E         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  1883  002F2A  C045  F03F         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  1884  002F2E  EC7C  F015         	call	_SetDCPWM4	;wreg free
  1885  002F32  0012               	return		;funcret
  1886  002F34                     __end_of_SetDCMotorR:
  1887                           	opt stack 0
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           status	equ	0xFD8
  1891                           
  1892 ;; *************** function _SetDCPWM4 *****************
  1893 ;; Defined at:
  1894 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  dutycycle       2   25[COMRAM] unsigned int 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  DCycle          2   29[COMRAM] struct PWMDC
  1899 ;; Return value:  Size  Location     Type
  1900 ;;		None               void
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;Total ram usage:        6 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    6
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_SetDCMotorR
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text10
  1923  002AF8                     __ptext10:
  1924                           	opt stack 0
  1925  002AF8                     _SetDCPWM4:
  1926                           	opt stack 22
  1927                           
  1928                           ;incstack = 0
  1929  002AF8  C03E  F040         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  1930  002AFC  C03F  F041         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  1931  002B00  0E06               	movlw	6
  1932  002B02                     u2205:
  1933  002B02  90D8               	bcf	status,0,c
  1934  002B04  3640               	rlcf	??_SetDCPWM4,f,c
  1935  002B06  3641               	rlcf	??_SetDCPWM4+1,f,c
  1936  002B08  2EE8               	decfsz	wreg,f,c
  1937  002B0A  D7FB               	goto	u2205
  1938  002B0C  C040  F042         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  1939  002B10  C041  F043         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  1940  002B14  C043  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  1941  002B18  C042  F040         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  1942  002B1C  90D8               	bcf	status,0,c
  1943  002B1E  3240               	rrcf	??_SetDCPWM4,f,c
  1944  002B20  90D8               	bcf	status,0,c
  1945  002B22  3240               	rrcf	??_SetDCPWM4,f,c
  1946  002B24  0E30               	movlw	48
  1947  002B26  1640               	andwf	??_SetDCPWM4,f,c
  1948  002B28  5073               	movf	3955,w,c	;volatile
  1949  002B2A  0BCF               	andlw	207
  1950  002B2C  1040               	iorwf	??_SetDCPWM4,w,c
  1951  002B2E  6E73               	movwf	3955,c	;volatile
  1952  002B30  0012               	return		;funcret
  1953  002B32                     __end_of_SetDCPWM4:
  1954                           	opt stack 0
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function _SetDCMotorL *****************
  1960 ;; Defined at:
  1961 ;;		line 6 in file "Motors.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  duty_cycle      2   31[COMRAM] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    7
  1982 ;; This function calls:
  1983 ;;		_SetDCPWM5
  1984 ;; This function is called by:
  1985 ;;		_SetDCMotorPID
  1986 ;;		_StopMotors
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text11
  1992  002F34                     __ptext11:
  1993                           	opt stack 0
  1994  002F34                     _SetDCMotorL:
  1995                           	opt stack 22
  1996                           
  1997                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  1998                           
  1999                           ;incstack = 0
  2000  002F34  C044  F03E         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  2001  002F38  C045  F03F         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  2002  002F3C  EC99  F015         	call	_SetDCPWM5	;wreg free
  2003  002F40  0012               	return		;funcret
  2004  002F42                     __end_of_SetDCMotorL:
  2005                           	opt stack 0
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _SetDCPWM5 *****************
  2011 ;; Defined at:
  2012 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  dutycycle       2   25[COMRAM] unsigned int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  DCycle          2   29[COMRAM] struct PWMDC
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        6 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    6
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_SetDCMotorL
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text12
  2041  002B32                     __ptext12:
  2042                           	opt stack 0
  2043  002B32                     _SetDCPWM5:
  2044                           	opt stack 22
  2045                           
  2046                           ;incstack = 0
  2047  002B32  C03E  F040         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  2048  002B36  C03F  F041         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  2049  002B3A  0E06               	movlw	6
  2050  002B3C                     u2195:
  2051  002B3C  90D8               	bcf	status,0,c
  2052  002B3E  3640               	rlcf	??_SetDCPWM5,f,c
  2053  002B40  3641               	rlcf	??_SetDCPWM5+1,f,c
  2054  002B42  2EE8               	decfsz	wreg,f,c
  2055  002B44  D7FB               	goto	u2195
  2056  002B46  C040  F042         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  2057  002B4A  C041  F043         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  2058  002B4E  C043  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  2059  002B52  C042  F040         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  2060  002B56  90D8               	bcf	status,0,c
  2061  002B58  3240               	rrcf	??_SetDCPWM5,f,c
  2062  002B5A  90D8               	bcf	status,0,c
  2063  002B5C  3240               	rrcf	??_SetDCPWM5,f,c
  2064  002B5E  0E30               	movlw	48
  2065  002B60  1640               	andwf	??_SetDCPWM5,f,c
  2066  002B62  5070               	movf	3952,w,c	;volatile
  2067  002B64  0BCF               	andlw	207
  2068  002B66  1040               	iorwf	??_SetDCPWM5,w,c
  2069  002B68  6E70               	movwf	3952,c	;volatile
  2070  002B6A  0012               	return		;funcret
  2071  002B6C                     __end_of_SetDCPWM5:
  2072                           	opt stack 0
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _ResetMillis *****************
  2078 ;; Defined at:
  2079 ;;		line 15 in file "MillisecondTimer.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    7
  2100 ;; This function calls:
  2101 ;;		_WriteTimer0
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text13
  2108  002DD6                     __ptext13:
  2109                           	opt stack 0
  2110  002DD6                     _ResetMillis:
  2111                           	opt stack 23
  2112                           
  2113                           ;MillisecondTimer.c: 17: WriteTimer0(63036);
  2114                           
  2115                           ;incstack = 0
  2116  002DD6  0EF6               	movlw	246
  2117  002DD8  6E3F               	movwf	WriteTimer0@timer0+1,c
  2118  002DDA  0E3C               	movlw	60
  2119  002DDC  6E3E               	movwf	WriteTimer0@timer0,c
  2120  002DDE  EC3E  F017         	call	_WriteTimer0	;wreg free
  2121                           
  2122                           ;MillisecondTimer.c: 18: millisecond_COUNT = 0;
  2123  002DE2  0E00               	movlw	0
  2124  002DE4  6E18               	movwf	_millisecond_COUNT+1,c	;volatile
  2125  002DE6  0E00               	movlw	0
  2126  002DE8  6E17               	movwf	_millisecond_COUNT,c	;volatile
  2127  002DEA  0012               	return		;funcret
  2128  002DEC                     __end_of_ResetMillis:
  2129                           	opt stack 0
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           status	equ	0xFD8
  2133                           
  2134 ;; *************** function _ResetEchoLength *****************
  2135 ;; Defined at:
  2136 ;;		line 58 in file "Ultrasound.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;		None               void
  2143 ;; Registers used:
  2144 ;;		wreg, status,2
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    6
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165  002F42                     __ptext14:
  2166                           	opt stack 0
  2167  002F42                     _ResetEchoLength:
  2168                           	opt stack 24
  2169                           
  2170                           ;Ultrasound.c: 60: echo_time = 0;
  2171                           
  2172                           ;incstack = 0
  2173  002F42  0E00               	movlw	0
  2174  002F44  6E16               	movwf	_echo_time+1,c	;volatile
  2175  002F46  0E00               	movlw	0
  2176  002F48  6E15               	movwf	_echo_time,c	;volatile
  2177                           
  2178                           ;Ultrasound.c: 61: echo_acq_done = 0;
  2179  002F4A  0E00               	movlw	0
  2180  002F4C  6E46               	movwf	_echo_acq_done,c
  2181  002F4E  0012               	return		;funcret
  2182  002F50                     __end_of_ResetEchoLength:
  2183                           	opt stack 0
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _ReadMillis *****************
  2189 ;; Defined at:
  2190 ;;		line 7 in file "MillisecondTimer.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2   25[COMRAM] unsigned int 
  2197 ;; Registers used:
  2198 ;;		None
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        2 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    6
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text15
  2219  002F78                     __ptext15:
  2220                           	opt stack 0
  2221  002F78                     _ReadMillis:
  2222                           	opt stack 24
  2223                           
  2224                           ;MillisecondTimer.c: 9: return (millisecond_COUNT);
  2225                           
  2226                           ;incstack = 0
  2227  002F78  C017  F03E         	movff	_millisecond_COUNT,?_ReadMillis	;volatile
  2228  002F7C  C018  F03F         	movff	_millisecond_COUNT+1,?_ReadMillis+1	;volatile
  2229  002F80  0012               	return		;funcret
  2230  002F82                     __end_of_ReadMillis:
  2231                           	opt stack 0
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _ReadEchoLength *****************
  2237 ;; Defined at:
  2238 ;;		line 52 in file "Ultrasound.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2   25[COMRAM] unsigned int 
  2245 ;; Registers used:
  2246 ;;		None
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;Total ram usage:        2 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    6
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text16
  2267  002F82                     __ptext16:
  2268                           	opt stack 0
  2269  002F82                     _ReadEchoLength:
  2270                           	opt stack 24
  2271                           
  2272                           ;Ultrasound.c: 54: return (echo_time);
  2273                           
  2274                           ;incstack = 0
  2275  002F82  C015  F03E         	movff	_echo_time,?_ReadEchoLength	;volatile
  2276  002F86  C016  F03F         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  2277  002F8A  0012               	return		;funcret
  2278  002F8C                     __end_of_ReadEchoLength:
  2279                           	opt stack 0
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _GetDistance *****************
  2285 ;; Defined at:
  2286 ;;		line 34 in file "Ultrasound.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;		None               void
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    7
  2307 ;; This function calls:
  2308 ;;		_Delay1TCYx
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text17
  2315  002E58                     __ptext17:
  2316                           	opt stack 0
  2317  002E58                     _GetDistance:
  2318                           	opt stack 23
  2319                           
  2320                           ;Ultrasound.c: 36: LATEbits.LATE5 = 1;
  2321                           
  2322                           ;incstack = 0
  2323  002E58  8A8D               	bsf	3981,5,c	;volatile
  2324                           
  2325                           ;Ultrasound.c: 37: Delay1TCYx(25);
  2326  002E5A  0E19               	movlw	25
  2327  002E5C  ECB6  F017         	call	_Delay1TCYx
  2328                           
  2329                           ;Ultrasound.c: 38: LATEbits.LATE5 = 0;
  2330  002E60  9A8D               	bcf	3981,5,c	;volatile
  2331                           
  2332                           ;Ultrasound.c: 39: INTCONbits.RBIE = 1;
  2333  002E62  86F2               	bsf	intcon,3,c	;volatile
  2334                           
  2335                           ;Ultrasound.c: 40: echo_acq_done = 0;
  2336  002E64  0E00               	movlw	0
  2337  002E66  6E46               	movwf	_echo_acq_done,c
  2338  002E68  0012               	return		;funcret
  2339  002E6A                     __end_of_GetDistance:
  2340                           	opt stack 0
  2341                           intcon	equ	0xFF2
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _Delay1TCYx *****************
  2347 ;; Defined at:
  2348 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  unit            1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  unit            1   25[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    6
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_GetDistance
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text18
  2377  002F6C                     __ptext18:
  2378                           	opt stack 0
  2379  002F6C                     _Delay1TCYx:
  2380                           	opt stack 23
  2381                           
  2382                           ;incstack = 0
  2383                           ;Delay1TCYx@unit stored from wreg
  2384  002F6C  6E3E               	movwf	Delay1TCYx@unit,c
  2385  002F6E                     l898:
  2386  002F6E  F000               	nop	
  2387  002F70  2E3E               	decfsz	Delay1TCYx@unit,f,c
  2388  002F72  D7FD               	goto	l898
  2389  002F74  D000               	goto	l900
  2390  002F76                     l900:
  2391  002F76  0012               	return		;funcret
  2392  002F78                     __end_of_Delay1TCYx:
  2393                           	opt stack 0
  2394                           intcon	equ	0xFF2
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _EnableSensorLEDS *****************
  2400 ;; Defined at:
  2401 ;;		line 425 in file "FastBuggy17_Main_Code.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;		None               void
  2408 ;; Registers used:
  2409 ;;		wreg, status,2
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    6
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text19
  2430  002FA0                     __ptext19:
  2431                           	opt stack 0
  2432  002FA0                     _EnableSensorLEDS:
  2433                           	opt stack 24
  2434                           
  2435                           ;FastBuggy17_Main_Code.c: 427: LATE = 0x1F;
  2436                           
  2437                           ;incstack = 0
  2438  002FA0  0E1F               	movlw	31
  2439  002FA2  6E8D               	movwf	3981,c	;volatile
  2440  002FA4  0012               	return		;funcret
  2441  002FA6                     __end_of_EnableSensorLEDS:
  2442                           	opt stack 0
  2443                           intcon	equ	0xFF2
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _EnableMotors *****************
  2449 ;; Defined at:
  2450 ;;		line 102 in file "Motors.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		None
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    6
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text20
  2479  002FB6                     __ptext20:
  2480                           	opt stack 0
  2481  002FB6                     _EnableMotors:
  2482                           	opt stack 24
  2483                           
  2484                           ;Motors.c: 104: LATDbits.LATD4 = 1;
  2485                           
  2486                           ;incstack = 0
  2487  002FB6  888C               	bsf	3980,4,c	;volatile
  2488  002FB8  0012               	return		;funcret
  2489  002FBA                     __end_of_EnableMotors:
  2490                           	opt stack 0
  2491                           intcon	equ	0xFF2
  2492                           postinc0	equ	0xFEE
  2493                           wreg	equ	0xFE8
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _DisableMotors *****************
  2497 ;; Defined at:
  2498 ;;		line 108 in file "Motors.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		None
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    6
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text21
  2527  002FBA                     __ptext21:
  2528                           	opt stack 0
  2529  002FBA                     _DisableMotors:
  2530                           	opt stack 24
  2531                           
  2532                           ;Motors.c: 110: LATDbits.LATD4 = 0;
  2533                           
  2534                           ;incstack = 0
  2535  002FBA  988C               	bcf	3980,4,c	;volatile
  2536  002FBC  0012               	return		;funcret
  2537  002FBE                     __end_of_DisableMotors:
  2538                           	opt stack 0
  2539                           intcon	equ	0xFF2
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _ConfigureUltrasound *****************
  2545 ;; Defined at:
  2546 ;;		line 9 in file "Ultrasound.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  echo_to_cm      3   14[BANK0 ] float 
  2549 ;;  echo_to_in      3   17[BANK0 ] float 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;		None               void
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    7
  2568 ;; This function calls:
  2569 ;;		_WriteTimer1
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text22
  2576  002C06                     __ptext22:
  2577                           	opt stack 0
  2578  002C06                     _ConfigureUltrasound:
  2579                           	opt stack 23
  2580                           
  2581                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
  2582                           
  2583                           ;incstack = 0
  2584  002C06  C06E  F0DE         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
  2585  002C0A  C06F  F0DF         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
  2586  002C0E  C070  F0E0         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
  2587                           
  2588                           ;Ultrasound.c: 11: convert_in = echo_to_in;
  2589  002C12  C071  F0E1         	movff	ConfigureUltrasound@echo_to_in,_convert_in
  2590  002C16  C072  F0E2         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
  2591  002C1A  C073  F0E3         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
  2592                           
  2593                           ;Ultrasound.c: 12: echo_acq_done = 1;
  2594  002C1E  0E01               	movlw	1
  2595  002C20  6E46               	movwf	_echo_acq_done,c
  2596                           
  2597                           ;Ultrasound.c: 13: WriteTimer1(0);
  2598  002C22  0E00               	movlw	0
  2599  002C24  6E3F               	movwf	WriteTimer1@timer1+1,c
  2600  002C26  0E00               	movlw	0
  2601  002C28  6E3E               	movwf	WriteTimer1@timer1,c
  2602  002C2A  EC35  F017         	call	_WriteTimer1	;wreg free
  2603  002C2E  0012               	return		;funcret
  2604  002C30                     __end_of_ConfigureUltrasound:
  2605                           	opt stack 0
  2606                           intcon	equ	0xFF2
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _ConfigureTimer2 *****************
  2612 ;; Defined at:
  2613 ;;		line 155 in file "FastBuggy17_Main_Code.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    7
  2634 ;; This function calls:
  2635 ;;		_OpenTimer2
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text23
  2642  002F8C                     __ptext23:
  2643                           	opt stack 0
  2644  002F8C                     _ConfigureTimer2:
  2645                           	opt stack 23
  2646                           
  2647                           ;FastBuggy17_Main_Code.c: 157: OpenTimer2(0b01111111
  2648                           ;FastBuggy17_Main_Code.c: 158: & 0b11111100
  2649                           ;FastBuggy17_Main_Code.c: 159: & 0b10000111
  2650                           ;FastBuggy17_Main_Code.c: 160: & 0b10110111);
  2651                           
  2652                           ;incstack = 0
  2653  002F8C  0E04               	movlw	4
  2654  002F8E  ECAA  F016         	call	_OpenTimer2
  2655  002F92  0012               	return		;funcret
  2656  002F94                     __end_of_ConfigureTimer2:
  2657                           	opt stack 0
  2658                           intcon	equ	0xFF2
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           status	equ	0xFD8
  2662                           
  2663 ;; *************** function _OpenTimer2 *****************
  2664 ;; Defined at:
  2665 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  config          1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  config          1   25[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;Total ram usage:        1 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    6
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_ConfigureTimer2
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text24
  2694  002D54                     __ptext24:
  2695                           	opt stack 0
  2696  002D54                     _OpenTimer2:
  2697                           	opt stack 23
  2698                           
  2699                           ;incstack = 0
  2700                           ;OpenTimer2@config stored from wreg
  2701  002D54  6E3E               	movwf	OpenTimer2@config,c
  2702  002D56  503E               	movf	OpenTimer2@config,w,c
  2703  002D58  0BFB               	andlw	251
  2704  002D5A  6ECA               	movwf	4042,c	;volatile
  2705  002D5C  0E00               	movlw	0
  2706  002D5E  6ECC               	movwf	4044,c	;volatile
  2707  002D60  929E               	bcf	3998,1,c	;volatile
  2708  002D62  AE3E               	btfss	OpenTimer2@config,7,c
  2709  002D64  D002               	goto	l632
  2710  002D66  829D               	bsf	3997,1,c	;volatile
  2711  002D68  D001               	goto	l633
  2712  002D6A                     l632:
  2713  002D6A  929D               	bcf	3997,1,c	;volatile
  2714  002D6C                     l633:
  2715  002D6C  84CA               	bsf	4042,2,c	;volatile
  2716  002D6E  0012               	return		;funcret
  2717  002D70                     __end_of_OpenTimer2:
  2718                           	opt stack 0
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _ConfigureTimer1 *****************
  2725 ;; Defined at:
  2726 ;;		line 137 in file "FastBuggy17_Main_Code.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;		None               void
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        0 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    7
  2747 ;; This function calls:
  2748 ;;		_OpenTimer1
  2749 ;;		_WriteTimer1
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text25
  2756  002DEC                     __ptext25:
  2757                           	opt stack 0
  2758  002DEC                     _ConfigureTimer1:
  2759                           	opt stack 23
  2760                           
  2761                           ;FastBuggy17_Main_Code.c: 139: OpenTimer1(0b01111111
  2762                           ;FastBuggy17_Main_Code.c: 140: & 0b11111111
  2763                           ;FastBuggy17_Main_Code.c: 141: & 0b11111101
  2764                           ;FastBuggy17_Main_Code.c: 142: & 0b11011111
  2765                           ;FastBuggy17_Main_Code.c: 143: & 0b11110111
  2766                           ;FastBuggy17_Main_Code.c: 144: & 0b11111111);
  2767                           
  2768                           ;incstack = 0
  2769  002DEC  0E55               	movlw	85
  2770  002DEE  ECED  F015         	call	_OpenTimer1
  2771                           
  2772                           ;FastBuggy17_Main_Code.c: 148: T1CONbits.TMR1ON = 0;
  2773  002DF2  90CD               	bcf	4045,0,c	;volatile
  2774                           
  2775                           ;FastBuggy17_Main_Code.c: 150: WriteTimer1(0);
  2776  002DF4  0E00               	movlw	0
  2777  002DF6  6E3F               	movwf	WriteTimer1@timer1+1,c
  2778  002DF8  0E00               	movlw	0
  2779  002DFA  6E3E               	movwf	WriteTimer1@timer1,c
  2780  002DFC  EC35  F017         	call	_WriteTimer1	;wreg free
  2781  002E00  0012               	return		;funcret
  2782  002E02                     __end_of_ConfigureTimer1:
  2783                           	opt stack 0
  2784                           intcon	equ	0xFF2
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function _WriteTimer1 *****************
  2790 ;; Defined at:
  2791 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  timer1          2   25[COMRAM] unsigned int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  timer           2   27[COMRAM] struct Timers
  2796 ;; Return value:  Size  Location     Type
  2797 ;;		None               void
  2798 ;; Registers used:
  2799 ;;		None
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;Total ram usage:        4 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    6
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_ConfigureUltrasound
  2816 ;;		_ConfigureTimer1
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text26
  2821  002E6A                     __ptext26:
  2822                           	opt stack 0
  2823  002E6A                     _WriteTimer1:
  2824                           	opt stack 23
  2825                           
  2826                           ;incstack = 0
  2827  002E6A  C03E  F040         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2828  002E6E  C03F  F041         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2829  002E72  C041  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2830  002E76  C040  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2831  002E7A  0012               	return		;funcret
  2832  002E7C                     __end_of_WriteTimer1:
  2833                           	opt stack 0
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _OpenTimer1 *****************
  2840 ;; Defined at:
  2841 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  config          1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  config          1   25[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:        1 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    6
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_ConfigureTimer1
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text27
  2870  002BDA                     __ptext27:
  2871                           	opt stack 0
  2872  002BDA                     _OpenTimer1:
  2873                           	opt stack 23
  2874                           
  2875                           ;incstack = 0
  2876                           ;OpenTimer1@config stored from wreg
  2877  002BDA  6E3E               	movwf	OpenTimer1@config,c
  2878  002BDC  503E               	movf	OpenTimer1@config,w,c
  2879  002BDE  0B7E               	andlw	126
  2880  002BE0  6ECD               	movwf	4045,c	;volatile
  2881  002BE2  AC3E               	btfss	OpenTimer1@config,6,c
  2882  002BE4  D002               	goto	l601
  2883  002BE6  8ECD               	bsf	4045,7,c	;volatile
  2884  002BE8  D002               	goto	l3154
  2885  002BEA                     l601:
  2886  002BEA  9ECD               	bcf	4045,7,c	;volatile
  2887  002BEC  D000               	goto	l3154
  2888  002BEE                     l3154:
  2889  002BEE  0E00               	movlw	0
  2890  002BF0  6ECF               	movwf	4047,c	;volatile
  2891  002BF2  0E00               	movlw	0
  2892  002BF4  6ECE               	movwf	4046,c	;volatile
  2893  002BF6  909E               	bcf	3998,0,c	;volatile
  2894  002BF8  AE3E               	btfss	OpenTimer1@config,7,c
  2895  002BFA  D002               	goto	l603
  2896  002BFC  809D               	bsf	3997,0,c	;volatile
  2897  002BFE  D001               	goto	l604
  2898  002C00                     l603:
  2899  002C00  909D               	bcf	3997,0,c	;volatile
  2900  002C02                     l604:
  2901  002C02  80CD               	bsf	4045,0,c	;volatile
  2902  002C04  0012               	return		;funcret
  2903  002C06                     __end_of_OpenTimer1:
  2904                           	opt stack 0
  2905                           intcon	equ	0xFF2
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _ConfigureTimer0 *****************
  2911 ;; Defined at:
  2912 ;;		line 123 in file "FastBuggy17_Main_Code.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;		None               void
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    7
  2933 ;; This function calls:
  2934 ;;		_OpenTimer0
  2935 ;;		_WriteTimer0
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text28
  2942  002E44                     __ptext28:
  2943                           	opt stack 0
  2944  002E44                     _ConfigureTimer0:
  2945                           	opt stack 23
  2946                           
  2947                           ;FastBuggy17_Main_Code.c: 125: OpenTimer0(0b11111111
  2948                           ;FastBuggy17_Main_Code.c: 126: & 0b10111111
  2949                           ;FastBuggy17_Main_Code.c: 127: & 0b11011111
  2950                           ;FastBuggy17_Main_Code.c: 128: & 0b11111111);
  2951                           
  2952                           ;incstack = 0
  2953  002E44  0E9F               	movlw	159
  2954  002E46  EC8B  F016         	call	_OpenTimer0
  2955                           
  2956                           ;FastBuggy17_Main_Code.c: 132: WriteTimer0(63036);
  2957  002E4A  0EF6               	movlw	246
  2958  002E4C  6E3F               	movwf	WriteTimer0@timer0+1,c
  2959  002E4E  0E3C               	movlw	60
  2960  002E50  6E3E               	movwf	WriteTimer0@timer0,c
  2961  002E52  EC3E  F017         	call	_WriteTimer0	;wreg free
  2962  002E56  0012               	return		;funcret
  2963  002E58                     __end_of_ConfigureTimer0:
  2964                           	opt stack 0
  2965                           intcon	equ	0xFF2
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _WriteTimer0 *****************
  2971 ;; Defined at:
  2972 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  timer0          2   25[COMRAM] unsigned int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  timer           2   27[COMRAM] struct Timers
  2977 ;; Return value:  Size  Location     Type
  2978 ;;		None               void
  2979 ;; Registers used:
  2980 ;;		None
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        4 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    6
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_ResetMillis
  2997 ;;		_ConfigureTimer0
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text29
  3002  002E7C                     __ptext29:
  3003                           	opt stack 0
  3004  002E7C                     _WriteTimer0:
  3005                           	opt stack 23
  3006                           
  3007                           ;incstack = 0
  3008  002E7C  C03E  F040         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3009  002E80  C03F  F041         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3010  002E84  C041  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3011  002E88  C040  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3012  002E8C  0012               	return		;funcret
  3013  002E8E                     __end_of_WriteTimer0:
  3014                           	opt stack 0
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _OpenTimer0 *****************
  3021 ;; Defined at:
  3022 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  config          1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  config          1   25[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        1 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    6
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_ConfigureTimer0
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text30
  3051  002D16                     __ptext30:
  3052                           	opt stack 0
  3053  002D16                     _OpenTimer0:
  3054                           	opt stack 23
  3055                           
  3056                           ;incstack = 0
  3057                           ;OpenTimer0@config stored from wreg
  3058  002D16  6E3E               	movwf	OpenTimer0@config,c
  3059  002D18  503E               	movf	OpenTimer0@config,w,c
  3060  002D1A  0B7F               	andlw	127
  3061  002D1C  6ED5               	movwf	4053,c	;volatile
  3062  002D1E  0E00               	movlw	0
  3063  002D20  6ED7               	movwf	4055,c	;volatile
  3064  002D22  0E00               	movlw	0
  3065  002D24  6ED6               	movwf	4054,c	;volatile
  3066  002D26  94F2               	bcf	intcon,2,c	;volatile
  3067  002D28  AE3E               	btfss	OpenTimer0@config,7,c
  3068  002D2A  D002               	goto	l577
  3069  002D2C  8AF2               	bsf	intcon,5,c	;volatile
  3070  002D2E  D001               	goto	l578
  3071  002D30                     l577:
  3072  002D30  9AF2               	bcf	intcon,5,c	;volatile
  3073  002D32                     l578:
  3074  002D32  8ED5               	bsf	4053,7,c	;volatile
  3075  002D34  0012               	return		;funcret
  3076  002D36                     __end_of_OpenTimer0:
  3077                           	opt stack 0
  3078                           intcon	equ	0xFF2
  3079                           postinc0	equ	0xFEE
  3080                           wreg	equ	0xFE8
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _ConfigurePWM *****************
  3084 ;; Defined at:
  3085 ;;		line 173 in file "FastBuggy17_Main_Code.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    7
  3106 ;; This function calls:
  3107 ;;		_OpenPWM4
  3108 ;;		_OpenPWM5
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text31
  3115  002F50                     __ptext31:
  3116                           	opt stack 0
  3117  002F50                     _ConfigurePWM:
  3118                           	opt stack 23
  3119                           
  3120                           ;FastBuggy17_Main_Code.c: 175: OpenPWM4(130);
  3121                           
  3122                           ;incstack = 0
  3123  002F50  0E82               	movlw	130
  3124  002F52  EC67  F016         	call	_OpenPWM4
  3125                           
  3126                           ;FastBuggy17_Main_Code.c: 176: OpenPWM5(130);
  3127  002F56  0E82               	movlw	130
  3128  002F58  EC55  F016         	call	_OpenPWM5
  3129  002F5C  0012               	return		;funcret
  3130  002F5E                     __end_of_ConfigurePWM:
  3131                           	opt stack 0
  3132                           intcon	equ	0xFF2
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function _OpenPWM5 *****************
  3138 ;; Defined at:
  3139 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  period          1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  period          1   25[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg, status,2
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    6
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_ConfigurePWM
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text32
  3168  002CAA                     __ptext32:
  3169                           	opt stack 0
  3170  002CAA                     _OpenPWM5:
  3171                           	opt stack 23
  3172                           
  3173                           ;incstack = 0
  3174                           ;OpenPWM5@period stored from wreg
  3175  002CAA  6E3E               	movwf	OpenPWM5@period,c
  3176  002CAC  0E0C               	movlw	12
  3177  002CAE  6E70               	movwf	3952,c	;volatile
  3178  002CB0  ACB1               	btfss	4017,6,c	;volatile
  3179  002CB2  B6B1               	btfsc	4017,3,c	;volatile
  3180  002CB4  D005               	goto	l555
  3181  002CB6  94CA               	bcf	4042,2,c	;volatile
  3182  002CB8  C03E  FFCB         	movff	OpenPWM5@period,4043	;volatile
  3183  002CBC  84CA               	bsf	4042,2,c	;volatile
  3184  002CBE  D005               	goto	l3206
  3185  002CC0                     l555:
  3186  002CC0  9476               	bcf	3958,2,c	;volatile
  3187  002CC2  C03E  FF77         	movff	OpenPWM5@period,3959	;volatile
  3188  002CC6  8476               	bsf	3958,2,c	;volatile
  3189  002CC8  D000               	goto	l3206
  3190  002CCA                     l3206:
  3191  002CCA  9898               	bcf	3992,4,c	;volatile
  3192  002CCC  0012               	return		;funcret
  3193  002CCE                     __end_of_OpenPWM5:
  3194                           	opt stack 0
  3195                           intcon	equ	0xFF2
  3196                           postinc0	equ	0xFEE
  3197                           wreg	equ	0xFE8
  3198                           status	equ	0xFD8
  3199                           
  3200 ;; *************** function _OpenPWM4 *****************
  3201 ;; Defined at:
  3202 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  period          1    wreg     unsigned char 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  period          1   25[COMRAM] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;		None               void
  3209 ;; Registers used:
  3210 ;;		wreg, status,2
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;Total ram usage:        1 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    6
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_ConfigurePWM
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text33
  3231  002CCE                     __ptext33:
  3232                           	opt stack 0
  3233  002CCE                     _OpenPWM4:
  3234                           	opt stack 23
  3235                           
  3236                           ;incstack = 0
  3237                           ;OpenPWM4@period stored from wreg
  3238  002CCE  6E3E               	movwf	OpenPWM4@period,c
  3239  002CD0  0E0C               	movlw	12
  3240  002CD2  6E73               	movwf	3955,c	;volatile
  3241  002CD4  9698               	bcf	3992,3,c	;volatile
  3242  002CD6  ACB1               	btfss	4017,6,c	;volatile
  3243  002CD8  B6B1               	btfsc	4017,3,c	;volatile
  3244  002CDA  D005               	goto	l529
  3245  002CDC  94CA               	bcf	4042,2,c	;volatile
  3246  002CDE  C03E  FFCB         	movff	OpenPWM4@period,4043	;volatile
  3247  002CE2  84CA               	bsf	4042,2,c	;volatile
  3248  002CE4  D005               	goto	l531
  3249  002CE6                     l529:
  3250  002CE6  9476               	bcf	3958,2,c	;volatile
  3251  002CE8  C03E  FF77         	movff	OpenPWM4@period,3959	;volatile
  3252  002CEC  8476               	bsf	3958,2,c	;volatile
  3253  002CEE  D000               	goto	l531
  3254  002CF0                     l531:
  3255  002CF0  0012               	return		;funcret
  3256  002CF2                     __end_of_OpenPWM4:
  3257                           	opt stack 0
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _ConfigureInterrupts *****************
  3264 ;; Defined at:
  3265 ;;		line 72 in file "FastBuggy17_Main_Code.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		None
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    6
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text34
  3294  002D8A                     __ptext34:
  3295                           	opt stack 0
  3296  002D8A                     _ConfigureInterrupts:
  3297                           	opt stack 24
  3298                           
  3299                           ;FastBuggy17_Main_Code.c: 74: INTCONbits.GIE = 1;
  3300                           
  3301                           ;incstack = 0
  3302  002D8A  8EF2               	bsf	intcon,7,c	;volatile
  3303                           
  3304                           ;FastBuggy17_Main_Code.c: 75: INTCONbits.PEIE = 1;
  3305  002D8C  8CF2               	bsf	intcon,6,c	;volatile
  3306                           
  3307                           ;FastBuggy17_Main_Code.c: 76: RCONbits.IPEN = 1;
  3308  002D8E  8ED0               	bsf	4048,7,c	;volatile
  3309                           
  3310                           ;FastBuggy17_Main_Code.c: 93: INTCONbits.RBIE = 0;
  3311  002D90  96F2               	bcf	intcon,3,c	;volatile
  3312                           
  3313                           ;FastBuggy17_Main_Code.c: 94: INTCONbits.RBIF = 0;
  3314  002D92  90F2               	bcf	intcon,0,c	;volatile
  3315                           
  3316                           ;FastBuggy17_Main_Code.c: 95: INTCON2bits.RBIP = 1;
  3317  002D94  80F1               	bsf	intcon2,0,c	;volatile
  3318                           
  3319                           ;FastBuggy17_Main_Code.c: 98: INTCONbits.TMR0IE = 1;
  3320  002D96  8AF2               	bsf	intcon,5,c	;volatile
  3321                           
  3322                           ;FastBuggy17_Main_Code.c: 99: INTCONbits.TMR0IF = 0;
  3323  002D98  94F2               	bcf	intcon,2,c	;volatile
  3324                           
  3325                           ;FastBuggy17_Main_Code.c: 100: INTCON2bits.TMR0IP = 1;
  3326  002D9A  84F1               	bsf	intcon2,2,c	;volatile
  3327                           
  3328                           ;FastBuggy17_Main_Code.c: 109: PIE1bits.ADIE = 0;
  3329  002D9C  9C9D               	bcf	3997,6,c	;volatile
  3330                           
  3331                           ;FastBuggy17_Main_Code.c: 110: PIR1bits.ADIF = 0;
  3332  002D9E  9C9E               	bcf	3998,6,c	;volatile
  3333                           
  3334                           ;FastBuggy17_Main_Code.c: 111: IPR1bits.ADIP = 0;
  3335  002DA0  9C9F               	bcf	3999,6,c	;volatile
  3336  002DA2  0012               	return		;funcret
  3337  002DA4                     __end_of_ConfigureInterrupts:
  3338                           	opt stack 0
  3339                           intcon	equ	0xFF2
  3340                           intcon2	equ	0xFF1
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           status	equ	0xFD8
  3344                           
  3345 ;; *************** function _ConfigureBuggyIO *****************
  3346 ;; Defined at:
  3347 ;;		line 196 in file "FastBuggy17_Main_Code.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    6
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text35
  3376  002DA4                     __ptext35:
  3377                           	opt stack 0
  3378  002DA4                     _ConfigureBuggyIO:
  3379                           	opt stack 24
  3380                           
  3381                           ;FastBuggy17_Main_Code.c: 199: TRISA = 0xFF;
  3382                           
  3383                           ;incstack = 0
  3384  002DA4  6892               	setf	3986,c	;volatile
  3385                           
  3386                           ;FastBuggy17_Main_Code.c: 202: TRISB = 0xFF;
  3387  002DA6  6893               	setf	3987,c	;volatile
  3388                           
  3389                           ;FastBuggy17_Main_Code.c: 205: TRISC = 0xBF;
  3390  002DA8  0EBF               	movlw	191
  3391  002DAA  6E94               	movwf	3988,c	;volatile
  3392                           
  3393                           ;FastBuggy17_Main_Code.c: 208: TRISD = 0b11100000;
  3394  002DAC  0EE0               	movlw	224
  3395  002DAE  6E95               	movwf	3989,c	;volatile
  3396                           
  3397                           ;FastBuggy17_Main_Code.c: 211: TRISE = 0x80;
  3398  002DB0  0E80               	movlw	128
  3399  002DB2  6E96               	movwf	3990,c	;volatile
  3400                           
  3401                           ;FastBuggy17_Main_Code.c: 214: TRISG = 0xE7;
  3402  002DB4  0EE7               	movlw	231
  3403  002DB6  6E98               	movwf	3992,c	;volatile
  3404                           
  3405                           ;FastBuggy17_Main_Code.c: 217: TRISJ = 0x00;
  3406  002DB8  0E00               	movlw	0
  3407  002DBA  6E9A               	movwf	3994,c	;volatile
  3408  002DBC  0012               	return		;funcret
  3409  002DBE                     __end_of_ConfigureBuggyIO:
  3410                           	opt stack 0
  3411                           intcon	equ	0xFF2
  3412                           intcon2	equ	0xFF1
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           status	equ	0xFD8
  3416                           
  3417 ;; *************** function _ConfigureADC *****************
  3418 ;; Defined at:
  3419 ;;		line 222 in file "FastBuggy17_Main_Code.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    7
  3440 ;; This function calls:
  3441 ;;		_OpenADC
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text36
  3448  002ED6                     __ptext36:
  3449                           	opt stack 0
  3450  002ED6                     _ConfigureADC:
  3451                           	opt stack 23
  3452                           
  3453                           ;FastBuggy17_Main_Code.c: 224: OpenADC(0b10011111
  3454                           ;FastBuggy17_Main_Code.c: 225: & 0b11111111
  3455                           ;FastBuggy17_Main_Code.c: 226: & 0b11110101,
  3456                           ;FastBuggy17_Main_Code.c: 227: 0b10000111
  3457                           ;FastBuggy17_Main_Code.c: 228: & 0b01111111
  3458                           ;FastBuggy17_Main_Code.c: 229: & 0b11111110
  3459                           ;FastBuggy17_Main_Code.c: 230: & 0b11111101,
  3460                           ;FastBuggy17_Main_Code.c: 231: 9);
  3461                           
  3462                           ;incstack = 0
  3463  002ED6  0E04               	movlw	4
  3464  002ED8  6E3E               	movwf	OpenADC@config2,c
  3465  002EDA  0E09               	movlw	9
  3466  002EDC  6E3F               	movwf	OpenADC@portconfig,c
  3467  002EDE  0E95               	movlw	149
  3468  002EE0  ECDD  F014         	call	_OpenADC
  3469  002EE4  0012               	return		;funcret
  3470  002EE6                     __end_of_ConfigureADC:
  3471                           	opt stack 0
  3472                           intcon	equ	0xFF2
  3473                           intcon2	equ	0xFF1
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _OpenADC *****************
  3479 ;; Defined at:
  3480 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  config          1    wreg     unsigned char 
  3483 ;;  config2         1   25[COMRAM] unsigned char 
  3484 ;;  portconfig      1   26[COMRAM] unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  config          1   29[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        5 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    6
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_ConfigureADC
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text37
  3511  0029BA                     __ptext37:
  3512                           	opt stack 0
  3513  0029BA                     _OpenADC:
  3514                           	opt stack 23
  3515                           
  3516                           ;incstack = 0
  3517                           ;OpenADC@config stored from wreg
  3518  0029BA  6E42               	movwf	OpenADC@config,c
  3519  0029BC  0E00               	movlw	0
  3520  0029BE  6EC2               	movwf	4034,c	;volatile
  3521  0029C0  0E00               	movlw	0
  3522  0029C2  6EC0               	movwf	4032,c	;volatile
  3523  0029C4  90D8               	bcf	status,0,c
  3524  0029C6  303E               	rrcf	OpenADC@config2,w,c
  3525  0029C8  0B3C               	andlw	60
  3526  0029CA  6EC2               	movwf	4034,c	;volatile
  3527  0029CC  C03E  F040         	movff	OpenADC@config2,??_OpenADC
  3528  0029D0  3A40               	swapf	??_OpenADC,f,c
  3529  0029D2  0EF0               	movlw	240
  3530  0029D4  1640               	andwf	??_OpenADC,f,c
  3531  0029D6  0E30               	movlw	48
  3532  0029D8  1640               	andwf	??_OpenADC,f,c
  3533  0029DA  503F               	movf	OpenADC@portconfig,w,c
  3534  0029DC  0B0F               	andlw	15
  3535  0029DE  1040               	iorwf	??_OpenADC,w,c
  3536  0029E0  6EC1               	movwf	4033,c	;volatile
  3537  0029E2  C042  F040         	movff	OpenADC@config,??_OpenADC
  3538  0029E6  90D8               	bcf	status,0,c
  3539  0029E8  3640               	rlcf	??_OpenADC,f,c
  3540  0029EA  90D8               	bcf	status,0,c
  3541  0029EC  3640               	rlcf	??_OpenADC,f,c
  3542  0029EE  0E38               	movlw	56
  3543  0029F0  1640               	andwf	??_OpenADC,f,c
  3544  0029F2  C042  F041         	movff	OpenADC@config,??_OpenADC+1
  3545  0029F6  3A41               	swapf	??_OpenADC+1,f,c
  3546  0029F8  0E0F               	movlw	15
  3547  0029FA  1641               	andwf	??_OpenADC+1,f,c
  3548  0029FC  0E07               	movlw	7
  3549  0029FE  1641               	andwf	??_OpenADC+1,f,c
  3550  002A00  5042               	movf	OpenADC@config,w,c
  3551  002A02  0B80               	andlw	128
  3552  002A04  1041               	iorwf	??_OpenADC+1,w,c
  3553  002A06  1040               	iorwf	??_OpenADC,w,c
  3554  002A08  6EC0               	movwf	4032,c	;volatile
  3555  002A0A  AE3E               	btfss	OpenADC@config2,7,c
  3556  002A0C  D003               	goto	l499
  3557  002A0E  9C9E               	bcf	3998,6,c	;volatile
  3558  002A10  8C9D               	bsf	3997,6,c	;volatile
  3559  002A12  8CF2               	bsf	intcon,6,c	;volatile
  3560  002A14                     l499:
  3561  002A14  80C2               	bsf	4034,0,c	;volatile
  3562  002A16  0012               	return		;funcret
  3563  002A18                     __end_of_OpenADC:
  3564                           	opt stack 0
  3565                           intcon	equ	0xFF2
  3566                           intcon2	equ	0xFF1
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _ChangeMode *****************
  3572 ;; Defined at:
  3573 ;;		line 503 in file "FastBuggy17_Main_Code.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    7
  3594 ;; This function calls:
  3595 ;;		_Delay10KTCYx
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text38
  3602  002C5A                     __ptext38:
  3603                           	opt stack 0
  3604  002C5A                     _ChangeMode:
  3605                           	opt stack 23
  3606                           
  3607                           ;FastBuggy17_Main_Code.c: 504: LATJ = 0x00;
  3608                           
  3609                           ;incstack = 0
  3610  002C5A  0E00               	movlw	0
  3611  002C5C  6E91               	movwf	3985,c	;volatile
  3612                           
  3613                           ;FastBuggy17_Main_Code.c: 505: LATJ = 0x1F;
  3614  002C5E  0E1F               	movlw	31
  3615  002C60  6E91               	movwf	3985,c	;volatile
  3616                           
  3617                           ;FastBuggy17_Main_Code.c: 506: Delay10KTCYx(125);
  3618  002C62  0E7D               	movlw	125
  3619  002C64  ECDF  F016         	call	_Delay10KTCYx
  3620                           
  3621                           ;FastBuggy17_Main_Code.c: 507: LATJ = 0x00;
  3622  002C68  0E00               	movlw	0
  3623  002C6A  6E91               	movwf	3985,c	;volatile
  3624                           
  3625                           ;FastBuggy17_Main_Code.c: 508: Delay10KTCYx(125);
  3626  002C6C  0E7D               	movlw	125
  3627  002C6E  ECDF  F016         	call	_Delay10KTCYx
  3628                           
  3629                           ;FastBuggy17_Main_Code.c: 509: LATJ = 0x1F;
  3630  002C72  0E1F               	movlw	31
  3631  002C74  6E91               	movwf	3985,c	;volatile
  3632                           
  3633                           ;FastBuggy17_Main_Code.c: 510: Delay10KTCYx(125);
  3634  002C76  0E7D               	movlw	125
  3635  002C78  ECDF  F016         	call	_Delay10KTCYx
  3636                           
  3637                           ;FastBuggy17_Main_Code.c: 511: LATJ = 0x00;
  3638  002C7C  0E00               	movlw	0
  3639  002C7E  6E91               	movwf	3985,c	;volatile
  3640  002C80  0012               	return		;funcret
  3641  002C82                     __end_of_ChangeMode:
  3642                           	opt stack 0
  3643                           intcon	equ	0xFF2
  3644                           intcon2	equ	0xFF1
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _Delay10KTCYx *****************
  3650 ;; Defined at:
  3651 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  unit            1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  unit            1   26[COMRAM] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;		None               void
  3658 ;; Registers used:
  3659 ;;		wreg
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;Total ram usage:        2 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    6
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_ChangeMode
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text39
  3681  002DBE                     __ptext39:
  3682                           	opt stack 0
  3683  002DBE                     _Delay10KTCYx:
  3684                           	opt stack 24
  3685                           
  3686                           ;incstack = 0
  3687                           ;Delay10KTCYx@unit stored from wreg
  3688  002DBE  6E3F               	movwf	Delay10KTCYx@unit,c
  3689  002DC0  0E0D               	movlw	13
  3690  002DC2  6E3E               	movwf	??_Delay10KTCYx& (0+255),c
  3691  002DC4  0EFC               	movlw	252
  3692  002DC6                     u3857:
  3693  002DC6  2EE8               	decfsz	wreg,f,c
  3694  002DC8  D7FE               	goto	u3857
  3695  002DCA  2E3E               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3696  002DCC  D7FC               	goto	u3857
  3697  002DCE  2E3F               	decfsz	Delay10KTCYx@unit,f,c
  3698  002DD0  D7F7               	goto	l3340
  3699  002DD2  D000               	goto	l893
  3700  002DD4                     l893:
  3701  002DD4  0012               	return		;funcret
  3702  002DD6                     __end_of_Delay10KTCYx:
  3703                           	opt stack 0
  3704                           intcon	equ	0xFF2
  3705                           intcon2	equ	0xFF1
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           status	equ	0xFD8
  3709                           
  3710 ;; *************** function _CalibrateSensors *****************
  3711 ;; Defined at:
  3712 ;;		line 439 in file "FastBuggy17_Main_Code.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  index           1   30[COMRAM] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;		None               void
  3719 ;; Registers used:
  3720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;Total ram usage:        3 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    9
  3733 ;; This function calls:
  3734 ;;		_BusySensorAcq
  3735 ;;		_GetSensorReadings
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text40
  3742  0028F6                     __ptext40:
  3743                           	opt stack 0
  3744  0028F6                     _CalibrateSensors:
  3745                           	opt stack 21
  3746                           
  3747                           ;FastBuggy17_Main_Code.c: 440: unsigned char index;
  3748                           ;FastBuggy17_Main_Code.c: 442: GetSensorReadings();
  3749                           
  3750                           ;incstack = 0
  3751  0028F6  EC01  F017         	call	_GetSensorReadings	;wreg free
  3752                           
  3753                           ;FastBuggy17_Main_Code.c: 444: while(BusySensorAcq());
  3754  0028FA  D000               	goto	l3522
  3755  0028FC                     l3522:
  3756  0028FC  EC7B  F017         	call	_BusySensorAcq	;wreg free
  3757  002900  0900               	iorlw	0
  3758  002902  A4D8               	btfss	status,2,c
  3759  002904  D7FB               	goto	l3522
  3760                           
  3761                           ;FastBuggy17_Main_Code.c: 446: for(index = 0; index < 5; index++) {
  3762  002906  0E00               	movlw	0
  3763  002908  6E43               	movwf	CalibrateSensors@index,c
  3764  00290A                     l3526:
  3765  00290A  0E04               	movlw	4
  3766  00290C  6443               	cpfsgt	CalibrateSensors@index,c
  3767  00290E  D001               	goto	l3530
  3768  002910  D022               	goto	l412
  3769  002912                     l3530:
  3770                           
  3771                           ;FastBuggy17_Main_Code.c: 448: sensor_offsets[index] = sensor_readings_raw[2] - sensor_r
      +                          eadings_raw[index];
  3772  002912  5043               	movf	CalibrateSensors@index,w,c
  3773  002914  0D02               	mullw	2
  3774  002916  0E01               	movlw	low _sensor_readings_raw
  3775  002918  24F3               	addwf	prodl,w,c
  3776  00291A  6ED9               	movwf	fsr2l,c
  3777  00291C  0E00               	movlw	high _sensor_readings_raw
  3778  00291E  20F4               	addwfc	prodh,w,c
  3779  002920  6EDA               	movwf	fsr2h,c
  3780  002922  CFDE F041          	movff	postinc2,??_CalibrateSensors
  3781  002926  CFDD F042          	movff	postdec2,??_CalibrateSensors+1
  3782  00292A  1E41               	comf	??_CalibrateSensors,f,c
  3783  00292C  1E42               	comf	??_CalibrateSensors+1,f,c
  3784  00292E  4A41               	infsnz	??_CalibrateSensors,f,c
  3785  002930  2A42               	incf	??_CalibrateSensors+1,f,c
  3786  002932  5005               	movf	_sensor_readings_raw+4,w,c	;volatile
  3787  002934  2641               	addwf	??_CalibrateSensors,f,c
  3788  002936  5006               	movf	_sensor_readings_raw+5,w,c	;volatile
  3789  002938  2242               	addwfc	??_CalibrateSensors+1,f,c
  3790  00293A  5043               	movf	CalibrateSensors@index,w,c
  3791  00293C  0D02               	mullw	2
  3792  00293E  0EC4               	movlw	low _sensor_offsets
  3793  002940  24F3               	addwf	prodl,w,c
  3794  002942  6ED9               	movwf	fsr2l,c
  3795  002944  0E00               	movlw	high _sensor_offsets
  3796  002946  20F4               	addwfc	prodh,w,c
  3797  002948  6EDA               	movwf	fsr2h,c
  3798  00294A  C041  FFDE         	movff	??_CalibrateSensors,postinc2
  3799  00294E  C042  FFDD         	movff	??_CalibrateSensors+1,postdec2
  3800  002952  2A43               	incf	CalibrateSensors@index,f,c
  3801  002954  D7DA               	goto	l3526
  3802  002956                     l412:
  3803  002956  0012               	return		;funcret
  3804  002958                     __end_of_CalibrateSensors:
  3805                           	opt stack 0
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           intcon	equ	0xFF2
  3809                           intcon2	equ	0xFF1
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _CalibrateLine *****************
  3819 ;; Defined at:
  3820 ;;		line 455 in file "FastBuggy17_Main_Code.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  sum             1    0        unsigned char 
  3825 ;;  index           1    0        unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;		None               void
  3828 ;; Registers used:
  3829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    9
  3842 ;; This function calls:
  3843 ;;		_BusyADC
  3844 ;;		_BusySensorAcq
  3845 ;;		_CalculateSensorStatuses
  3846 ;;		_ConvertADC
  3847 ;;		_DisplaySensorStatuses
  3848 ;;		_GetSensorReadings
  3849 ;;		_NormaliseSensorReadings
  3850 ;;		_ReadADC
  3851 ;;		_SetADCChannel
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text41
  3858  002A68                     __ptext41:
  3859                           	opt stack 0
  3860  002A68                     _CalibrateLine:
  3861                           	opt stack 21
  3862                           
  3863                           ;FastBuggy17_Main_Code.c: 456: unsigned char index, sum;
  3864                           ;FastBuggy17_Main_Code.c: 460: LATJ = 0x00;
  3865                           
  3866                           ;incstack = 0
  3867  002A68  0E00               	movlw	0
  3868  002A6A  6E91               	movwf	3985,c	;volatile
  3869                           
  3870                           ;FastBuggy17_Main_Code.c: 463: SetADCChannel(5);
  3871  002A6C  0E05               	movlw	5
  3872  002A6E  ECF0  F00F         	call	_SetADCChannel
  3873                           
  3874                           ;FastBuggy17_Main_Code.c: 464: ConvertADC();
  3875  002A72  ECDF  F017         	call	_ConvertADC	;wreg free
  3876                           
  3877                           ;FastBuggy17_Main_Code.c: 465: while(BusyADC());
  3878  002A76  D000               	goto	l3542
  3879  002A78                     l3542:
  3880  002A78  ECAF  F017         	call	_BusyADC	;wreg free
  3881  002A7C  0900               	iorlw	0
  3882  002A7E  A4D8               	btfss	status,2,c
  3883  002A80  D7FB               	goto	l3542
  3884                           
  3885                           ;FastBuggy17_Main_Code.c: 466: sensor_threshold = ReadADC();
  3886  002A82  EC73  F017         	call	_ReadADC	;wreg free
  3887  002A86  C03E  F019         	movff	?_ReadADC,_sensor_threshold
  3888  002A8A  C03F  F01A         	movff	?_ReadADC+1,_sensor_threshold+1
  3889                           
  3890                           ;FastBuggy17_Main_Code.c: 469: GetSensorReadings();
  3891  002A8E  EC01  F017         	call	_GetSensorReadings	;wreg free
  3892                           
  3893                           ;FastBuggy17_Main_Code.c: 471: while(BusySensorAcq());
  3894  002A92  D000               	goto	l3548
  3895  002A94                     l3548:
  3896  002A94  EC7B  F017         	call	_BusySensorAcq	;wreg free
  3897  002A98  0900               	iorlw	0
  3898  002A9A  A4D8               	btfss	status,2,c
  3899  002A9C  D7FB               	goto	l3548
  3900                           
  3901                           ;FastBuggy17_Main_Code.c: 473: NormaliseSensorReadings();
  3902  002A9E  ECAC  F014         	call	_NormaliseSensorReadings	;wreg free
  3903                           
  3904                           ;FastBuggy17_Main_Code.c: 475: CalculateSensorStatuses();
  3905  002AA2  EC4F  F011         	call	_CalculateSensorStatuses	;wreg free
  3906                           
  3907                           ;FastBuggy17_Main_Code.c: 477: DisplaySensorStatuses(sensor_status);
  3908  002AA6  0E20               	movlw	low _sensor_status
  3909  002AA8  6E3E               	movwf	DisplaySensorStatuses@status_array,c
  3910  002AAA  0E00               	movlw	high _sensor_status
  3911  002AAC  6E3F               	movwf	DisplaySensorStatuses@status_array+1,c
  3912  002AAE  ECB6  F015         	call	_DisplaySensorStatuses	;wreg free
  3913  002AB2  0012               	return		;funcret
  3914  002AB4                     __end_of_CalibrateLine:
  3915                           	opt stack 0
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           intcon	equ	0xFF2
  3919                           intcon2	equ	0xFF1
  3920                           postinc0	equ	0xFEE
  3921                           wreg	equ	0xFE8
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _ReadADC *****************
  3929 ;; Defined at:
  3930 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2   25[COMRAM] int 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        4 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    6
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_CalibrateLine
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text42
  3959  002EE6                     __ptext42:
  3960                           	opt stack 0
  3961  002EE6                     _ReadADC:
  3962                           	opt stack 23
  3963                           
  3964                           ;incstack = 0
  3965  002EE6  50C4               	movf	4036,w,c	;volatile
  3966  002EE8  6E40               	movwf	??_ReadADC& (0+255),c
  3967  002EEA  50C3               	movf	4035,w,c	;volatile
  3968  002EEC  6E3E               	movwf	?_ReadADC,c
  3969  002EEE  C040  F03F         	movff	??_ReadADC,?_ReadADC+1
  3970  002EF2  D000               	goto	l507
  3971  002EF4                     l507:
  3972  002EF4  0012               	return		;funcret
  3973  002EF6                     __end_of_ReadADC:
  3974                           	opt stack 0
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           intcon2	equ	0xFF1
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           postinc2	equ	0xFDE
  3982                           postdec2	equ	0xFDD
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _NormaliseSensorReadings *****************
  3988 ;; Defined at:
  3989 ;;		line 325 in file "FastBuggy17_Main_Code.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  index           1   29[COMRAM] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        5 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    6
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_CalibrateLine
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text43
  4019  002958                     __ptext43:
  4020                           	opt stack 0
  4021  002958                     _NormaliseSensorReadings:
  4022                           	opt stack 24
  4023                           
  4024                           ;FastBuggy17_Main_Code.c: 326: unsigned char index;
  4025                           ;FastBuggy17_Main_Code.c: 328: for(index = 0; index < 5; index++) {
  4026                           
  4027                           ;incstack = 0
  4028  002958  0E00               	movlw	0
  4029  00295A  6E42               	movwf	NormaliseSensorReadings@index,c
  4030  00295C                     l3234:
  4031  00295C  0E04               	movlw	4
  4032  00295E  6442               	cpfsgt	NormaliseSensorReadings@index,c
  4033  002960  D001               	goto	l3238
  4034  002962  D02A               	goto	l359
  4035  002964                     l3238:
  4036                           
  4037                           ;FastBuggy17_Main_Code.c: 330: sensor_readings_normalised[index] = sensor_readings_raw[i
      +                          ndex] + sensor_offsets[index];
  4038  002964  5042               	movf	NormaliseSensorReadings@index,w,c
  4039  002966  0D02               	mullw	2
  4040  002968  0EC4               	movlw	low _sensor_offsets
  4041  00296A  24F3               	addwf	prodl,w,c
  4042  00296C  6ED9               	movwf	fsr2l,c
  4043  00296E  0E00               	movlw	high _sensor_offsets
  4044  002970  20F4               	addwfc	prodh,w,c
  4045  002972  6EDA               	movwf	fsr2h,c
  4046  002974  CFDE F03E          	movff	postinc2,??_NormaliseSensorReadings
  4047  002978  CFDD F03F          	movff	postdec2,??_NormaliseSensorReadings+1
  4048  00297C  5042               	movf	NormaliseSensorReadings@index,w,c
  4049  00297E  0D02               	mullw	2
  4050  002980  0E01               	movlw	low _sensor_readings_raw
  4051  002982  24F3               	addwf	prodl,w,c
  4052  002984  6ED9               	movwf	fsr2l,c
  4053  002986  0E00               	movlw	high _sensor_readings_raw
  4054  002988  20F4               	addwfc	prodh,w,c
  4055  00298A  6EDA               	movwf	fsr2h,c
  4056  00298C  CFDE F040          	movff	postinc2,??_NormaliseSensorReadings+2
  4057  002990  CFDD F041          	movff	postdec2,??_NormaliseSensorReadings+3
  4058  002994  503E               	movf	??_NormaliseSensorReadings,w,c
  4059  002996  2640               	addwf	??_NormaliseSensorReadings+2,f,c
  4060  002998  503F               	movf	??_NormaliseSensorReadings+1,w,c
  4061  00299A  2241               	addwfc	??_NormaliseSensorReadings+3,f,c
  4062  00299C  5042               	movf	NormaliseSensorReadings@index,w,c
  4063  00299E  0D02               	mullw	2
  4064  0029A0  0ECE               	movlw	low _sensor_readings_normalised
  4065  0029A2  24F3               	addwf	prodl,w,c
  4066  0029A4  6ED9               	movwf	fsr2l,c
  4067  0029A6  0E00               	movlw	high _sensor_readings_normalised
  4068  0029A8  20F4               	addwfc	prodh,w,c
  4069  0029AA  6EDA               	movwf	fsr2h,c
  4070  0029AC  C040  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  4071  0029B0  C041  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  4072  0029B4  2A42               	incf	NormaliseSensorReadings@index,f,c
  4073  0029B6  D7D2               	goto	l3234
  4074  0029B8                     l359:
  4075  0029B8  0012               	return		;funcret
  4076  0029BA                     __end_of_NormaliseSensorReadings:
  4077                           	opt stack 0
  4078                           prodh	equ	0xFF4
  4079                           prodl	equ	0xFF3
  4080                           intcon	equ	0xFF2
  4081                           intcon2	equ	0xFF1
  4082                           postinc0	equ	0xFEE
  4083                           wreg	equ	0xFE8
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _GetSensorReadings *****************
  4091 ;; Defined at:
  4092 ;;		line 307 in file "FastBuggy17_Main_Code.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    8
  4113 ;; This function calls:
  4114 ;;		_ConvertADC
  4115 ;;		_SetADCChannel
  4116 ;; This function is called by:
  4117 ;;		_CalibrateSensors
  4118 ;;		_CalibrateLine
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text44
  4124  002E02                     __ptext44:
  4125                           	opt stack 0
  4126  002E02                     _GetSensorReadings:
  4127                           	opt stack 22
  4128                           
  4129                           ;FastBuggy17_Main_Code.c: 309: sensor_acq_index = 0;
  4130                           
  4131                           ;incstack = 0
  4132  002E02  0E00               	movlw	0
  4133  002E04  6E1E               	movwf	_sensor_acq_index,c	;volatile
  4134                           
  4135                           ;FastBuggy17_Main_Code.c: 310: sensor_acq_done = 0;
  4136  002E06  0E00               	movlw	0
  4137  002E08  6E1D               	movwf	_sensor_acq_done,c	;volatile
  4138                           
  4139                           ;FastBuggy17_Main_Code.c: 311: SetADCChannel(sensor_acq_index);
  4140  002E0A  501E               	movf	_sensor_acq_index,w,c	;volatile
  4141  002E0C  ECF0  F00F         	call	_SetADCChannel
  4142                           
  4143                           ;FastBuggy17_Main_Code.c: 312: ConvertADC();
  4144  002E10  ECDF  F017         	call	_ConvertADC	;wreg free
  4145                           
  4146                           ;FastBuggy17_Main_Code.c: 313: PIE1bits.ADIE = 1;
  4147  002E14  8C9D               	bsf	3997,6,c	;volatile
  4148  002E16  0012               	return		;funcret
  4149  002E18                     __end_of_GetSensorReadings:
  4150                           	opt stack 0
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           intcon2	equ	0xFF1
  4155                           postinc0	equ	0xFEE
  4156                           wreg	equ	0xFE8
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           fsr2h	equ	0xFDA
  4160                           fsr2l	equ	0xFD9
  4161                           status	equ	0xFD8
  4162                           
  4163 ;; *************** function _SetADCChannel *****************
  4164 ;; Defined at:
  4165 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  channel         1    wreg     unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  channel         1   27[COMRAM] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        1 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    7
  4186 ;; This function calls:
  4187 ;;		_SetChanADC
  4188 ;; This function is called by:
  4189 ;;		_GetSensorReadings
  4190 ;;		_CalibrateLine
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text45
  4195  001FE0                     __ptext45:
  4196                           	opt stack 0
  4197  001FE0                     _SetADCChannel:
  4198                           	opt stack 22
  4199                           
  4200                           ;incstack = 0
  4201                           ;SetADCChannel@channel stored from wreg
  4202  001FE0  6E40               	movwf	SetADCChannel@channel,c
  4203                           
  4204                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  4205  001FE2  D040               	goto	l3044
  4206  001FE4                     l3010:
  4207                           
  4208                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  4209  001FE4  0E87               	movlw	135
  4210  001FE6  EC0C  F017         	call	_SetChanADC
  4211                           
  4212                           ;FastBuggy17_Main_Code.c: 254: break;
  4213  001FEA  D06E               	goto	l348
  4214  001FEC                     l3012:
  4215                           
  4216                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  4217  001FEC  0E8F               	movlw	143
  4218  001FEE  EC0C  F017         	call	_SetChanADC
  4219                           
  4220                           ;FastBuggy17_Main_Code.c: 257: break;
  4221  001FF2  D06A               	goto	l348
  4222  001FF4                     l3014:
  4223                           
  4224                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  4225  001FF4  0E97               	movlw	151
  4226  001FF6  EC0C  F017         	call	_SetChanADC
  4227                           
  4228                           ;FastBuggy17_Main_Code.c: 260: break;
  4229  001FFA  D066               	goto	l348
  4230  001FFC                     l3016:
  4231                           
  4232                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  4233  001FFC  0E9F               	movlw	159
  4234  001FFE  EC0C  F017         	call	_SetChanADC
  4235                           
  4236                           ;FastBuggy17_Main_Code.c: 263: break;
  4237  002002  D062               	goto	l348
  4238  002004                     l3018:
  4239                           
  4240                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  4241  002004  0EA7               	movlw	167
  4242  002006  EC0C  F017         	call	_SetChanADC
  4243                           
  4244                           ;FastBuggy17_Main_Code.c: 266: break;
  4245  00200A  D05E               	goto	l348
  4246  00200C                     l3020:
  4247                           
  4248                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  4249  00200C  0EAF               	movlw	175
  4250  00200E  EC0C  F017         	call	_SetChanADC
  4251                           
  4252                           ;FastBuggy17_Main_Code.c: 269: break;
  4253  002012  D05A               	goto	l348
  4254  002014                     l3022:
  4255                           
  4256                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  4257  002014  0EB7               	movlw	183
  4258  002016  EC0C  F017         	call	_SetChanADC
  4259                           
  4260                           ;FastBuggy17_Main_Code.c: 272: break;
  4261  00201A  D056               	goto	l348
  4262  00201C                     l3024:
  4263                           
  4264                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  4265  00201C  0EBF               	movlw	191
  4266  00201E  EC0C  F017         	call	_SetChanADC
  4267                           
  4268                           ;FastBuggy17_Main_Code.c: 275: break;
  4269  002022  D052               	goto	l348
  4270  002024                     l3026:
  4271                           
  4272                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  4273  002024  0EC7               	movlw	199
  4274  002026  EC0C  F017         	call	_SetChanADC
  4275                           
  4276                           ;FastBuggy17_Main_Code.c: 278: break;
  4277  00202A  D04E               	goto	l348
  4278  00202C                     l3028:
  4279                           
  4280                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  4281  00202C  0ECF               	movlw	207
  4282  00202E  EC0C  F017         	call	_SetChanADC
  4283                           
  4284                           ;FastBuggy17_Main_Code.c: 281: break;
  4285  002032  D04A               	goto	l348
  4286  002034                     l3030:
  4287                           
  4288                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  4289  002034  0ED7               	movlw	215
  4290  002036  EC0C  F017         	call	_SetChanADC
  4291                           
  4292                           ;FastBuggy17_Main_Code.c: 284: break;
  4293  00203A  D046               	goto	l348
  4294  00203C                     l3032:
  4295                           
  4296                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  4297  00203C  0EDF               	movlw	223
  4298  00203E  EC0C  F017         	call	_SetChanADC
  4299                           
  4300                           ;FastBuggy17_Main_Code.c: 287: break;
  4301  002042  D042               	goto	l348
  4302  002044                     l3034:
  4303                           
  4304                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  4305  002044  0EE7               	movlw	231
  4306  002046  EC0C  F017         	call	_SetChanADC
  4307                           
  4308                           ;FastBuggy17_Main_Code.c: 290: break;
  4309  00204A  D03E               	goto	l348
  4310  00204C                     l3036:
  4311                           
  4312                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  4313  00204C  0EEF               	movlw	239
  4314  00204E  EC0C  F017         	call	_SetChanADC
  4315                           
  4316                           ;FastBuggy17_Main_Code.c: 293: break;
  4317  002052  D03A               	goto	l348
  4318  002054                     l3038:
  4319                           
  4320                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  4321  002054  0EF7               	movlw	247
  4322  002056  EC0C  F017         	call	_SetChanADC
  4323                           
  4324                           ;FastBuggy17_Main_Code.c: 296: break;
  4325  00205A  D036               	goto	l348
  4326  00205C                     l3040:
  4327                           
  4328                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  4329  00205C  0EFF               	movlw	255
  4330  00205E  EC0C  F017         	call	_SetChanADC
  4331                           
  4332                           ;FastBuggy17_Main_Code.c: 302: }
  4333                           
  4334                           ;FastBuggy17_Main_Code.c: 301: break;
  4335                           
  4336                           ;FastBuggy17_Main_Code.c: 300: default:
  4337                           
  4338                           ;FastBuggy17_Main_Code.c: 299: break;
  4339  002062  D032               	goto	l348
  4340  002064                     l3044:
  4341  002064  5040               	movf	SetADCChannel@channel,w,c
  4342                           
  4343                           ; Switch size 1, requested type "space"
  4344                           ; Number of cases is 16, Range of values is 0 to 15
  4345                           ; switch strategies available:
  4346                           ; Name         Instructions Cycles
  4347                           ; simple_byte           49    25 (average)
  4348                           ;	Chosen strategy is simple_byte
  4349  002066  0A00               	xorlw	0	; case 0
  4350  002068  B4D8               	btfsc	status,2,c
  4351  00206A  D7BC               	goto	l3010
  4352  00206C  0A01               	xorlw	1	; case 1
  4353  00206E  B4D8               	btfsc	status,2,c
  4354  002070  D7BD               	goto	l3012
  4355  002072  0A03               	xorlw	3	; case 2
  4356  002074  B4D8               	btfsc	status,2,c
  4357  002076  D7BE               	goto	l3014
  4358  002078  0A01               	xorlw	1	; case 3
  4359  00207A  B4D8               	btfsc	status,2,c
  4360  00207C  D7BF               	goto	l3016
  4361  00207E  0A07               	xorlw	7	; case 4
  4362  002080  B4D8               	btfsc	status,2,c
  4363  002082  D7C0               	goto	l3018
  4364  002084  0A01               	xorlw	1	; case 5
  4365  002086  B4D8               	btfsc	status,2,c
  4366  002088  D7C1               	goto	l3020
  4367  00208A  0A03               	xorlw	3	; case 6
  4368  00208C  B4D8               	btfsc	status,2,c
  4369  00208E  D7C2               	goto	l3022
  4370  002090  0A01               	xorlw	1	; case 7
  4371  002092  B4D8               	btfsc	status,2,c
  4372  002094  D7C3               	goto	l3024
  4373  002096  0A0F               	xorlw	15	; case 8
  4374  002098  B4D8               	btfsc	status,2,c
  4375  00209A  D7C4               	goto	l3026
  4376  00209C  0A01               	xorlw	1	; case 9
  4377  00209E  B4D8               	btfsc	status,2,c
  4378  0020A0  D7C5               	goto	l3028
  4379  0020A2  0A03               	xorlw	3	; case 10
  4380  0020A4  B4D8               	btfsc	status,2,c
  4381  0020A6  D7C6               	goto	l3030
  4382  0020A8  0A01               	xorlw	1	; case 11
  4383  0020AA  B4D8               	btfsc	status,2,c
  4384  0020AC  D7C7               	goto	l3032
  4385  0020AE  0A07               	xorlw	7	; case 12
  4386  0020B0  B4D8               	btfsc	status,2,c
  4387  0020B2  D7C8               	goto	l3034
  4388  0020B4  0A01               	xorlw	1	; case 13
  4389  0020B6  B4D8               	btfsc	status,2,c
  4390  0020B8  D7C9               	goto	l3036
  4391  0020BA  0A03               	xorlw	3	; case 14
  4392  0020BC  B4D8               	btfsc	status,2,c
  4393  0020BE  D7CA               	goto	l3038
  4394  0020C0  0A01               	xorlw	1	; case 15
  4395  0020C2  B4D8               	btfsc	status,2,c
  4396  0020C4  D7CB               	goto	l3040
  4397  0020C6  D000               	goto	l348
  4398  0020C8                     l348:
  4399  0020C8  0012               	return		;funcret
  4400  0020CA                     __end_of_SetADCChannel:
  4401                           	opt stack 0
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           intcon2	equ	0xFF1
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _SetChanADC *****************
  4415 ;; Defined at:
  4416 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  channel         1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  channel         1   26[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;		None               void
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;Total ram usage:        2 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    6
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_SetADCChannel
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text46
  4445  002E18                     __ptext46:
  4446                           	opt stack 0
  4447  002E18                     _SetChanADC:
  4448                           	opt stack 22
  4449                           
  4450                           ;incstack = 0
  4451                           ;SetChanADC@channel stored from wreg
  4452  002E18  6E3F               	movwf	SetChanADC@channel,c
  4453  002E1A  CFC2 F03E          	movff	4034,??_SetChanADC	;volatile
  4454  002E1E  0EC3               	movlw	195
  4455  002E20  163E               	andwf	??_SetChanADC,f,c
  4456  002E22  90D8               	bcf	status,0,c
  4457  002E24  303F               	rrcf	SetChanADC@channel,w,c
  4458  002E26  0B3C               	andlw	60
  4459  002E28  103E               	iorwf	??_SetChanADC,w,c
  4460  002E2A  6EC2               	movwf	4034,c	;volatile
  4461  002E2C  0012               	return		;funcret
  4462  002E2E                     __end_of_SetChanADC:
  4463                           	opt stack 0
  4464                           prodh	equ	0xFF4
  4465                           prodl	equ	0xFF3
  4466                           intcon	equ	0xFF2
  4467                           intcon2	equ	0xFF1
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _ConvertADC *****************
  4477 ;; Defined at:
  4478 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		None
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    6
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_GetSensorReadings
  4503 ;;		_CalibrateLine
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text47
  4508  002FBE                     __ptext47:
  4509                           	opt stack 0
  4510  002FBE                     _ConvertADC:
  4511                           	opt stack 23
  4512                           
  4513                           ;incstack = 0
  4514  002FBE  82C2               	bsf	4034,1,c	;volatile
  4515  002FC0  0012               	return		;funcret
  4516  002FC2                     __end_of_ConvertADC:
  4517                           	opt stack 0
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           intcon2	equ	0xFF1
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           postinc2	equ	0xFDE
  4525                           postdec2	equ	0xFDD
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function _DisplaySensorStatuses *****************
  4531 ;; Defined at:
  4532 ;;		line 415 in file "FastBuggy17_Main_Code.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  status_array    2   25[COMRAM] PTR const unsigned char 
  4535 ;;		 -> sensor_status(5), 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  index           1   29[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;		None               void
  4540 ;; Registers used:
  4541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;Total ram usage:        5 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    6
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_CalibrateLine
  4558 ;;		_main
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text48
  4563  002B6C                     __ptext48:
  4564                           	opt stack 0
  4565  002B6C                     _DisplaySensorStatuses:
  4566                           	opt stack 24
  4567                           
  4568                           ;FastBuggy17_Main_Code.c: 416: unsigned char index;
  4569                           ;FastBuggy17_Main_Code.c: 418: for (index = 0; index < 5; index++) {
  4570                           
  4571                           ;incstack = 0
  4572  002B6C  0E00               	movlw	0
  4573  002B6E  6E42               	movwf	DisplaySensorStatuses@index,c
  4574  002B70                     l3322:
  4575  002B70  0E04               	movlw	4
  4576  002B72  6442               	cpfsgt	DisplaySensorStatuses@index,c
  4577  002B74  D001               	goto	l3326
  4578  002B76  D016               	goto	l398
  4579  002B78                     l3326:
  4580                           
  4581                           ;FastBuggy17_Main_Code.c: 419: LATJ ^= *(status_array + index) << index;
  4582  002B78  C042  F040         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  4583  002B7C  5042               	movf	DisplaySensorStatuses@index,w,c
  4584  002B7E  0D01               	mullw	1
  4585  002B80  50F3               	movf	prodl,w,c
  4586  002B82  243E               	addwf	DisplaySensorStatuses@status_array,w,c
  4587  002B84  6ED9               	movwf	fsr2l,c
  4588  002B86  50F4               	movf	prodh,w,c
  4589  002B88  203F               	addwfc	DisplaySensorStatuses@status_array+1,w,c
  4590  002B8A  6EDA               	movwf	fsr2h,c
  4591  002B8C  50DF               	movf	indf2,w,c
  4592  002B8E  6E41               	movwf	(??_DisplaySensorStatuses+1)& (0+255),c
  4593  002B90  2A40               	incf	??_DisplaySensorStatuses,f,c
  4594  002B92  D002               	goto	u2604
  4595  002B94                     u2605:
  4596  002B94  90D8               	bcf	status,0,c
  4597  002B96  3641               	rlcf	??_DisplaySensorStatuses+1,f,c
  4598  002B98                     u2604:
  4599  002B98  2E40               	decfsz	??_DisplaySensorStatuses,f,c
  4600  002B9A  D7FC               	goto	u2605
  4601  002B9C  5041               	movf	??_DisplaySensorStatuses+1,w,c
  4602  002B9E  1A91               	xorwf	3985,f,c	;volatile
  4603  002BA0  2A42               	incf	DisplaySensorStatuses@index,f,c
  4604  002BA2  D7E6               	goto	l3322
  4605  002BA4                     l398:
  4606  002BA4  0012               	return		;funcret
  4607  002BA6                     __end_of_DisplaySensorStatuses:
  4608                           	opt stack 0
  4609                           prodh	equ	0xFF4
  4610                           prodl	equ	0xFF3
  4611                           intcon	equ	0xFF2
  4612                           intcon2	equ	0xFF1
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           indf2	equ	0xFDF
  4616                           postinc2	equ	0xFDE
  4617                           postdec2	equ	0xFDD
  4618                           fsr2h	equ	0xFDA
  4619                           fsr2l	equ	0xFD9
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function _CalculateSensorStatuses *****************
  4623 ;; Defined at:
  4624 ;;		line 337 in file "FastBuggy17_Main_Code.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  index           1   28[COMRAM] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;Total ram usage:        4 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    6
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_CalibrateLine
  4649 ;;		_main
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text49
  4654  00229E                     __ptext49:
  4655                           	opt stack 0
  4656  00229E                     _CalculateSensorStatuses:
  4657                           	opt stack 23
  4658                           
  4659                           ;FastBuggy17_Main_Code.c: 338: unsigned char index;
  4660                           ;FastBuggy17_Main_Code.c: 341: if(line_mode == 1) {
  4661                           
  4662                           ;incstack = 0
  4663  00229E  041B               	decf	_line_mode,w,c
  4664  0022A0  A4D8               	btfss	status,2,c
  4665  0022A2  D030               	goto	l3262
  4666                           
  4667                           ;FastBuggy17_Main_Code.c: 342: for(index = 0; index < 5; index++) {
  4668  0022A4  0E00               	movlw	0
  4669  0022A6  6E41               	movwf	CalculateSensorStatuses@index,c
  4670  0022A8                     l3248:
  4671  0022A8  0E04               	movlw	4
  4672  0022AA  6441               	cpfsgt	CalculateSensorStatuses@index,c
  4673  0022AC  D001               	goto	l3252
  4674  0022AE  D05D               	goto	l373
  4675  0022B0                     l3252:
  4676                           
  4677                           ;FastBuggy17_Main_Code.c: 344: if(sensor_readings_normalised[index] > sensor_threshold) 
      +                          {
  4678  0022B0  5041               	movf	CalculateSensorStatuses@index,w,c
  4679  0022B2  0D02               	mullw	2
  4680  0022B4  0ECE               	movlw	low _sensor_readings_normalised
  4681  0022B6  24F3               	addwf	prodl,w,c
  4682  0022B8  6ED9               	movwf	fsr2l,c
  4683  0022BA  0E00               	movlw	high _sensor_readings_normalised
  4684  0022BC  20F4               	addwfc	prodh,w,c
  4685  0022BE  6EDA               	movwf	fsr2h,c
  4686  0022C0  50DE               	movf	postinc2,w,c
  4687  0022C2  5C19               	subwf	_sensor_threshold,w,c
  4688  0022C4  501A               	movf	_sensor_threshold+1,w,c
  4689  0022C6  0A80               	xorlw	128
  4690  0022C8  6E40               	movwf	(??_CalculateSensorStatuses+2)& (0+255),c
  4691  0022CA  50DE               	movf	postinc2,w,c
  4692  0022CC  0A80               	xorlw	128
  4693  0022CE  5840               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,c
  4694  0022D0  B0D8               	btfsc	status,0,c
  4695  0022D2  D00A               	goto	l3256
  4696                           
  4697                           ;FastBuggy17_Main_Code.c: 345: sensor_status[index] = 1;
  4698  0022D4  5041               	movf	CalculateSensorStatuses@index,w,c
  4699  0022D6  0D01               	mullw	1
  4700  0022D8  0E20               	movlw	low _sensor_status
  4701  0022DA  24F3               	addwf	prodl,w,c
  4702  0022DC  6ED9               	movwf	fsr2l,c
  4703  0022DE  0E00               	movlw	high _sensor_status
  4704  0022E0  20F4               	addwfc	prodh,w,c
  4705  0022E2  6EDA               	movwf	fsr2h,c
  4706  0022E4  0E01               	movlw	1
  4707  0022E6  D009               	goto	L1
  4708  0022E8                     l3256:
  4709                           
  4710                           ;FastBuggy17_Main_Code.c: 347: else {
  4711                           ;FastBuggy17_Main_Code.c: 348: sensor_status[index] = 0;
  4712  0022E8  5041               	movf	CalculateSensorStatuses@index,w,c
  4713  0022EA  0D01               	mullw	1
  4714  0022EC  0E20               	movlw	low _sensor_status
  4715  0022EE  24F3               	addwf	prodl,w,c
  4716  0022F0  6ED9               	movwf	fsr2l,c
  4717  0022F2  0E00               	movlw	high _sensor_status
  4718  0022F4  20F4               	addwfc	prodh,w,c
  4719  0022F6  6EDA               	movwf	fsr2h,c
  4720  0022F8  0E00               	movlw	0
  4721  0022FA                     L1:
  4722  0022FA  6EDF               	movwf	indf2,c
  4723  0022FC  D000               	goto	l3258
  4724  0022FE                     l3258:
  4725  0022FE  2A41               	incf	CalculateSensorStatuses@index,f,c
  4726  002300  D7D3               	goto	l3248
  4727                           
  4728                           ;FastBuggy17_Main_Code.c: 349: }
  4729                           ;FastBuggy17_Main_Code.c: 350: }
  4730                           ;FastBuggy17_Main_Code.c: 351: }
  4731  002302  D033               	goto	l373
  4732  002304                     l3262:
  4733                           
  4734                           ;FastBuggy17_Main_Code.c: 353: else if(line_mode == 0) {
  4735  002304  501B               	movf	_line_mode,w,c
  4736  002306  A4D8               	btfss	status,2,c
  4737  002308  D030               	goto	l373
  4738                           
  4739                           ;FastBuggy17_Main_Code.c: 355: for(index = 0; index < 5; index++) {
  4740  00230A  0E00               	movlw	0
  4741  00230C  6E41               	movwf	CalculateSensorStatuses@index,c
  4742  00230E                     l3266:
  4743  00230E  0E04               	movlw	4
  4744  002310  6441               	cpfsgt	CalculateSensorStatuses@index,c
  4745  002312  D001               	goto	l3270
  4746  002314  D02A               	goto	l373
  4747  002316                     l3270:
  4748                           
  4749                           ;FastBuggy17_Main_Code.c: 357: if(sensor_readings_normalised[index] < sensor_threshold) 
      +                          {
  4750  002316  5041               	movf	CalculateSensorStatuses@index,w,c
  4751  002318  0D02               	mullw	2
  4752  00231A  0ECE               	movlw	low _sensor_readings_normalised
  4753  00231C  24F3               	addwf	prodl,w,c
  4754  00231E  6ED9               	movwf	fsr2l,c
  4755  002320  0E00               	movlw	high _sensor_readings_normalised
  4756  002322  20F4               	addwfc	prodh,w,c
  4757  002324  6EDA               	movwf	fsr2h,c
  4758  002326  5019               	movf	_sensor_threshold,w,c
  4759  002328  5CDE               	subwf	postinc2,w,c
  4760  00232A  50DE               	movf	postinc2,w,c
  4761  00232C  0A80               	xorlw	128
  4762  00232E  6E40               	movwf	(??_CalculateSensorStatuses+2)& (0+255),c
  4763  002330  501A               	movf	_sensor_threshold+1,w,c
  4764  002332  0A80               	xorlw	128
  4765  002334  5840               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,c
  4766  002336  B0D8               	btfsc	status,0,c
  4767  002338  D00A               	goto	l3274
  4768                           
  4769                           ;FastBuggy17_Main_Code.c: 358: sensor_status[index] = 1;
  4770  00233A  5041               	movf	CalculateSensorStatuses@index,w,c
  4771  00233C  0D01               	mullw	1
  4772  00233E  0E20               	movlw	low _sensor_status
  4773  002340  24F3               	addwf	prodl,w,c
  4774  002342  6ED9               	movwf	fsr2l,c
  4775  002344  0E00               	movlw	high _sensor_status
  4776  002346  20F4               	addwfc	prodh,w,c
  4777  002348  6EDA               	movwf	fsr2h,c
  4778  00234A  0E01               	movlw	1
  4779  00234C  D009               	goto	L2
  4780  00234E                     l3274:
  4781                           
  4782                           ;FastBuggy17_Main_Code.c: 360: else {
  4783                           ;FastBuggy17_Main_Code.c: 361: sensor_status[index] = 0;
  4784  00234E  5041               	movf	CalculateSensorStatuses@index,w,c
  4785  002350  0D01               	mullw	1
  4786  002352  0E20               	movlw	low _sensor_status
  4787  002354  24F3               	addwf	prodl,w,c
  4788  002356  6ED9               	movwf	fsr2l,c
  4789  002358  0E00               	movlw	high _sensor_status
  4790  00235A  20F4               	addwfc	prodh,w,c
  4791  00235C  6EDA               	movwf	fsr2h,c
  4792  00235E  0E00               	movlw	0
  4793  002360                     L2:
  4794  002360  6EDF               	movwf	indf2,c
  4795  002362  D000               	goto	l3276
  4796  002364                     l3276:
  4797  002364  2A41               	incf	CalculateSensorStatuses@index,f,c
  4798  002366  D7D3               	goto	l3266
  4799  002368  D000               	goto	l373
  4800  00236A                     l373:
  4801  00236A  0012               	return		;funcret
  4802  00236C                     __end_of_CalculateSensorStatuses:
  4803                           	opt stack 0
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           intcon2	equ	0xFF1
  4808                           postinc0	equ	0xFEE
  4809                           wreg	equ	0xFE8
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           postdec2	equ	0xFDD
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _BusySensorAcq *****************
  4818 ;; Defined at:
  4819 ;;		line 318 in file "FastBuggy17_Main_Code.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      unsigned char 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    6
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_CalibrateSensors
  4844 ;;		_CalibrateLine
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text50
  4850  002EF6                     __ptext50:
  4851                           	opt stack 0
  4852  002EF6                     _BusySensorAcq:
  4853                           	opt stack 23
  4854                           
  4855                           ;FastBuggy17_Main_Code.c: 320: return (!sensor_acq_done);
  4856                           
  4857                           ;incstack = 0
  4858  002EF6  501D               	movf	_sensor_acq_done,w,c	;volatile
  4859  002EF8  A4D8               	btfss	status,2,c
  4860  002EFA  D002               	goto	u2410
  4861  002EFC  0E01               	movlw	1
  4862  002EFE  D002               	goto	l354
  4863  002F00                     u2410:
  4864  002F00  0E00               	movlw	0
  4865  002F02  D000               	goto	l354
  4866  002F04                     l354:
  4867  002F04  0012               	return		;funcret
  4868  002F06                     __end_of_BusySensorAcq:
  4869                           	opt stack 0
  4870                           prodh	equ	0xFF4
  4871                           prodl	equ	0xFF3
  4872                           intcon	equ	0xFF2
  4873                           intcon2	equ	0xFF1
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           indf2	equ	0xFDF
  4877                           postinc2	equ	0xFDE
  4878                           postdec2	equ	0xFDD
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _BusyADC *****************
  4884 ;; Defined at:
  4885 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      unsigned char 
  4892 ;; Registers used:
  4893 ;;		wreg
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    6
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_CalibrateLine
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text51
  4914  002F5E                     __ptext51:
  4915                           	opt stack 0
  4916  002F5E                     _BusyADC:
  4917                           	opt stack 23
  4918                           
  4919                           ;incstack = 0
  4920  002F5E  A2C2               	btfss	4034,1,c	;volatile
  4921  002F60  D002               	goto	u2620
  4922  002F62  0E01               	movlw	1
  4923  002F64  D002               	goto	l477
  4924  002F66                     u2620:
  4925  002F66  0E00               	movlw	0
  4926  002F68  D000               	goto	l477
  4927  002F6A                     l477:
  4928  002F6A  0012               	return		;funcret
  4929  002F6C                     __end_of_BusyADC:
  4930                           	opt stack 0
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           intcon	equ	0xFF2
  4934                           intcon2	equ	0xFF1
  4935                           postinc0	equ	0xFEE
  4936                           wreg	equ	0xFE8
  4937                           indf2	equ	0xFDF
  4938                           postinc2	equ	0xFDE
  4939                           postdec2	equ	0xFDD
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function _CalculateSensorSums *****************
  4945 ;; Defined at:
  4946 ;;		line 371 in file "FastBuggy17_Main_Code.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  index           1   96[BANK0 ] unsigned char 
  4951 ;;  sum             1   95[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      unsigned char 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;Total ram usage:        5 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:   11
  4968 ;; This function calls:
  4969 ;;		___ftmul
  4970 ;;		___fttol
  4971 ;;		___lbtoft
  4972 ;;		_pow
  4973 ;; This function is called by:
  4974 ;;		_main
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text52
  4979  0024D8                     __ptext52:
  4980                           	opt stack 0
  4981  0024D8                     _CalculateSensorSums:
  4982                           	opt stack 19
  4983                           
  4984                           ;FastBuggy17_Main_Code.c: 372: unsigned char index, sum = 0;
  4985                           
  4986                           ;incstack = 0
  4987  0024D8  0E00               	movlw	0
  4988  0024DA  0100               	movlb	0	; () banked
  4989  0024DC  6FBF               	movwf	CalculateSensorSums@sum& (0+255),b
  4990                           
  4991                           ;FastBuggy17_Main_Code.c: 374: for(index = 0; index < 5; index++) {
  4992  0024DE  0E00               	movlw	0
  4993  0024E0  0100               	movlb	0	; () banked
  4994  0024E2  6FC0               	movwf	CalculateSensorSums@index& (0+255),b
  4995  0024E4                     l4200:
  4996                           
  4997                           ; BSR set to: 0
  4998  0024E4  0E04               	movlw	4
  4999  0024E6  0100               	movlb	0	; () banked
  5000  0024E8  65C0               	cpfsgt	CalculateSensorSums@index& (0+255),b
  5001  0024EA  D001               	goto	l4204
  5002                           
  5003                           ; BSR set to: 0
  5004  0024EC  D044               	goto	l4212
  5005  0024EE                     l4204:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;FastBuggy17_Main_Code.c: 376: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  5009  0024EE  0100               	movlb	0	; () banked
  5010  0024F0  51C0               	movf	CalculateSensorSums@index& (0+255),w,b
  5011  0024F2  EC18  F016         	call	___lbtoft
  5012  0024F6  C06E  F0AE         	movff	?___lbtoft,pow@y
  5013  0024FA  C06F  F0AF         	movff	?___lbtoft+1,pow@y+1
  5014  0024FE  C070  F0B0         	movff	?___lbtoft+2,pow@y+2
  5015  002502  0E00               	movlw	0
  5016  002504  0100               	movlb	0	; () banked
  5017  002506  6FAB               	movwf	pow@x& (0+255),b
  5018  002508  0E00               	movlw	0
  5019  00250A  0100               	movlb	0	; () banked
  5020  00250C  6FAC               	movwf	(pow@x+1)& (0+255),b
  5021  00250E  0E40               	movlw	64
  5022  002510  0100               	movlb	0	; () banked
  5023  002512  6FAD               	movwf	(pow@x+2)& (0+255),b
  5024  002514  EC9B  F00B         	call	_pow	;wreg free
  5025  002518  C0AB  F0BC         	movff	?_pow,_CalculateSensorSums$2925
  5026  00251C  C0AC  F0BD         	movff	?_pow+1,_CalculateSensorSums$2925+1
  5027  002520  C0AD  F0BE         	movff	?_pow+2,_CalculateSensorSums$2925+2
  5028                           
  5029                           ;FastBuggy17_Main_Code.c: 376: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  5030  002524  C0BC  F075         	movff	_CalculateSensorSums$2925,___ftmul@f2
  5031  002528  C0BD  F076         	movff	_CalculateSensorSums$2925+1,___ftmul@f2+1
  5032  00252C  C0BE  F077         	movff	_CalculateSensorSums$2925+2,___ftmul@f2+2
  5033  002530  0100               	movlb	0	; () banked
  5034  002532  51C0               	movf	CalculateSensorSums@index& (0+255),w,b
  5035  002534  0D01               	mullw	1
  5036  002536  0E20               	movlw	low _sensor_status
  5037  002538  24F3               	addwf	prodl,w,c
  5038  00253A  6ED9               	movwf	fsr2l,c
  5039  00253C  0E00               	movlw	high _sensor_status
  5040  00253E  20F4               	addwfc	prodh,w,c
  5041  002540  6EDA               	movwf	fsr2h,c
  5042  002542  50DF               	movf	indf2,w,c
  5043  002544  EC18  F016         	call	___lbtoft
  5044  002548  C06E  F072         	movff	?___lbtoft,___ftmul@f1
  5045  00254C  C06F  F073         	movff	?___lbtoft+1,___ftmul@f1+1
  5046  002550  C070  F074         	movff	?___lbtoft+2,___ftmul@f1+2
  5047  002554  EC64  F00C         	call	___ftmul	;wreg free
  5048  002558  C072  F081         	movff	?___ftmul,___fttol@f1
  5049  00255C  C073  F082         	movff	?___ftmul+1,___fttol@f1+1
  5050  002560  C074  F083         	movff	?___ftmul+2,___fttol@f1+2
  5051  002564  EC51  F00E         	call	___fttol	;wreg free
  5052  002568  0100               	movlb	0	; () banked
  5053  00256A  5181               	movf	?___fttol& (0+255),w,b
  5054  00256C  0100               	movlb	0	; () banked
  5055  00256E  27BF               	addwf	CalculateSensorSums@sum& (0+255),f,b
  5056                           
  5057                           ; BSR set to: 0
  5058  002570  0100               	movlb	0	; () banked
  5059  002572  2BC0               	incf	CalculateSensorSums@index& (0+255),f,b
  5060  002574  D7B7               	goto	l4200
  5061  002576                     l4212:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;FastBuggy17_Main_Code.c: 378: }
  5065                           ;FastBuggy17_Main_Code.c: 380: return(sum);
  5066  002576  0100               	movlb	0	; () banked
  5067  002578  51BF               	movf	CalculateSensorSums@sum& (0+255),w,b
  5068  00257A  D000               	goto	l378
  5069  00257C                     l378:
  5070                           
  5071                           ; BSR set to: 0
  5072  00257C  0012               	return		;funcret
  5073  00257E                     __end_of_CalculateSensorSums:
  5074                           	opt stack 0
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           intcon2	equ	0xFF1
  5079                           postinc0	equ	0xFEE
  5080                           wreg	equ	0xFE8
  5081                           indf2	equ	0xFDF
  5082                           postinc2	equ	0xFDE
  5083                           postdec2	equ	0xFDD
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function _pow *****************
  5089 ;; Defined at:
  5090 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  x               3   75[BANK0 ] unsigned char 
  5093 ;;  y               3   78[BANK0 ] unsigned char 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  yi              4   88[BANK0 ] unsigned long 
  5096 ;;  sign            1   87[BANK0 ] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  3   75[BANK0 ] unsigned char 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:       17 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:   10
  5113 ;; This function calls:
  5114 ;;		___ftge
  5115 ;;		___ftmul
  5116 ;;		___ftneg
  5117 ;;		___fttol
  5118 ;;		___lltoft
  5119 ;;		_exp
  5120 ;;		_log
  5121 ;; This function is called by:
  5122 ;;		_CalculateSensorSums
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text53
  5127  001736                     __ptext53:
  5128                           	opt stack 0
  5129  001736                     _pow:
  5130                           	opt stack 19
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;incstack = 0
  5134  001736  0E00               	movlw	0
  5135  001738  0100               	movlb	0	; () banked
  5136  00173A  6FB7               	movwf	pow@sign& (0+255),b
  5137                           
  5138                           ; BSR set to: 0
  5139  00173C  0100               	movlb	0	; () banked
  5140  00173E  51AB               	movf	pow@x& (0+255),w,b
  5141  001740  0100               	movlb	0	; () banked
  5142  001742  11AC               	iorwf	(pow@x+1)& (0+255),w,b
  5143  001744  0100               	movlb	0	; () banked
  5144  001746  11AD               	iorwf	(pow@x+2)& (0+255),w,b
  5145  001748  A4D8               	btfss	status,2,c
  5146  00174A  D012               	goto	l4146
  5147                           
  5148                           ; BSR set to: 0
  5149  00174C  0E00               	movlw	0
  5150  00174E  6E3E               	movwf	___ftge@ff1,c
  5151  001750  0E00               	movlw	0
  5152  001752  6E3F               	movwf	___ftge@ff1+1,c
  5153  001754  0E00               	movlw	0
  5154  001756  6E40               	movwf	___ftge@ff1+2,c
  5155  001758  C0AE  F041         	movff	pow@y,___ftge@ff2
  5156  00175C  C0AF  F042         	movff	pow@y+1,___ftge@ff2+1
  5157  001760  C0B0  F043         	movff	pow@y+2,___ftge@ff2+2
  5158  001764  ECBF  F012         	call	___ftge	;wreg free
  5159  001768  A0D8               	btfss	status,0,c
  5160  00176A  D045               	goto	L5
  5161  00176C  D03F               	goto	u3620
  5162                           
  5163                           ; BSR set to: 0
  5164  00176E  D0AB               	goto	l1238
  5165  001770                     l4146:
  5166                           
  5167                           ; BSR set to: 0
  5168  001770  0100               	movlb	0	; () banked
  5169  001772  51AE               	movf	pow@y& (0+255),w,b
  5170  001774  0100               	movlb	0	; () banked
  5171  001776  11AF               	iorwf	(pow@y+1)& (0+255),w,b
  5172  001778  0100               	movlb	0	; () banked
  5173  00177A  11B0               	iorwf	(pow@y+2)& (0+255),w,b
  5174  00177C  A4D8               	btfss	status,2,c
  5175  00177E  D009               	goto	l4152
  5176                           
  5177                           ; BSR set to: 0
  5178  001780  0E00               	movlw	0
  5179  001782  0100               	movlb	0	; () banked
  5180  001784  6FAB               	movwf	?_pow& (0+255),b
  5181  001786  0E80               	movlw	128
  5182  001788  0100               	movlb	0	; () banked
  5183  00178A  6FAC               	movwf	(?_pow+1)& (0+255),b
  5184  00178C  0E3F               	movlw	63
  5185  00178E  D03A               	goto	L4
  5186                           
  5187                           ; BSR set to: 0
  5188  001790  D09A               	goto	l1238
  5189  001792                     l4152:
  5190                           
  5191                           ; BSR set to: 0
  5192  001792  0100               	movlb	0	; () banked
  5193  001794  AFAD               	btfss	(pow@x+2)& (0+255),7,b
  5194  001796  D04D               	goto	l4164
  5195                           
  5196                           ; BSR set to: 0
  5197  001798  C0AE  F081         	movff	pow@y,___fttol@f1
  5198  00179C  C0AF  F082         	movff	pow@y+1,___fttol@f1+1
  5199  0017A0  C0B0  F083         	movff	pow@y+2,___fttol@f1+2
  5200  0017A4  EC51  F00E         	call	___fttol	;wreg free
  5201  0017A8  C081  F0B8         	movff	?___fttol,pow@yi
  5202  0017AC  C082  F0B9         	movff	?___fttol+1,pow@yi+1
  5203  0017B0  C083  F0BA         	movff	?___fttol+2,pow@yi+2
  5204  0017B4  C084  F0BB         	movff	?___fttol+3,pow@yi+3
  5205  0017B8  C0B8  F06E         	movff	pow@yi,___lltoft@c
  5206  0017BC  C0B9  F06F         	movff	pow@yi+1,___lltoft@c+1
  5207  0017C0  C0BA  F070         	movff	pow@yi+2,___lltoft@c+2
  5208  0017C4  C0BB  F071         	movff	pow@yi+3,___lltoft@c+3
  5209  0017C8  ECFD  F013         	call	___lltoft	;wreg free
  5210  0017CC  0100               	movlb	0	; () banked
  5211  0017CE  51AE               	movf	pow@y& (0+255),w,b
  5212  0017D0  0100               	movlb	0	; () banked
  5213  0017D2  196E               	xorwf	?___lltoft& (0+255),w,b
  5214  0017D4  E10B               	bnz	u3620
  5215  0017D6  0100               	movlb	0	; () banked
  5216  0017D8  51AF               	movf	(pow@y+1)& (0+255),w,b
  5217  0017DA  0100               	movlb	0	; () banked
  5218  0017DC  196F               	xorwf	(?___lltoft+1)& (0+255),w,b
  5219  0017DE  E106               	bnz	u3620
  5220  0017E0  0100               	movlb	0	; () banked
  5221  0017E2  51B0               	movf	(pow@y+2)& (0+255),w,b
  5222  0017E4  0100               	movlb	0	; () banked
  5223  0017E6  1970               	xorwf	(?___lltoft+2)& (0+255),w,b
  5224  0017E8  B4D8               	btfsc	status,2,c
  5225  0017EA  D00F               	goto	l4160
  5226  0017EC                     u3620:
  5227                           
  5228                           ; BSR set to: 0
  5229  0017EC  0E00               	movlw	0
  5230  0017EE  0100               	movlb	0	; () banked
  5231  0017F0  6FDB               	movwf	(_errno+1)& (0+255),b
  5232  0017F2  0E21               	movlw	33
  5233  0017F4  6FDA               	movwf	_errno& (0+255),b
  5234  0017F6                     L5:
  5235  0017F6  0E00               	movlw	0
  5236  0017F8  0100               	movlb	0	; () banked
  5237  0017FA  6FAB               	movwf	?_pow& (0+255),b
  5238  0017FC  0E00               	movlw	0
  5239  0017FE  0100               	movlb	0	; () banked
  5240  001800  6FAC               	movwf	(?_pow+1)& (0+255),b
  5241  001802  0E00               	movlw	0
  5242  001804                     L4:
  5243  001804  0100               	movlb	0	; () banked
  5244  001806  6FAD               	movwf	(?_pow+2)& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247  001808  D05E               	goto	l1238
  5248  00180A                     l4160:
  5249                           
  5250                           ; BSR set to: 0
  5251  00180A  0100               	movlb	0	; () banked
  5252  00180C  51B8               	movf	pow@yi& (0+255),w,b
  5253  00180E  0B01               	andlw	1
  5254  001810  0100               	movlb	0	; () banked
  5255  001812  6FB7               	movwf	pow@sign& (0+255),b
  5256                           
  5257                           ; BSR set to: 0
  5258  001814  C0AB  F03E         	movff	pow@x,___ftneg@f1
  5259  001818  C0AC  F03F         	movff	pow@x+1,___ftneg@f1+1
  5260  00181C  C0AD  F040         	movff	pow@x+2,___ftneg@f1+2
  5261  001820  EC79  F016         	call	___ftneg	;wreg free
  5262  001824  C03E  F0AB         	movff	?___ftneg,pow@x
  5263  001828  C03F  F0AC         	movff	?___ftneg+1,pow@x+1
  5264  00182C  C040  F0AD         	movff	?___ftneg+2,pow@x+2
  5265  001830  D000               	goto	l4164
  5266  001832                     l4164:
  5267  001832  C0AB  F099         	movff	pow@x,log@x
  5268  001836  C0AC  F09A         	movff	pow@x+1,log@x+1
  5269  00183A  C0AD  F09B         	movff	pow@x+2,log@x+2
  5270  00183E  ECB3  F00D         	call	_log	;wreg free
  5271  001842  C099  F0B1         	movff	?_log,_pow$2926
  5272  001846  C09A  F0B2         	movff	?_log+1,_pow$2926+1
  5273  00184A  C09B  F0B3         	movff	?_log+2,_pow$2926+2
  5274  00184E  C0B1  F072         	movff	_pow$2926,___ftmul@f1
  5275  001852  C0B2  F073         	movff	_pow$2926+1,___ftmul@f1+1
  5276  001856  C0B3  F074         	movff	_pow$2926+2,___ftmul@f1+2
  5277  00185A  C0AE  F075         	movff	pow@y,___ftmul@f2
  5278  00185E  C0AF  F076         	movff	pow@y+1,___ftmul@f2+1
  5279  001862  C0B0  F077         	movff	pow@y+2,___ftmul@f2+2
  5280  001866  EC64  F00C         	call	___ftmul	;wreg free
  5281  00186A  C072  F0B4         	movff	?___ftmul,_pow$2927
  5282  00186E  C073  F0B5         	movff	?___ftmul+1,_pow$2927+1
  5283  001872  C074  F0B6         	movff	?___ftmul+2,_pow$2927+2
  5284  001876  C0B4  F0A2         	movff	_pow$2927,exp@x
  5285  00187A  C0B5  F0A3         	movff	_pow$2927+1,exp@x+1
  5286  00187E  C0B6  F0A4         	movff	_pow$2927+2,exp@x+2
  5287  001882  EC8F  F00A         	call	_exp	;wreg free
  5288  001886  C0A2  F0AB         	movff	?_exp,pow@x
  5289  00188A  C0A3  F0AC         	movff	?_exp+1,pow@x+1
  5290  00188E  C0A4  F0AD         	movff	?_exp+2,pow@x+2
  5291  001892  0100               	movlb	0	; () banked
  5292  001894  51B7               	movf	pow@sign& (0+255),w,b
  5293  001896  0100               	movlb	0	; () banked
  5294  001898  B4D8               	btfsc	status,2,c
  5295  00189A  D00F               	goto	l1242
  5296                           
  5297                           ; BSR set to: 0
  5298  00189C  C0AB  F03E         	movff	pow@x,___ftneg@f1
  5299  0018A0  C0AC  F03F         	movff	pow@x+1,___ftneg@f1+1
  5300  0018A4  C0AD  F040         	movff	pow@x+2,___ftneg@f1+2
  5301  0018A8  EC79  F016         	call	___ftneg	;wreg free
  5302  0018AC  C03E  F0AB         	movff	?___ftneg,?_pow
  5303  0018B0  C03F  F0AC         	movff	?___ftneg+1,?_pow+1
  5304  0018B4  C040  F0AD         	movff	?___ftneg+2,?_pow+2
  5305  0018B8  D006               	goto	l1238
  5306  0018BA                     l1242:
  5307                           
  5308                           ; BSR set to: 0
  5309  0018BA  C0AB  F0AB         	movff	pow@x,?_pow
  5310  0018BE  C0AC  F0AC         	movff	pow@x+1,?_pow+1
  5311  0018C2  C0AD  F0AD         	movff	pow@x+2,?_pow+2
  5312  0018C6                     l1238:
  5313  0018C6  0012               	return		;funcret
  5314  0018C8                     __end_of_pow:
  5315                           	opt stack 0
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           intcon	equ	0xFF2
  5319                           intcon2	equ	0xFF1
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _log *****************
  5330 ;; Defined at:
  5331 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  x               3   57[BANK0 ] unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  exponent        2   60[BANK0 ] int 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  3   57[BANK0 ] int 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5345 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;Total ram usage:        5 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    9
  5352 ;; This function calls:
  5353 ;;		___awtoft
  5354 ;;		___ftadd
  5355 ;;		___ftmul
  5356 ;;		_eval_poly
  5357 ;;		_frexp
  5358 ;; This function is called by:
  5359 ;;		_pow
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text54
  5364  001B66                     __ptext54:
  5365                           	opt stack 0
  5366  001B66                     _log:
  5367                           	opt stack 19
  5368                           
  5369                           ;incstack = 0
  5370  001B66  0100               	movlb	0	; () banked
  5371  001B68  AF9B               	btfss	(log@x+2)& (0+255),7,b
  5372  001B6A  D006               	goto	l4076
  5373                           
  5374                           ; BSR set to: 0
  5375  001B6C  0E00               	movlw	0
  5376  001B6E  0100               	movlb	0	; () banked
  5377  001B70  6FDB               	movwf	(_errno+1)& (0+255),b
  5378  001B72  0E21               	movlw	33
  5379  001B74  D00D               	goto	L6
  5380                           
  5381                           ; BSR set to: 0
  5382  001B76  D094               	goto	l1300
  5383  001B78                     l4076:
  5384                           
  5385                           ; BSR set to: 0
  5386  001B78  0100               	movlb	0	; () banked
  5387  001B7A  5199               	movf	log@x& (0+255),w,b
  5388  001B7C  0100               	movlb	0	; () banked
  5389  001B7E  119A               	iorwf	(log@x+1)& (0+255),w,b
  5390  001B80  0100               	movlb	0	; () banked
  5391  001B82  119B               	iorwf	(log@x+2)& (0+255),w,b
  5392  001B84  A4D8               	btfss	status,2,c
  5393  001B86  D00F               	goto	l4082
  5394                           
  5395                           ; BSR set to: 0
  5396  001B88  0E00               	movlw	0
  5397  001B8A  0100               	movlb	0	; () banked
  5398  001B8C  6FDB               	movwf	(_errno+1)& (0+255),b
  5399  001B8E  0E22               	movlw	34
  5400  001B90                     L6:
  5401  001B90  6FDA               	movwf	_errno& (0+255),b
  5402  001B92  0E00               	movlw	0
  5403  001B94  0100               	movlb	0	; () banked
  5404  001B96  6F99               	movwf	?_log& (0+255),b
  5405  001B98  0E00               	movlw	0
  5406  001B9A  0100               	movlb	0	; () banked
  5407  001B9C  6F9A               	movwf	(?_log+1)& (0+255),b
  5408  001B9E  0E00               	movlw	0
  5409  001BA0  0100               	movlb	0	; () banked
  5410  001BA2  6F9B               	movwf	(?_log+2)& (0+255),b
  5411                           
  5412                           ; BSR set to: 0
  5413  001BA4  D07D               	goto	l1300
  5414  001BA6                     l4082:
  5415                           
  5416                           ; BSR set to: 0
  5417  001BA6  0E00               	movlw	0
  5418  001BA8  0100               	movlb	0	; () banked
  5419  001BAA  6F75               	movwf	___ftmul@f2& (0+255),b
  5420  001BAC  0E00               	movlw	0
  5421  001BAE  0100               	movlb	0	; () banked
  5422  001BB0  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
  5423  001BB2  0E40               	movlw	64
  5424  001BB4  0100               	movlb	0	; () banked
  5425  001BB6  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
  5426  001BB8  0E9C               	movlw	low log@exponent
  5427  001BBA  6E41               	movwf	frexp@eptr,c
  5428  001BBC  0E00               	movlw	high log@exponent
  5429  001BBE  6E42               	movwf	frexp@eptr+1,c
  5430  001BC0  C099  F03E         	movff	log@x,frexp@value
  5431  001BC4  C09A  F03F         	movff	log@x+1,frexp@value+1
  5432  001BC8  C09B  F040         	movff	log@x+2,frexp@value+2
  5433  001BCC  ECB4  F013         	call	_frexp	;wreg free
  5434  001BD0  C03E  F072         	movff	?_frexp,___ftmul@f1
  5435  001BD4  C03F  F073         	movff	?_frexp+1,___ftmul@f1+1
  5436  001BD8  C040  F074         	movff	?_frexp+2,___ftmul@f1+2
  5437  001BDC  EC64  F00C         	call	___ftmul	;wreg free
  5438  001BE0  C072  F081         	movff	?___ftmul,___ftadd@f1
  5439  001BE4  C073  F082         	movff	?___ftmul+1,___ftadd@f1+1
  5440  001BE8  C074  F083         	movff	?___ftmul+2,___ftadd@f1+2
  5441  001BEC  0E00               	movlw	0
  5442  001BEE  0100               	movlb	0	; () banked
  5443  001BF0  6F84               	movwf	___ftadd@f2& (0+255),b
  5444  001BF2  0E80               	movlw	128
  5445  001BF4  0100               	movlb	0	; () banked
  5446  001BF6  6F85               	movwf	(___ftadd@f2+1)& (0+255),b
  5447  001BF8  0EBF               	movlw	191
  5448  001BFA  0100               	movlb	0	; () banked
  5449  001BFC  6F86               	movwf	(___ftadd@f2+2)& (0+255),b
  5450  001BFE  EC1E  F008         	call	___ftadd	;wreg free
  5451  001C02  C081  F099         	movff	?___ftadd,log@x
  5452  001C06  C082  F09A         	movff	?___ftadd+1,log@x+1
  5453  001C0A  C083  F09B         	movff	?___ftadd+2,log@x+2
  5454  001C0E  0100               	movlb	0	; () banked
  5455  001C10  079C               	decf	log@exponent& (0+255),f,b
  5456  001C12  A0D8               	btfss	status,0,c
  5457  001C14  079D               	decf	(log@exponent+1)& (0+255),f,b
  5458                           
  5459                           ; BSR set to: 0
  5460  001C16  C099  F08D         	movff	log@x,eval_poly@x
  5461  001C1A  C09A  F08E         	movff	log@x+1,eval_poly@x+1
  5462  001C1E  C09B  F08F         	movff	log@x+2,eval_poly@x+2
  5463  001C22  0E1F               	movlw	low log@coeff
  5464  001C24  0100               	movlb	0	; () banked
  5465  001C26  6F90               	movwf	eval_poly@d& (0+255),b
  5466  001C28  0E10               	movlw	high log@coeff
  5467  001C2A  0100               	movlb	0	; () banked
  5468  001C2C  6F91               	movwf	(eval_poly@d+1)& (0+255),b
  5469  001C2E  0E00               	movlw	0
  5470  001C30  0100               	movlb	0	; () banked
  5471  001C32  6F93               	movwf	(eval_poly@n+1)& (0+255),b
  5472  001C34  0E08               	movlw	8
  5473  001C36  6F92               	movwf	eval_poly@n& (0+255),b
  5474  001C38  EC65  F010         	call	_eval_poly	;wreg free
  5475  001C3C  C08D  F099         	movff	?_eval_poly,log@x
  5476  001C40  C08E  F09A         	movff	?_eval_poly+1,log@x+1
  5477  001C44  C08F  F09B         	movff	?_eval_poly+2,log@x+2
  5478  001C48  0E72               	movlw	114
  5479  001C4A  0100               	movlb	0	; () banked
  5480  001C4C  6F75               	movwf	___ftmul@f2& (0+255),b
  5481  001C4E  0E31               	movlw	49
  5482  001C50  0100               	movlb	0	; () banked
  5483  001C52  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
  5484  001C54  0E3F               	movlw	63
  5485  001C56  0100               	movlb	0	; () banked
  5486  001C58  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
  5487  001C5A  C09C  F06E         	movff	log@exponent,___awtoft@c
  5488  001C5E  C09D  F06F         	movff	log@exponent+1,___awtoft@c+1
  5489  001C62  EC5A  F015         	call	___awtoft	;wreg free
  5490  001C66  C06E  F072         	movff	?___awtoft,___ftmul@f1
  5491  001C6A  C06F  F073         	movff	?___awtoft+1,___ftmul@f1+1
  5492  001C6E  C070  F074         	movff	?___awtoft+2,___ftmul@f1+2
  5493  001C72  EC64  F00C         	call	___ftmul	;wreg free
  5494  001C76  C072  F081         	movff	?___ftmul,___ftadd@f1
  5495  001C7A  C073  F082         	movff	?___ftmul+1,___ftadd@f1+1
  5496  001C7E  C074  F083         	movff	?___ftmul+2,___ftadd@f1+2
  5497  001C82  C099  F084         	movff	log@x,___ftadd@f2
  5498  001C86  C09A  F085         	movff	log@x+1,___ftadd@f2+1
  5499  001C8A  C09B  F086         	movff	log@x+2,___ftadd@f2+2
  5500  001C8E  EC1E  F008         	call	___ftadd	;wreg free
  5501  001C92  C081  F099         	movff	?___ftadd,?_log
  5502  001C96  C082  F09A         	movff	?___ftadd+1,?_log+1
  5503  001C9A  C083  F09B         	movff	?___ftadd+2,?_log+2
  5504  001C9E  D000               	goto	l1300
  5505  001CA0                     l1300:
  5506  001CA0  0012               	return		;funcret
  5507  001CA2                     __end_of_log:
  5508                           	opt stack 0
  5509                           prodh	equ	0xFF4
  5510                           prodl	equ	0xFF3
  5511                           intcon	equ	0xFF2
  5512                           intcon2	equ	0xFF1
  5513                           postinc0	equ	0xFEE
  5514                           wreg	equ	0xFE8
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8
  5521                           
  5522 ;; *************** function _exp *****************
  5523 ;; Defined at:
  5524 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  x               3   66[BANK0 ] int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  exponent        2   72[BANK0 ] int 
  5529 ;;  sign            1   74[BANK0 ] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  3   66[BANK0 ] unsigned char 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5539 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;Total ram usage:        9 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    9
  5546 ;; This function calls:
  5547 ;;		___awtoft
  5548 ;;		___ftdiv
  5549 ;;		___ftge
  5550 ;;		___ftmul
  5551 ;;		___ftneg
  5552 ;;		___ftsub
  5553 ;;		___fttol
  5554 ;;		_eval_poly
  5555 ;;		_floor
  5556 ;;		_ldexp
  5557 ;; This function is called by:
  5558 ;;		_pow
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text55
  5563  00151E                     __ptext55:
  5564                           	opt stack 0
  5565  00151E                     _exp:
  5566                           	opt stack 19
  5567                           
  5568                           ;incstack = 0
  5569  00151E  0100               	movlb	0	; () banked
  5570  001520  51A2               	movf	exp@x& (0+255),w,b
  5571  001522  0100               	movlb	0	; () banked
  5572  001524  11A3               	iorwf	(exp@x+1)& (0+255),w,b
  5573  001526  0100               	movlb	0	; () banked
  5574  001528  11A4               	iorwf	(exp@x+2)& (0+255),w,b
  5575  00152A  A4D8               	btfss	status,2,c
  5576  00152C  D009               	goto	l4098
  5577                           
  5578                           ; BSR set to: 0
  5579  00152E  0E00               	movlw	0
  5580  001530  0100               	movlb	0	; () banked
  5581  001532  6FA2               	movwf	?_exp& (0+255),b
  5582  001534  0E80               	movlw	128
  5583  001536  0100               	movlb	0	; () banked
  5584  001538  6FA3               	movwf	(?_exp+1)& (0+255),b
  5585  00153A  0E3F               	movlw	63
  5586  00153C  D035               	goto	L8
  5587                           
  5588                           ; BSR set to: 0
  5589  00153E  D0FA               	goto	l1258
  5590  001540                     l4098:
  5591                           
  5592                           ; BSR set to: 0
  5593  001540  0E72               	movlw	114
  5594  001542  6E3E               	movwf	___ftge@ff1,c
  5595  001544  0E31               	movlw	49
  5596  001546  6E3F               	movwf	___ftge@ff1+1,c
  5597  001548  0E44               	movlw	68
  5598  00154A  6E40               	movwf	___ftge@ff1+2,c
  5599  00154C  C0A2  F041         	movff	exp@x,___ftge@ff2
  5600  001550  C0A3  F042         	movff	exp@x+1,___ftge@ff2+1
  5601  001554  C0A4  F043         	movff	exp@x+2,___ftge@ff2+2
  5602  001558  ECBF  F012         	call	___ftge	;wreg free
  5603  00155C  B0D8               	btfsc	status,0,c
  5604  00155E  D00E               	goto	l4104
  5605  001560  0E00               	movlw	0
  5606  001562  0100               	movlb	0	; () banked
  5607  001564  6FDB               	movwf	(_errno+1)& (0+255),b
  5608  001566  0E22               	movlw	34
  5609  001568  6FDA               	movwf	_errno& (0+255),b
  5610  00156A  0EFF               	movlw	255
  5611  00156C  0100               	movlb	0	; () banked
  5612  00156E  6FA2               	movwf	?_exp& (0+255),b
  5613  001570  0E7F               	movlw	127
  5614  001572  0100               	movlb	0	; () banked
  5615  001574  6FA3               	movwf	(?_exp+1)& (0+255),b
  5616  001576  0E7F               	movlw	127
  5617  001578  D017               	goto	L8
  5618                           
  5619                           ; BSR set to: 0
  5620  00157A  D0DC               	goto	l1258
  5621  00157C                     l4104:
  5622  00157C  C0A2  F03E         	movff	exp@x,___ftge@ff1
  5623  001580  C0A3  F03F         	movff	exp@x+1,___ftge@ff1+1
  5624  001584  C0A4  F040         	movff	exp@x+2,___ftge@ff1+2
  5625  001588  0E49               	movlw	73
  5626  00158A  6E41               	movwf	___ftge@ff2,c
  5627  00158C  0E3A               	movlw	58
  5628  00158E  6E42               	movwf	___ftge@ff2+1,c
  5629  001590  0EC4               	movlw	196
  5630  001592  6E43               	movwf	___ftge@ff2+2,c
  5631  001594  ECBF  F012         	call	___ftge	;wreg free
  5632  001598  B0D8               	btfsc	status,0,c
  5633  00159A  D009               	goto	l4110
  5634  00159C  0E00               	movlw	0
  5635  00159E  0100               	movlb	0	; () banked
  5636  0015A0  6FDB               	movwf	(_errno+1)& (0+255),b
  5637  0015A2  0E22               	movlw	34
  5638  0015A4  6FDA               	movwf	_errno& (0+255),b
  5639  0015A6  D09F               	goto	l4128
  5640  0015A8                     L8:
  5641  0015A8  0100               	movlb	0	; () banked
  5642  0015AA  6FA4               	movwf	(?_exp+2)& (0+255),b
  5643                           
  5644                           ; BSR set to: 0
  5645  0015AC  D0C3               	goto	l1258
  5646  0015AE                     l4110:
  5647  0015AE  0100               	movlb	0	; () banked
  5648  0015B0  AFA4               	btfss	(exp@x+2)& (0+255),7,b
  5649  0015B2  D002               	goto	u3530
  5650  0015B4  0E01               	movlw	1
  5651  0015B6  D001               	goto	u3540
  5652  0015B8                     u3530:
  5653  0015B8  0E00               	movlw	0
  5654  0015BA                     u3540:
  5655  0015BA  0100               	movlb	0	; () banked
  5656  0015BC  6FAA               	movwf	exp@sign& (0+255),b
  5657                           
  5658                           ; BSR set to: 0
  5659  0015BE  0100               	movlb	0	; () banked
  5660  0015C0  51AA               	movf	exp@sign& (0+255),w,b
  5661  0015C2  0100               	movlb	0	; () banked
  5662  0015C4  B4D8               	btfsc	status,2,c
  5663  0015C6  D00E               	goto	l1261
  5664                           
  5665                           ; BSR set to: 0
  5666  0015C8  C0A2  F03E         	movff	exp@x,___ftneg@f1
  5667  0015CC  C0A3  F03F         	movff	exp@x+1,___ftneg@f1+1
  5668  0015D0  C0A4  F040         	movff	exp@x+2,___ftneg@f1+2
  5669  0015D4  EC79  F016         	call	___ftneg	;wreg free
  5670  0015D8  C03E  F0A2         	movff	?___ftneg,exp@x
  5671  0015DC  C03F  F0A3         	movff	?___ftneg+1,exp@x+1
  5672  0015E0  C040  F0A4         	movff	?___ftneg+2,exp@x+2
  5673  0015E4                     l1261:
  5674  0015E4  C0A2  F072         	movff	exp@x,___ftmul@f1
  5675  0015E8  C0A3  F073         	movff	exp@x+1,___ftmul@f1+1
  5676  0015EC  C0A4  F074         	movff	exp@x+2,___ftmul@f1+2
  5677  0015F0  0EAA               	movlw	170
  5678  0015F2  0100               	movlb	0	; () banked
  5679  0015F4  6F75               	movwf	___ftmul@f2& (0+255),b
  5680  0015F6  0EB8               	movlw	184
  5681  0015F8  0100               	movlb	0	; () banked
  5682  0015FA  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
  5683  0015FC  0E3F               	movlw	63
  5684  0015FE  0100               	movlb	0	; () banked
  5685  001600  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
  5686  001602  EC64  F00C         	call	___ftmul	;wreg free
  5687  001606  C072  F0A2         	movff	?___ftmul,exp@x
  5688  00160A  C073  F0A3         	movff	?___ftmul+1,exp@x+1
  5689  00160E  C074  F0A4         	movff	?___ftmul+2,exp@x+2
  5690  001612  C0A2  F09A         	movff	exp@x,floor@x
  5691  001616  C0A3  F09B         	movff	exp@x+1,floor@x+1
  5692  00161A  C0A4  F09C         	movff	exp@x+2,floor@x+2
  5693  00161E  EC75  F00F         	call	_floor	;wreg free
  5694  001622  C09A  F0A5         	movff	?_floor,_exp$2928
  5695  001626  C09B  F0A6         	movff	?_floor+1,_exp$2928+1
  5696  00162A  C09C  F0A7         	movff	?_floor+2,_exp$2928+2
  5697  00162E  C0A5  F081         	movff	_exp$2928,___fttol@f1
  5698  001632  C0A6  F082         	movff	_exp$2928+1,___fttol@f1+1
  5699  001636  C0A7  F083         	movff	_exp$2928+2,___fttol@f1+2
  5700  00163A  EC51  F00E         	call	___fttol	;wreg free
  5701  00163E  C081  F0A8         	movff	?___fttol,exp@exponent
  5702  001642  C082  F0A9         	movff	?___fttol+1,exp@exponent+1
  5703  001646  C0A2  F08D         	movff	exp@x,___ftsub@f1
  5704  00164A  C0A3  F08E         	movff	exp@x+1,___ftsub@f1+1
  5705  00164E  C0A4  F08F         	movff	exp@x+2,___ftsub@f1+2
  5706  001652  C0A8  F06E         	movff	exp@exponent,___awtoft@c
  5707  001656  C0A9  F06F         	movff	exp@exponent+1,___awtoft@c+1
  5708  00165A  EC5A  F015         	call	___awtoft	;wreg free
  5709  00165E  C06E  F090         	movff	?___awtoft,___ftsub@f2
  5710  001662  C06F  F091         	movff	?___awtoft+1,___ftsub@f2+1
  5711  001666  C070  F092         	movff	?___awtoft+2,___ftsub@f2+2
  5712  00166A  EC0C  F015         	call	___ftsub	;wreg free
  5713  00166E  C08D  F0A2         	movff	?___ftsub,exp@x
  5714  001672  C08E  F0A3         	movff	?___ftsub+1,exp@x+1
  5715  001676  C08F  F0A4         	movff	?___ftsub+2,exp@x+2
  5716  00167A  C0A2  F08D         	movff	exp@x,eval_poly@x
  5717  00167E  C0A3  F08E         	movff	exp@x+1,eval_poly@x+1
  5718  001682  C0A4  F08F         	movff	exp@x+2,eval_poly@x+2
  5719  001686  0E01               	movlw	low exp@coeff
  5720  001688  0100               	movlb	0	; () banked
  5721  00168A  6F90               	movwf	eval_poly@d& (0+255),b
  5722  00168C  0E10               	movlw	high exp@coeff
  5723  00168E  0100               	movlb	0	; () banked
  5724  001690  6F91               	movwf	(eval_poly@d+1)& (0+255),b
  5725  001692  0E00               	movlw	0
  5726  001694  0100               	movlb	0	; () banked
  5727  001696  6F93               	movwf	(eval_poly@n+1)& (0+255),b
  5728  001698  0E09               	movlw	9
  5729  00169A  6F92               	movwf	eval_poly@n& (0+255),b
  5730  00169C  EC65  F010         	call	_eval_poly	;wreg free
  5731  0016A0  C08D  F099         	movff	?_eval_poly,ldexp@value
  5732  0016A4  C08E  F09A         	movff	?_eval_poly+1,ldexp@value+1
  5733  0016A8  C08F  F09B         	movff	?_eval_poly+2,ldexp@value+2
  5734  0016AC  C0A8  F09C         	movff	exp@exponent,ldexp@newexp
  5735  0016B0  C0A9  F09D         	movff	exp@exponent+1,ldexp@newexp+1
  5736  0016B4  ECEA  F00E         	call	_ldexp	;wreg free
  5737  0016B8  C099  F0A2         	movff	?_ldexp,exp@x
  5738  0016BC  C09A  F0A3         	movff	?_ldexp+1,exp@x+1
  5739  0016C0  C09B  F0A4         	movff	?_ldexp+2,exp@x+2
  5740  0016C4  0100               	movlb	0	; () banked
  5741  0016C6  51AA               	movf	exp@sign& (0+255),w,b
  5742  0016C8  0100               	movlb	0	; () banked
  5743  0016CA  B4D8               	btfsc	status,2,c
  5744  0016CC  D02D               	goto	l1262
  5745                           
  5746                           ; BSR set to: 0
  5747  0016CE  0100               	movlb	0	; () banked
  5748  0016D0  29A2               	incf	exp@x& (0+255),w,b
  5749  0016D2  E112               	bnz	l4132
  5750  0016D4  0E7F               	movlw	127
  5751  0016D6  0100               	movlb	0	; () banked
  5752  0016D8  19A3               	xorwf	(exp@x+1)& (0+255),w,b
  5753  0016DA  E10E               	bnz	l4132
  5754  0016DC  0E7F               	movlw	127
  5755  0016DE  0100               	movlb	0	; () banked
  5756  0016E0  19A4               	xorwf	(exp@x+2)& (0+255),w,b
  5757  0016E2  A4D8               	btfss	status,2,c
  5758  0016E4  D009               	goto	l4132
  5759  0016E6                     l4128:
  5760                           
  5761                           ; BSR set to: 0
  5762  0016E6  0E00               	movlw	0
  5763  0016E8  0100               	movlb	0	; () banked
  5764  0016EA  6FA2               	movwf	?_exp& (0+255),b
  5765  0016EC  0E00               	movlw	0
  5766  0016EE  0100               	movlb	0	; () banked
  5767  0016F0  6FA3               	movwf	(?_exp+1)& (0+255),b
  5768  0016F2  0E00               	movlw	0
  5769  0016F4  D759               	goto	L8
  5770                           
  5771                           ; BSR set to: 0
  5772  0016F6  D01E               	goto	l1258
  5773  0016F8                     l4132:
  5774                           
  5775                           ; BSR set to: 0
  5776  0016F8  0E00               	movlw	0
  5777  0016FA  0100               	movlb	0	; () banked
  5778  0016FC  6F6E               	movwf	___ftdiv@f1& (0+255),b
  5779  0016FE  0E80               	movlw	128
  5780  001700  0100               	movlb	0	; () banked
  5781  001702  6F6F               	movwf	(___ftdiv@f1+1)& (0+255),b
  5782  001704  0E3F               	movlw	63
  5783  001706  0100               	movlb	0	; () banked
  5784  001708  6F70               	movwf	(___ftdiv@f1+2)& (0+255),b
  5785  00170A  C0A2  F071         	movff	exp@x,___ftdiv@f2
  5786  00170E  C0A3  F072         	movff	exp@x+1,___ftdiv@f2+1
  5787  001712  C0A4  F073         	movff	exp@x+2,___ftdiv@f2+2
  5788  001716  EC12  F00D         	call	___ftdiv	;wreg free
  5789  00171A  C06E  F0A2         	movff	?___ftdiv,?_exp
  5790  00171E  C06F  F0A3         	movff	?___ftdiv+1,?_exp+1
  5791  001722  C070  F0A4         	movff	?___ftdiv+2,?_exp+2
  5792  001726  D006               	goto	l1258
  5793  001728                     l1262:
  5794                           
  5795                           ; BSR set to: 0
  5796  001728  C0A2  F0A2         	movff	exp@x,?_exp
  5797  00172C  C0A3  F0A3         	movff	exp@x+1,?_exp+1
  5798  001730  C0A4  F0A4         	movff	exp@x+2,?_exp+2
  5799  001734                     l1258:
  5800  001734  0012               	return		;funcret
  5801  001736                     __end_of_exp:
  5802                           	opt stack 0
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           intcon2	equ	0xFF1
  5807                           postinc0	equ	0xFEE
  5808                           wreg	equ	0xFE8
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           
  5816 ;; *************** function _ldexp *****************
  5817 ;; Defined at:
  5818 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  value           3   57[BANK0 ] unsigned char 
  5821 ;;  newexp          2   60[BANK0 ] int 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  3   57[BANK0 ] int 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5833 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;Total ram usage:        7 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    6
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_exp
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text56
  5848  001DD4                     __ptext56:
  5849                           	opt stack 0
  5850  001DD4                     _ldexp:
  5851                           	opt stack 21
  5852                           
  5853                           ;incstack = 0
  5854  001DD4  0100               	movlb	0	; () banked
  5855  001DD6  5199               	movf	ldexp@value& (0+255),w,b
  5856  001DD8  0100               	movlb	0	; () banked
  5857  001DDA  119A               	iorwf	(ldexp@value+1)& (0+255),w,b
  5858  001DDC  0100               	movlb	0	; () banked
  5859  001DDE  119B               	iorwf	(ldexp@value+2)& (0+255),w,b
  5860  001DE0  A4D8               	btfss	status,2,c
  5861  001DE2  D002               	goto	l2970
  5862  001DE4  D02A               	goto	L9
  5863                           
  5864                           ; BSR set to: 0
  5865                           
  5866                           ; BSR set to: 0
  5867  001DE6  D080               	goto	l1282
  5868  001DE8                     l2970:
  5869                           
  5870                           ; BSR set to: 0
  5871  001DE8  0100               	movlb	0	; () banked
  5872  001DEA  519B               	movf	(ldexp@value+2)& (0+255),w,b
  5873  001DEC  0B7F               	andlw	127
  5874  001DEE  0100               	movlb	0	; () banked
  5875  001DF0  6F9E               	movwf	??_ldexp& (0+255),b
  5876  001DF2  6B9F               	clrf	(??_ldexp+1)& (0+255),b
  5877  001DF4  90D8               	bcf	status,0,c
  5878  001DF6  0100               	movlb	0	; () banked
  5879  001DF8  379E               	rlcf	??_ldexp& (0+255),f,b
  5880  001DFA  379F               	rlcf	(??_ldexp+1)& (0+255),f,b
  5881  001DFC  0100               	movlb	0	; () banked
  5882  001DFE  519E               	movf	??_ldexp& (0+255),w,b
  5883  001E00  0100               	movlb	0	; () banked
  5884  001E02  279C               	addwf	ldexp@newexp& (0+255),f,b
  5885  001E04  0100               	movlb	0	; () banked
  5886  001E06  519F               	movf	(??_ldexp+1)& (0+255),w,b
  5887  001E08  0100               	movlb	0	; () banked
  5888  001E0A  239D               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5889  001E0C  0100               	movlb	0	; () banked
  5890  001E0E  AF9A               	btfss	(ldexp@value+1)& (0+255),7,b
  5891  001E10  D004               	goto	u2150
  5892  001E12  0100               	movlb	0	; () banked
  5893  001E14  6B9E               	clrf	??_ldexp& (0+255),b
  5894  001E16  2B9E               	incf	??_ldexp& (0+255),f,b
  5895  001E18  D002               	goto	u2158
  5896  001E1A                     u2150:
  5897  001E1A  0100               	movlb	0	; () banked
  5898  001E1C  6B9E               	clrf	??_ldexp& (0+255),b
  5899  001E1E                     u2158:
  5900  001E1E  0100               	movlb	0	; () banked
  5901  001E20  519E               	movf	??_ldexp& (0+255),w,b
  5902  001E22  0100               	movlb	0	; () banked
  5903  001E24  279C               	addwf	ldexp@newexp& (0+255),f,b
  5904  001E26  0E00               	movlw	0
  5905  001E28  239D               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5906  001E2A  0100               	movlb	0	; () banked
  5907  001E2C  AF9D               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5908  001E2E  D00F               	goto	l2978
  5909                           
  5910                           ; BSR set to: 0
  5911  001E30  0E00               	movlw	0
  5912  001E32  0100               	movlb	0	; () banked
  5913  001E34  6FDB               	movwf	(_errno+1)& (0+255),b
  5914  001E36  0E22               	movlw	34
  5915  001E38  6FDA               	movwf	_errno& (0+255),b
  5916  001E3A                     L9:
  5917  001E3A  0E00               	movlw	0
  5918  001E3C  0100               	movlb	0	; () banked
  5919  001E3E  6F99               	movwf	?_ldexp& (0+255),b
  5920  001E40  0E00               	movlw	0
  5921  001E42  0100               	movlb	0	; () banked
  5922  001E44  6F9A               	movwf	(?_ldexp+1)& (0+255),b
  5923  001E46  0E00               	movlw	0
  5924  001E48  D022               	goto	L11
  5925                           
  5926                           ; BSR set to: 0
  5927  001E4A  D04E               	goto	l1282
  5928                           
  5929                           ; BSR set to: 0
  5930  001E4C  D046               	goto	l2996
  5931  001E4E                     l2978:
  5932                           
  5933                           ; BSR set to: 0
  5934  001E4E  0100               	movlb	0	; () banked
  5935  001E50  BF9D               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5936  001E52  D021               	goto	l2994
  5937  001E54  0100               	movlb	0	; () banked
  5938  001E56  059D               	decf	(ldexp@newexp+1)& (0+255),w,b
  5939  001E58  A0D8               	btfss	status,0,c
  5940  001E5A  D01D               	goto	l2994
  5941                           
  5942                           ; BSR set to: 0
  5943  001E5C  0E00               	movlw	0
  5944  001E5E  0100               	movlb	0	; () banked
  5945  001E60  6FDB               	movwf	(_errno+1)& (0+255),b
  5946  001E62  0E22               	movlw	34
  5947  001E64  6FDA               	movwf	_errno& (0+255),b
  5948                           
  5949                           ; BSR set to: 0
  5950  001E66  0100               	movlb	0	; () banked
  5951  001E68  AF9B               	btfss	(ldexp@value+2)& (0+255),7,b
  5952  001E6A  D00A               	goto	l2990
  5953                           
  5954                           ; BSR set to: 0
  5955  001E6C  0EFF               	movlw	255
  5956  001E6E  0100               	movlb	0	; () banked
  5957  001E70  6F99               	movwf	?_ldexp& (0+255),b
  5958  001E72  0E7F               	movlw	127
  5959  001E74  0100               	movlb	0	; () banked
  5960  001E76  6F9A               	movwf	(?_ldexp+1)& (0+255),b
  5961  001E78  0EFF               	movlw	255
  5962  001E7A  D009               	goto	L11
  5963                           
  5964                           ; BSR set to: 0
  5965  001E7C  D035               	goto	l1282
  5966                           
  5967                           ; BSR set to: 0
  5968  001E7E  D02D               	goto	l2996
  5969  001E80                     l2990:
  5970                           
  5971                           ; BSR set to: 0
  5972  001E80  0EFF               	movlw	255
  5973  001E82  0100               	movlb	0	; () banked
  5974  001E84  6F99               	movwf	?_ldexp& (0+255),b
  5975  001E86  0E7F               	movlw	127
  5976  001E88  0100               	movlb	0	; () banked
  5977  001E8A  6F9A               	movwf	(?_ldexp+1)& (0+255),b
  5978  001E8C  0E7F               	movlw	127
  5979  001E8E                     L11:
  5980  001E8E  0100               	movlb	0	; () banked
  5981  001E90  6F9B               	movwf	(?_ldexp+2)& (0+255),b
  5982                           
  5983                           ; BSR set to: 0
  5984  001E92  D02A               	goto	l1282
  5985                           
  5986                           ; BSR set to: 0
  5987  001E94  D022               	goto	l2996
  5988  001E96                     l2994:
  5989                           
  5990                           ; BSR set to: 0
  5991  001E96  0100               	movlb	0	; () banked
  5992  001E98  359D               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5993  001E9A  319D               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5994  001E9C  0100               	movlb	0	; () banked
  5995  001E9E  6F9F               	movwf	(??_ldexp+1)& (0+255),b
  5996  001EA0  0100               	movlb	0	; () banked
  5997  001EA2  319C               	rrcf	ldexp@newexp& (0+255),w,b
  5998  001EA4  0100               	movlb	0	; () banked
  5999  001EA6  6F9E               	movwf	??_ldexp& (0+255),b
  6000  001EA8  0100               	movlb	0	; () banked
  6001  001EAA  519B               	movf	(ldexp@value+2)& (0+255),w,b
  6002  001EAC  0100               	movlb	0	; () banked
  6003  001EAE  199E               	xorwf	??_ldexp& (0+255),w,b
  6004  001EB0  0B80               	andlw	-128
  6005  001EB2  199E               	xorwf	??_ldexp& (0+255),w,b
  6006  001EB4  0100               	movlb	0	; () banked
  6007  001EB6  6F9B               	movwf	(ldexp@value+2)& (0+255),b
  6008  001EB8  C09C  F09E         	movff	ldexp@newexp,??_ldexp
  6009  001EBC  0E01               	movlw	1
  6010  001EBE  0100               	movlb	0	; () banked
  6011  001EC0  179E               	andwf	??_ldexp& (0+255),f,b
  6012  001EC2  0100               	movlb	0	; () banked
  6013  001EC4  339E               	rrcf	??_ldexp& (0+255),f,b
  6014  001EC6  339E               	rrcf	??_ldexp& (0+255),f,b
  6015  001EC8  0100               	movlb	0	; () banked
  6016  001ECA  519A               	movf	(ldexp@value+1)& (0+255),w,b
  6017  001ECC  0100               	movlb	0	; () banked
  6018  001ECE  199E               	xorwf	??_ldexp& (0+255),w,b
  6019  001ED0  0B7F               	andlw	-129
  6020  001ED2  199E               	xorwf	??_ldexp& (0+255),w,b
  6021  001ED4  0100               	movlb	0	; () banked
  6022  001ED6  6F9A               	movwf	(ldexp@value+1)& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025  001ED8  D000               	goto	l2996
  6026  001EDA                     l2996:
  6027                           
  6028                           ; BSR set to: 0
  6029  001EDA  C099  F099         	movff	ldexp@value,?_ldexp
  6030  001EDE  C09A  F09A         	movff	ldexp@value+1,?_ldexp+1
  6031  001EE2  C09B  F09B         	movff	ldexp@value+2,?_ldexp+2
  6032  001EE6  D000               	goto	l1282
  6033  001EE8                     l1282:
  6034                           
  6035                           ; BSR set to: 0
  6036  001EE8  0012               	return		;funcret
  6037  001EEA                     __end_of_ldexp:
  6038                           	opt stack 0
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           intcon2	equ	0xFF1
  6043                           postinc0	equ	0xFEE
  6044                           wreg	equ	0xFE8
  6045                           indf2	equ	0xFDF
  6046                           postinc2	equ	0xFDE
  6047                           postdec2	equ	0xFDD
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _floor *****************
  6053 ;; Defined at:
  6054 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  x               3   58[BANK0 ] int 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  i               3   61[BANK0 ] int 
  6059 ;;  expon           2   64[BANK0 ] int 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  3   58[BANK0 ] int 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6069 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;Total ram usage:        8 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    8
  6076 ;; This function calls:
  6077 ;;		___altoft
  6078 ;;		___ftadd
  6079 ;;		___ftge
  6080 ;;		___fttol
  6081 ;;		_frexp
  6082 ;; This function is called by:
  6083 ;;		_exp
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text57
  6088  001EEA                     __ptext57:
  6089                           	opt stack 0
  6090  001EEA                     _floor:
  6091                           	opt stack 19
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;incstack = 0
  6095  001EEA  C09A  F03E         	movff	floor@x,frexp@value
  6096  001EEE  C09B  F03F         	movff	floor@x+1,frexp@value+1
  6097  001EF2  C09C  F040         	movff	floor@x+2,frexp@value+2
  6098  001EF6  0EA0               	movlw	low floor@expon
  6099  001EF8  6E41               	movwf	frexp@eptr,c
  6100  001EFA  0E00               	movlw	high floor@expon
  6101  001EFC  6E42               	movwf	frexp@eptr+1,c
  6102  001EFE  ECB4  F013         	call	_frexp	;wreg free
  6103  001F02  0100               	movlb	0	; () banked
  6104  001F04  AFA1               	btfss	(floor@expon+1)& (0+255),7,b
  6105  001F06  D016               	goto	l4044
  6106                           
  6107                           ; BSR set to: 0
  6108  001F08  0100               	movlb	0	; () banked
  6109  001F0A  AF9C               	btfss	(floor@x+2)& (0+255),7,b
  6110  001F0C  D009               	goto	l4040
  6111                           
  6112                           ; BSR set to: 0
  6113  001F0E  0E00               	movlw	0
  6114  001F10  0100               	movlb	0	; () banked
  6115  001F12  6F9A               	movwf	?_floor& (0+255),b
  6116  001F14  0E80               	movlw	128
  6117  001F16  0100               	movlb	0	; () banked
  6118  001F18  6F9B               	movwf	(?_floor+1)& (0+255),b
  6119  001F1A  0EBF               	movlw	191
  6120  001F1C  D008               	goto	L12
  6121                           
  6122                           ; BSR set to: 0
  6123  001F1E  D05F               	goto	l1270
  6124  001F20                     l4040:
  6125                           
  6126                           ; BSR set to: 0
  6127  001F20  0E00               	movlw	0
  6128  001F22  0100               	movlb	0	; () banked
  6129  001F24  6F9A               	movwf	?_floor& (0+255),b
  6130  001F26  0E00               	movlw	0
  6131  001F28  0100               	movlb	0	; () banked
  6132  001F2A  6F9B               	movwf	(?_floor+1)& (0+255),b
  6133  001F2C  0E00               	movlw	0
  6134  001F2E                     L12:
  6135  001F2E  0100               	movlb	0	; () banked
  6136  001F30  6F9C               	movwf	(?_floor+2)& (0+255),b
  6137                           
  6138                           ; BSR set to: 0
  6139  001F32  D055               	goto	l1270
  6140  001F34                     l4044:
  6141                           
  6142                           ; BSR set to: 0
  6143  001F34  0100               	movlb	0	; () banked
  6144  001F36  51A1               	movf	(floor@expon+1)& (0+255),w,b
  6145  001F38  E105               	bnz	u3440
  6146  001F3A  0E15               	movlw	21
  6147  001F3C  0100               	movlb	0	; () banked
  6148  001F3E  5DA0               	subwf	floor@expon& (0+255),w,b
  6149  001F40  A0D8               	btfss	status,0,c
  6150  001F42  D007               	goto	l4048
  6151  001F44                     u3440:
  6152                           
  6153                           ; BSR set to: 0
  6154  001F44  C09A  F09A         	movff	floor@x,?_floor
  6155  001F48  C09B  F09B         	movff	floor@x+1,?_floor+1
  6156  001F4C  C09C  F09C         	movff	floor@x+2,?_floor+2
  6157  001F50  D046               	goto	l1270
  6158  001F52                     l4048:
  6159                           
  6160                           ; BSR set to: 0
  6161  001F52  C09A  F081         	movff	floor@x,___fttol@f1
  6162  001F56  C09B  F082         	movff	floor@x+1,___fttol@f1+1
  6163  001F5A  C09C  F083         	movff	floor@x+2,___fttol@f1+2
  6164  001F5E  EC51  F00E         	call	___fttol	;wreg free
  6165  001F62  C081  F090         	movff	?___fttol,___altoft@c
  6166  001F66  C082  F091         	movff	?___fttol+1,___altoft@c+1
  6167  001F6A  C083  F092         	movff	?___fttol+2,___altoft@c+2
  6168  001F6E  C084  F093         	movff	?___fttol+3,___altoft@c+3
  6169  001F72  EC12  F013         	call	___altoft	;wreg free
  6170  001F76  C090  F09D         	movff	?___altoft,floor@i
  6171  001F7A  C091  F09E         	movff	?___altoft+1,floor@i+1
  6172  001F7E  C092  F09F         	movff	?___altoft+2,floor@i+2
  6173  001F82  C09A  F03E         	movff	floor@x,___ftge@ff1
  6174  001F86  C09B  F03F         	movff	floor@x+1,___ftge@ff1+1
  6175  001F8A  C09C  F040         	movff	floor@x+2,___ftge@ff1+2
  6176  001F8E  C09D  F041         	movff	floor@i,___ftge@ff2
  6177  001F92  C09E  F042         	movff	floor@i+1,___ftge@ff2+1
  6178  001F96  C09F  F043         	movff	floor@i+2,___ftge@ff2+2
  6179  001F9A  ECBF  F012         	call	___ftge	;wreg free
  6180  001F9E  B0D8               	btfsc	status,0,c
  6181  001FA0  D018               	goto	l1272
  6182  001FA2  C09D  F081         	movff	floor@i,___ftadd@f1
  6183  001FA6  C09E  F082         	movff	floor@i+1,___ftadd@f1+1
  6184  001FAA  C09F  F083         	movff	floor@i+2,___ftadd@f1+2
  6185  001FAE  0E00               	movlw	0
  6186  001FB0  0100               	movlb	0	; () banked
  6187  001FB2  6F84               	movwf	___ftadd@f2& (0+255),b
  6188  001FB4  0E80               	movlw	128
  6189  001FB6  0100               	movlb	0	; () banked
  6190  001FB8  6F85               	movwf	(___ftadd@f2+1)& (0+255),b
  6191  001FBA  0EBF               	movlw	191
  6192  001FBC  0100               	movlb	0	; () banked
  6193  001FBE  6F86               	movwf	(___ftadd@f2+2)& (0+255),b
  6194  001FC0  EC1E  F008         	call	___ftadd	;wreg free
  6195  001FC4  C081  F09A         	movff	?___ftadd,?_floor
  6196  001FC8  C082  F09B         	movff	?___ftadd+1,?_floor+1
  6197  001FCC  C083  F09C         	movff	?___ftadd+2,?_floor+2
  6198  001FD0  D006               	goto	l1270
  6199  001FD2                     l1272:
  6200  001FD2  C09D  F09A         	movff	floor@i,?_floor
  6201  001FD6  C09E  F09B         	movff	floor@i+1,?_floor+1
  6202  001FDA  C09F  F09C         	movff	floor@i+2,?_floor+2
  6203  001FDE                     l1270:
  6204  001FDE  0012               	return		;funcret
  6205  001FE0                     __end_of_floor:
  6206                           	opt stack 0
  6207                           prodh	equ	0xFF4
  6208                           prodl	equ	0xFF3
  6209                           intcon	equ	0xFF2
  6210                           intcon2	equ	0xFF1
  6211                           postinc0	equ	0xFEE
  6212                           wreg	equ	0xFE8
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function _frexp *****************
  6221 ;; Defined at:
  6222 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  value           3   25[COMRAM] int 
  6225 ;;  eptr            2   28[COMRAM] PTR int 
  6226 ;;		 -> log@exponent(2), floor@expon(2), 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  3   25[COMRAM] PTR int 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:        7 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    6
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_floor
  6249 ;;		_log
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text58
  6254  002768                     __ptext58:
  6255                           	opt stack 0
  6256  002768                     _frexp:
  6257                           	opt stack 21
  6258                           
  6259                           ;incstack = 0
  6260  002768  503E               	movf	frexp@value,w,c
  6261  00276A  103F               	iorwf	frexp@value+1,w,c
  6262  00276C  1040               	iorwf	frexp@value+2,w,c
  6263  00276E  A4D8               	btfss	status,2,c
  6264  002770  D00F               	goto	l2850
  6265  002772  C041  FFD9         	movff	frexp@eptr,fsr2l
  6266  002776  C042  FFDA         	movff	frexp@eptr+1,fsr2h
  6267  00277A  0E00               	movlw	0
  6268  00277C  6EDE               	movwf	postinc2,c
  6269  00277E  0E00               	movlw	0
  6270  002780  6EDD               	movwf	postdec2,c
  6271  002782  0E00               	movlw	0
  6272  002784  6E3E               	movwf	?_frexp,c
  6273  002786  0E00               	movlw	0
  6274  002788  6E3F               	movwf	?_frexp+1,c
  6275  00278A  0E00               	movlw	0
  6276  00278C  6E40               	movwf	?_frexp+2,c
  6277  00278E  D034               	goto	l1278
  6278  002790                     l2850:
  6279  002790  5040               	movf	frexp@value+2,w,c
  6280  002792  0B7F               	andlw	127
  6281  002794  6E43               	movwf	??_frexp& (0+255),c
  6282  002796  6A44               	clrf	(??_frexp+1)& (0+255),c
  6283  002798  90D8               	bcf	status,0,c
  6284  00279A  3643               	rlcf	??_frexp,f,c
  6285  00279C  3644               	rlcf	??_frexp+1,f,c
  6286  00279E  C041  FFD9         	movff	frexp@eptr,fsr2l
  6287  0027A2  C042  FFDA         	movff	frexp@eptr+1,fsr2h
  6288  0027A6  C043  FFDE         	movff	??_frexp,postinc2
  6289  0027AA  C044  FFDD         	movff	??_frexp+1,postdec2
  6290  0027AE  AE3F               	btfss	frexp@value+1,7,c
  6291  0027B0  D003               	goto	u2000
  6292  0027B2  6A43               	clrf	??_frexp& (0+255),c
  6293  0027B4  2A43               	incf	??_frexp& (0+255),f,c
  6294  0027B6  D001               	goto	u2008
  6295  0027B8                     u2000:
  6296  0027B8  6A43               	clrf	??_frexp& (0+255),c
  6297  0027BA                     u2008:
  6298  0027BA  5043               	movf	??_frexp,w,c
  6299  0027BC  C041  FFD9         	movff	frexp@eptr,fsr2l
  6300  0027C0  C042  FFDA         	movff	frexp@eptr+1,fsr2h
  6301  0027C4  12DE               	iorwf	postinc2,f,c
  6302  0027C6  0E00               	movlw	0
  6303  0027C8  12DD               	iorwf	postdec2,f,c
  6304  0027CA  C041  FFD9         	movff	frexp@eptr,fsr2l
  6305  0027CE  C042  FFDA         	movff	frexp@eptr+1,fsr2h
  6306  0027D2  0E82               	movlw	130
  6307  0027D4  26DE               	addwf	postinc2,f,c
  6308  0027D6  0EFF               	movlw	255
  6309  0027D8  22DD               	addwfc	postdec2,f,c
  6310  0027DA  8040               	bsf	frexp@value+2,0,c
  6311  0027DC  8240               	bsf	frexp@value+2,1,c
  6312  0027DE  8440               	bsf	frexp@value+2,2,c
  6313  0027E0  8640               	bsf	frexp@value+2,3,c
  6314  0027E2  8840               	bsf	frexp@value+2,4,c
  6315  0027E4  8A40               	bsf	frexp@value+2,5,c
  6316  0027E6  9C40               	bcf	frexp@value+2,6,c
  6317  0027E8  9E3F               	bcf	frexp@value+1,7,c
  6318  0027EA  C03E  F03E         	movff	frexp@value,?_frexp
  6319  0027EE  C03F  F03F         	movff	frexp@value+1,?_frexp+1
  6320  0027F2  C040  F040         	movff	frexp@value+2,?_frexp+2
  6321  0027F6  D000               	goto	l1278
  6322  0027F8                     l1278:
  6323  0027F8  0012               	return		;funcret
  6324  0027FA                     __end_of_frexp:
  6325                           	opt stack 0
  6326                           prodh	equ	0xFF4
  6327                           prodl	equ	0xFF3
  6328                           intcon	equ	0xFF2
  6329                           intcon2	equ	0xFF1
  6330                           postinc0	equ	0xFEE
  6331                           wreg	equ	0xFE8
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function ___fttol *****************
  6340 ;; Defined at:
  6341 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  f1              3   33[BANK0 ] float 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  lval            4   43[BANK0 ] unsigned long 
  6346 ;;  exp1            1   47[BANK0 ] unsigned char 
  6347 ;;  sign1           1   42[BANK0 ] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  4   33[BANK0 ] long 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;Total ram usage:       15 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    6
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_CalculateSensorSums
  6368 ;;		_pow
  6369 ;;		_exp
  6370 ;;		_floor
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text59
  6375  001CA2                     __ptext59:
  6376                           	opt stack 0
  6377  001CA2                     ___fttol:
  6378                           	opt stack 20
  6379                           
  6380                           ;incstack = 0
  6381  001CA2  C083  F085         	movff	___fttol@f1+2,??___fttol
  6382  001CA6  0100               	movlb	0	; () banked
  6383  001CA8  6B86               	clrf	(??___fttol+1)& (0+255),b
  6384  001CAA  6B87               	clrf	(??___fttol+2)& (0+255),b
  6385  001CAC  0100               	movlb	0	; () banked
  6386  001CAE  3582               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6387  001CB0  0100               	movlb	0	; () banked
  6388  001CB2  3785               	rlcf	??___fttol& (0+255),f,b
  6389  001CB4  E301               	bnc	u1911
  6390  001CB6  8186               	bsf	(??___fttol+1)& (0+255),0,b
  6391  001CB8                     u1911:
  6392  001CB8  0100               	movlb	0	; () banked
  6393  001CBA  5185               	movf	??___fttol& (0+255),w,b
  6394  001CBC  0100               	movlb	0	; () banked
  6395  001CBE  6F8F               	movwf	___fttol@exp1& (0+255),b
  6396  001CC0  0100               	movlb	0	; () banked
  6397  001CC2  518F               	movf	___fttol@exp1& (0+255),w,b
  6398  001CC4  A4D8               	btfss	status,2,c
  6399  001CC6  D002               	goto	l2802
  6400  001CC8  D051               	goto	l2826
  6401                           
  6402                           ; BSR set to: 0
  6403                           
  6404                           ; BSR set to: 0
  6405  001CCA  D083               	goto	l1098
  6406  001CCC                     l2802:
  6407                           
  6408                           ; BSR set to: 0
  6409  001CCC  0E17               	movlw	23
  6410  001CCE  0100               	movlb	0	; () banked
  6411  001CD0  6F85               	movwf	??___fttol& (0+255),b
  6412  001CD2  C081  F086         	movff	___fttol@f1,??___fttol+1
  6413  001CD6  C082  F087         	movff	___fttol@f1+1,??___fttol+2
  6414  001CDA  C083  F088         	movff	___fttol@f1+2,??___fttol+3
  6415  001CDE  0100               	movlb	0	; () banked
  6416  001CE0  2985               	incf	??___fttol& (0+255),w,b
  6417  001CE2  0100               	movlb	0	; () banked
  6418  001CE4  6F89               	movwf	(??___fttol+4)& (0+255),b
  6419  001CE6  D005               	goto	u1930
  6420  001CE8                     u1935:
  6421  001CE8  0100               	movlb	0	; () banked
  6422  001CEA  90D8               	bcf	status,0,c
  6423  001CEC  3388               	rrcf	(??___fttol+3)& (0+255),f,b
  6424  001CEE  3387               	rrcf	(??___fttol+2)& (0+255),f,b
  6425  001CF0  3386               	rrcf	(??___fttol+1)& (0+255),f,b
  6426  001CF2                     u1930:
  6427  001CF2  0100               	movlb	0	; () banked
  6428  001CF4  2F89               	decfsz	(??___fttol+4)& (0+255),f,b
  6429  001CF6  D7F8               	goto	u1935
  6430  001CF8  0100               	movlb	0	; () banked
  6431  001CFA  5186               	movf	(??___fttol+1)& (0+255),w,b
  6432  001CFC  0100               	movlb	0	; () banked
  6433  001CFE  6F8A               	movwf	___fttol@sign1& (0+255),b
  6434                           
  6435                           ; BSR set to: 0
  6436  001D00  0100               	movlb	0	; () banked
  6437  001D02  8F82               	bsf	(___fttol@f1+1)& (0+255),7,b
  6438                           
  6439                           ; BSR set to: 0
  6440  001D04  0EFF               	movlw	255
  6441  001D06  0100               	movlb	0	; () banked
  6442  001D08  1781               	andwf	___fttol@f1& (0+255),f,b
  6443  001D0A  0EFF               	movlw	255
  6444  001D0C  0100               	movlb	0	; () banked
  6445  001D0E  1782               	andwf	(___fttol@f1+1)& (0+255),f,b
  6446  001D10  0E00               	movlw	0
  6447  001D12  0100               	movlb	0	; () banked
  6448  001D14  1783               	andwf	(___fttol@f1+2)& (0+255),f,b
  6449                           
  6450                           ; BSR set to: 0
  6451  001D16  0100               	movlb	0	; () banked
  6452  001D18  5181               	movf	___fttol@f1& (0+255),w,b
  6453  001D1A  0100               	movlb	0	; () banked
  6454  001D1C  6F8B               	movwf	___fttol@lval& (0+255),b
  6455  001D1E  0100               	movlb	0	; () banked
  6456  001D20  5182               	movf	(___fttol@f1+1)& (0+255),w,b
  6457  001D22  0100               	movlb	0	; () banked
  6458  001D24  6F8C               	movwf	(___fttol@lval+1)& (0+255),b
  6459  001D26  0100               	movlb	0	; () banked
  6460  001D28  5183               	movf	(___fttol@f1+2)& (0+255),w,b
  6461  001D2A  0100               	movlb	0	; () banked
  6462  001D2C  6F8D               	movwf	(___fttol@lval+2)& (0+255),b
  6463  001D2E  0100               	movlb	0	; () banked
  6464  001D30  6B8E               	clrf	(___fttol@lval+3)& (0+255),b
  6465                           
  6466                           ; BSR set to: 0
  6467  001D32  0E8E               	movlw	142
  6468  001D34  0100               	movlb	0	; () banked
  6469  001D36  5F8F               	subwf	___fttol@exp1& (0+255),f,b
  6470                           
  6471                           ; BSR set to: 0
  6472  001D38  0100               	movlb	0	; () banked
  6473  001D3A  AF8F               	btfss	___fttol@exp1& (0+255),7,b
  6474  001D3C  D013               	goto	l2824
  6475                           
  6476                           ; BSR set to: 0
  6477  001D3E  0100               	movlb	0	; () banked
  6478  001D40  518F               	movf	___fttol@exp1& (0+255),w,b
  6479  001D42  0A80               	xorlw	128
  6480  001D44  0F8F               	addlw	143
  6481  001D46  B0D8               	btfsc	status,0,c
  6482  001D48  D003               	goto	l2820
  6483  001D4A  D010               	goto	l2826
  6484                           
  6485                           ; BSR set to: 0
  6486                           
  6487                           ; BSR set to: 0
  6488  001D4C  D042               	goto	l1098
  6489                           
  6490                           ; BSR set to: 0
  6491  001D4E  D000               	goto	l2820
  6492  001D50                     l2820:
  6493                           
  6494                           ; BSR set to: 0
  6495  001D50  0100               	movlb	0	; () banked
  6496  001D52  90D8               	bcf	status,0,c
  6497  001D54  338E               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6498  001D56  338D               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6499  001D58  338C               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6500  001D5A  338B               	rrcf	___fttol@lval& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 0
  6503  001D5C  0100               	movlb	0	; () banked
  6504  001D5E  3F8F               	incfsz	___fttol@exp1& (0+255),f,b
  6505  001D60  D7F7               	goto	l2820
  6506                           
  6507                           ; BSR set to: 0
  6508  001D62  D01F               	goto	l2834
  6509  001D64                     l2824:
  6510                           
  6511                           ; BSR set to: 0
  6512  001D64  0E17               	movlw	23
  6513  001D66  0100               	movlb	0	; () banked
  6514  001D68  658F               	cpfsgt	___fttol@exp1& (0+255),b
  6515  001D6A  D014               	goto	l2832
  6516  001D6C                     l2826:
  6517                           
  6518                           ; BSR set to: 0
  6519  001D6C  0E00               	movlw	0
  6520  001D6E  0100               	movlb	0	; () banked
  6521  001D70  6F81               	movwf	?___fttol& (0+255),b
  6522  001D72  0E00               	movlw	0
  6523  001D74  6F82               	movwf	(?___fttol+1)& (0+255),b
  6524  001D76  0E00               	movlw	0
  6525  001D78  6F83               	movwf	(?___fttol+2)& (0+255),b
  6526  001D7A  0E00               	movlw	0
  6527  001D7C  6F84               	movwf	(?___fttol+3)& (0+255),b
  6528                           
  6529                           ; BSR set to: 0
  6530  001D7E  D029               	goto	l1098
  6531                           
  6532                           ; BSR set to: 0
  6533  001D80  D009               	goto	l2832
  6534  001D82                     l2830:
  6535                           
  6536                           ; BSR set to: 0
  6537  001D82  0100               	movlb	0	; () banked
  6538  001D84  90D8               	bcf	status,0,c
  6539  001D86  378B               	rlcf	___fttol@lval& (0+255),f,b
  6540  001D88  378C               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6541  001D8A  378D               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6542  001D8C  378E               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6543  001D8E  0100               	movlb	0	; () banked
  6544  001D90  078F               	decf	___fttol@exp1& (0+255),f,b
  6545  001D92  D000               	goto	l2832
  6546  001D94                     l2832:
  6547                           
  6548                           ; BSR set to: 0
  6549  001D94  0100               	movlb	0	; () banked
  6550  001D96  518F               	movf	___fttol@exp1& (0+255),w,b
  6551  001D98  0100               	movlb	0	; () banked
  6552  001D9A  B4D8               	btfsc	status,2,c
  6553  001D9C  D002               	goto	l2834
  6554  001D9E  D7F1               	goto	l2830
  6555                           
  6556                           ; BSR set to: 0
  6557  001DA0  D000               	goto	l2834
  6558  001DA2                     l2834:
  6559                           
  6560                           ; BSR set to: 0
  6561  001DA2  0100               	movlb	0	; () banked
  6562  001DA4  518A               	movf	___fttol@sign1& (0+255),w,b
  6563  001DA6  0100               	movlb	0	; () banked
  6564  001DA8  B4D8               	btfsc	status,2,c
  6565  001DAA  D00A               	goto	l2838
  6566                           
  6567                           ; BSR set to: 0
  6568  001DAC  0100               	movlb	0	; () banked
  6569  001DAE  1F8E               	comf	(___fttol@lval+3)& (0+255),f,b
  6570  001DB0  1F8D               	comf	(___fttol@lval+2)& (0+255),f,b
  6571  001DB2  1F8C               	comf	(___fttol@lval+1)& (0+255),f,b
  6572  001DB4  6D8B               	negf	___fttol@lval& (0+255),b
  6573  001DB6  0E00               	movlw	0
  6574  001DB8  238C               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6575  001DBA  238D               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6576  001DBC  238E               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6577  001DBE  D000               	goto	l2838
  6578  001DC0                     l2838:
  6579                           
  6580                           ; BSR set to: 0
  6581  001DC0  C08B  F081         	movff	___fttol@lval,?___fttol
  6582  001DC4  C08C  F082         	movff	___fttol@lval+1,?___fttol+1
  6583  001DC8  C08D  F083         	movff	___fttol@lval+2,?___fttol+2
  6584  001DCC  C08E  F084         	movff	___fttol@lval+3,?___fttol+3
  6585  001DD0  D000               	goto	l1098
  6586  001DD2                     l1098:
  6587                           
  6588                           ; BSR set to: 0
  6589  001DD2  0012               	return		;funcret
  6590  001DD4                     __end_of___fttol:
  6591                           	opt stack 0
  6592                           prodh	equ	0xFF4
  6593                           prodl	equ	0xFF3
  6594                           intcon	equ	0xFF2
  6595                           intcon2	equ	0xFF1
  6596                           postinc0	equ	0xFEE
  6597                           wreg	equ	0xFE8
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function ___ftge *****************
  6606 ;; Defined at:
  6607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  ff1             3   25[COMRAM] float 
  6610 ;;  ff2             3   28[COMRAM] float 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;		None               void
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;Total ram usage:        9 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    6
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_pow
  6633 ;;		_exp
  6634 ;;		_floor
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text60
  6639  00257E                     __ptext60:
  6640                           	opt stack 0
  6641  00257E                     ___ftge:
  6642                           	opt stack 20
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;incstack = 0
  6646  00257E  AE40               	btfss	___ftge@ff1+2,7,c
  6647  002580  D01B               	goto	l3950
  6648  002582  C03E  F06E         	movff	___ftge@ff1,??___ftge
  6649  002586  C03F  F06F         	movff	___ftge@ff1+1,??___ftge+1
  6650  00258A  C040  F070         	movff	___ftge@ff1+2,??___ftge+2
  6651  00258E  0100               	movlb	0	; () banked
  6652  002590  1F6E               	comf	??___ftge& (0+255),f,b
  6653  002592  1F6F               	comf	(??___ftge+1)& (0+255),f,b
  6654  002594  1F70               	comf	(??___ftge+2)& (0+255),f,b
  6655  002596  2B6E               	incf	??___ftge& (0+255),f,b
  6656  002598  0E00               	movlw	0
  6657  00259A  236F               	addwfc	(??___ftge+1)& (0+255),f,b
  6658  00259C  2370               	addwfc	(??___ftge+2)& (0+255),f,b
  6659  00259E  0E00               	movlw	0
  6660  0025A0  0100               	movlb	0	; () banked
  6661  0025A2  256E               	addwf	??___ftge& (0+255),w,b
  6662  0025A4  6E3E               	movwf	___ftge@ff1,c
  6663  0025A6  0E00               	movlw	0
  6664  0025A8  0100               	movlb	0	; () banked
  6665  0025AA  216F               	addwfc	(??___ftge+1)& (0+255),w,b
  6666  0025AC  6E3F               	movwf	___ftge@ff1+1,c
  6667  0025AE  0E80               	movlw	128
  6668  0025B0  0100               	movlb	0	; () banked
  6669  0025B2  2170               	addwfc	(??___ftge+2)& (0+255),w,b
  6670  0025B4  6E40               	movwf	___ftge@ff1+2,c
  6671  0025B6  D000               	goto	l3950
  6672  0025B8                     l3950:
  6673  0025B8  AE43               	btfss	___ftge@ff2+2,7,c
  6674  0025BA  D01B               	goto	l3954
  6675  0025BC  C041  F06E         	movff	___ftge@ff2,??___ftge
  6676  0025C0  C042  F06F         	movff	___ftge@ff2+1,??___ftge+1
  6677  0025C4  C043  F070         	movff	___ftge@ff2+2,??___ftge+2
  6678  0025C8  0100               	movlb	0	; () banked
  6679  0025CA  1F6E               	comf	??___ftge& (0+255),f,b
  6680  0025CC  1F6F               	comf	(??___ftge+1)& (0+255),f,b
  6681  0025CE  1F70               	comf	(??___ftge+2)& (0+255),f,b
  6682  0025D0  2B6E               	incf	??___ftge& (0+255),f,b
  6683  0025D2  0E00               	movlw	0
  6684  0025D4  236F               	addwfc	(??___ftge+1)& (0+255),f,b
  6685  0025D6  2370               	addwfc	(??___ftge+2)& (0+255),f,b
  6686  0025D8  0E00               	movlw	0
  6687  0025DA  0100               	movlb	0	; () banked
  6688  0025DC  256E               	addwf	??___ftge& (0+255),w,b
  6689  0025DE  6E41               	movwf	___ftge@ff2,c
  6690  0025E0  0E00               	movlw	0
  6691  0025E2  0100               	movlb	0	; () banked
  6692  0025E4  216F               	addwfc	(??___ftge+1)& (0+255),w,b
  6693  0025E6  6E42               	movwf	___ftge@ff2+1,c
  6694  0025E8  0E80               	movlw	128
  6695  0025EA  0100               	movlb	0	; () banked
  6696  0025EC  2170               	addwfc	(??___ftge+2)& (0+255),w,b
  6697  0025EE  6E43               	movwf	___ftge@ff2+2,c
  6698  0025F0  D000               	goto	l3954
  6699  0025F2                     l3954:
  6700  0025F2  0E00               	movlw	0
  6701  0025F4  1A3E               	xorwf	___ftge@ff1,f,c
  6702  0025F6  0E00               	movlw	0
  6703  0025F8  1A3F               	xorwf	___ftge@ff1+1,f,c
  6704  0025FA  0E80               	movlw	128
  6705  0025FC  1A40               	xorwf	___ftge@ff1+2,f,c
  6706  0025FE  0E00               	movlw	0
  6707  002600  1A41               	xorwf	___ftge@ff2,f,c
  6708  002602  0E00               	movlw	0
  6709  002604  1A42               	xorwf	___ftge@ff2+1,f,c
  6710  002606  0E80               	movlw	128
  6711  002608  1A43               	xorwf	___ftge@ff2+2,f,c
  6712  00260A  5041               	movf	___ftge@ff2,w,c
  6713  00260C  5C3E               	subwf	___ftge@ff1,w,c
  6714  00260E  5042               	movf	___ftge@ff2+1,w,c
  6715  002610  583F               	subwfb	___ftge@ff1+1,w,c
  6716  002612  5043               	movf	___ftge@ff2+2,w,c
  6717  002614  5840               	subwfb	___ftge@ff1+2,w,c
  6718  002616  B0D8               	btfsc	status,0,c
  6719  002618  D002               	goto	l3960
  6720  00261A  90D8               	bcf	status,0,c
  6721  00261C  D002               	goto	l1071
  6722  00261E                     l3960:
  6723  00261E  80D8               	bsf	status,0,c
  6724  002620  D000               	goto	l1071
  6725  002622                     l1071:
  6726  002622  0012               	return		;funcret
  6727  002624                     __end_of___ftge:
  6728                           	opt stack 0
  6729                           prodh	equ	0xFF4
  6730                           prodl	equ	0xFF3
  6731                           intcon	equ	0xFF2
  6732                           intcon2	equ	0xFF1
  6733                           postinc0	equ	0xFEE
  6734                           wreg	equ	0xFE8
  6735                           indf2	equ	0xFDF
  6736                           postinc2	equ	0xFDE
  6737                           postdec2	equ	0xFDD
  6738                           fsr2h	equ	0xFDA
  6739                           fsr2l	equ	0xFD9
  6740                           status	equ	0xFD8
  6741                           
  6742 ;; *************** function ___altoft *****************
  6743 ;; Defined at:
  6744 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  c               4   48[BANK0 ] long 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  sign            1   57[BANK0 ] unsigned char 
  6749 ;;  exp             1   56[BANK0 ] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  3   48[BANK0 ] float 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;Total ram usage:       10 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    7
  6766 ;; This function calls:
  6767 ;;		___ftpack
  6768 ;; This function is called by:
  6769 ;;		_floor
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text61
  6774  002624                     __ptext61:
  6775                           	opt stack 0
  6776  002624                     ___altoft:
  6777                           	opt stack 19
  6778                           
  6779                           ;incstack = 0
  6780  002624  0E00               	movlw	0
  6781  002626  0100               	movlb	0	; () banked
  6782  002628  6F99               	movwf	___altoft@sign& (0+255),b
  6783  00262A  0E8E               	movlw	142
  6784  00262C  0100               	movlb	0	; () banked
  6785  00262E  6F98               	movwf	___altoft@exp& (0+255),b
  6786                           
  6787                           ; BSR set to: 0
  6788  002630  0100               	movlb	0	; () banked
  6789  002632  AF93               	btfss	(___altoft@c+3)& (0+255),7,b
  6790  002634  D016               	goto	l3822
  6791                           
  6792                           ; BSR set to: 0
  6793  002636  0100               	movlb	0	; () banked
  6794  002638  1F93               	comf	(___altoft@c+3)& (0+255),f,b
  6795  00263A  1F92               	comf	(___altoft@c+2)& (0+255),f,b
  6796  00263C  1F91               	comf	(___altoft@c+1)& (0+255),f,b
  6797  00263E  6D90               	negf	___altoft@c& (0+255),b
  6798  002640  0E00               	movlw	0
  6799  002642  2391               	addwfc	(___altoft@c+1)& (0+255),f,b
  6800  002644  2392               	addwfc	(___altoft@c+2)& (0+255),f,b
  6801  002646  2393               	addwfc	(___altoft@c+3)& (0+255),f,b
  6802                           
  6803                           ; BSR set to: 0
  6804  002648  0E01               	movlw	1
  6805  00264A  0100               	movlb	0	; () banked
  6806  00264C  6F99               	movwf	___altoft@sign& (0+255),b
  6807                           
  6808                           ; BSR set to: 0
  6809  00264E  D009               	goto	l3822
  6810  002650                     l3820:
  6811                           
  6812                           ; BSR set to: 0
  6813  002650  0100               	movlb	0	; () banked
  6814  002652  90D8               	bcf	status,0,c
  6815  002654  3393               	rrcf	(___altoft@c+3)& (0+255),f,b
  6816  002656  3392               	rrcf	(___altoft@c+2)& (0+255),f,b
  6817  002658  3391               	rrcf	(___altoft@c+1)& (0+255),f,b
  6818  00265A  3390               	rrcf	___altoft@c& (0+255),f,b
  6819  00265C  0100               	movlb	0	; () banked
  6820  00265E  2B98               	incf	___altoft@exp& (0+255),f,b
  6821  002660  D000               	goto	l3822
  6822  002662                     l3822:
  6823                           
  6824                           ; BSR set to: 0
  6825  002662  0E00               	movlw	0
  6826  002664  0100               	movlb	0	; () banked
  6827  002666  1590               	andwf	___altoft@c& (0+255),w,b
  6828  002668  0100               	movlb	0	; () banked
  6829  00266A  6F94               	movwf	??___altoft& (0+255),b
  6830  00266C  0E00               	movlw	0
  6831  00266E  0100               	movlb	0	; () banked
  6832  002670  1591               	andwf	(___altoft@c+1)& (0+255),w,b
  6833  002672  0100               	movlb	0	; () banked
  6834  002674  6F95               	movwf	(??___altoft+1)& (0+255),b
  6835  002676  0E00               	movlw	0
  6836  002678  0100               	movlb	0	; () banked
  6837  00267A  1592               	andwf	(___altoft@c+2)& (0+255),w,b
  6838  00267C  0100               	movlb	0	; () banked
  6839  00267E  6F96               	movwf	(??___altoft+2)& (0+255),b
  6840  002680  0EFF               	movlw	255
  6841  002682  0100               	movlb	0	; () banked
  6842  002684  1593               	andwf	(___altoft@c+3)& (0+255),w,b
  6843  002686  0100               	movlb	0	; () banked
  6844  002688  6F97               	movwf	(??___altoft+3)& (0+255),b
  6845  00268A  0100               	movlb	0	; () banked
  6846  00268C  5194               	movf	??___altoft& (0+255),w,b
  6847  00268E  0100               	movlb	0	; () banked
  6848  002690  1195               	iorwf	(??___altoft+1)& (0+255),w,b
  6849  002692  0100               	movlb	0	; () banked
  6850  002694  1196               	iorwf	(??___altoft+2)& (0+255),w,b
  6851  002696  0100               	movlb	0	; () banked
  6852  002698  1197               	iorwf	(??___altoft+3)& (0+255),w,b
  6853  00269A  A4D8               	btfss	status,2,c
  6854  00269C  D7D9               	goto	l3820
  6855                           
  6856                           ; BSR set to: 0
  6857                           
  6858                           ; BSR set to: 0
  6859  00269E  C090  F03E         	movff	___altoft@c,___ftpack@arg
  6860  0026A2  C091  F03F         	movff	___altoft@c+1,___ftpack@arg+1
  6861  0026A6  C092  F040         	movff	___altoft@c+2,___ftpack@arg+2
  6862  0026AA  C098  F041         	movff	___altoft@exp,___ftpack@exp
  6863  0026AE  C099  F042         	movff	___altoft@sign,___ftpack@sign
  6864  0026B2  ECB6  F011         	call	___ftpack	;wreg free
  6865  0026B6  C03E  F090         	movff	?___ftpack,?___altoft
  6866  0026BA  C03F  F091         	movff	?___ftpack+1,?___altoft+1
  6867  0026BE  C040  F092         	movff	?___ftpack+2,?___altoft+2
  6868  0026C2  D000               	goto	l765
  6869  0026C4                     l765:
  6870  0026C4  0012               	return		;funcret
  6871  0026C6                     __end_of___altoft:
  6872                           	opt stack 0
  6873                           prodh	equ	0xFF4
  6874                           prodl	equ	0xFF3
  6875                           intcon	equ	0xFF2
  6876                           intcon2	equ	0xFF1
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           indf2	equ	0xFDF
  6880                           postinc2	equ	0xFDE
  6881                           postdec2	equ	0xFDD
  6882                           fsr2h	equ	0xFDA
  6883                           fsr2l	equ	0xFD9
  6884                           status	equ	0xFD8
  6885                           
  6886 ;; *************** function _eval_poly *****************
  6887 ;; Defined at:
  6888 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  x               3   45[BANK0 ] float 
  6891 ;;  d               2   48[BANK0 ] PTR const 
  6892 ;;		 -> log@coeff(27), exp@coeff(30), 
  6893 ;;  n               2   50[BANK0 ] int 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  res             3   54[BANK0 ] int 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  3   45[BANK0 ] int 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6905 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;Total ram usage:       12 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:    8
  6912 ;; This function calls:
  6913 ;;		___ftadd
  6914 ;;		___ftmul
  6915 ;;		___wmul
  6916 ;; This function is called by:
  6917 ;;		_exp
  6918 ;;		_log
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text62
  6923  0020CA                     __ptext62:
  6924                           	opt stack 0
  6925  0020CA                     _eval_poly:
  6926                           	opt stack 19
  6927                           
  6928                           ;incstack = 0
  6929  0020CA  C092  F03E         	movff	eval_poly@n,___wmul@multiplier
  6930  0020CE  C093  F03F         	movff	eval_poly@n+1,___wmul@multiplier+1
  6931  0020D2  0E00               	movlw	0
  6932  0020D4  6E41               	movwf	___wmul@multiplicand+1,c
  6933  0020D6  0E03               	movlw	3
  6934  0020D8  6E40               	movwf	___wmul@multiplicand,c
  6935  0020DA  EC41  F016         	call	___wmul	;wreg free
  6936  0020DE  C090  F094         	movff	eval_poly@d,??_eval_poly
  6937  0020E2  C091  F095         	movff	eval_poly@d+1,??_eval_poly+1
  6938  0020E6  503E               	movf	?___wmul,w,c
  6939  0020E8  0100               	movlb	0	; () banked
  6940  0020EA  2794               	addwf	??_eval_poly& (0+255),f,b
  6941  0020EC  503F               	movf	?___wmul+1,w,c
  6942  0020EE  0100               	movlb	0	; () banked
  6943  0020F0  2395               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6944  0020F2  C094  FFF6         	movff	??_eval_poly,tblptrl
  6945  0020F6  C095  FFF7         	movff	??_eval_poly+1,tblptrh
  6946  0020FA                     	if	0	;tblptru may be non-zero
  6947  0020FA                     	endif
  6948  0020FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6949  0020FA  0E00               	movlw	low (__mediumconst shr (0+16))
  6950  0020FC  6EF8               	movwf	tblptru,c
  6951  0020FE                     	endif
  6952  0020FE  0009               	tblrd		*+
  6953  002100  CFF5 F096          	movff	tablat,eval_poly@res
  6954  002104  0009               	tblrd		*+
  6955  002106  CFF5 F097          	movff	tablat,eval_poly@res+1
  6956  00210A  000A               	tblrd		*-
  6957  00210C  CFF5 F098          	movff	tablat,eval_poly@res+2
  6958  002110  D044               	goto	l4058
  6959  002112                     l4056:
  6960                           
  6961                           ; BSR set to: 0
  6962  002112  C096  F075         	movff	eval_poly@res,___ftmul@f2
  6963  002116  C097  F076         	movff	eval_poly@res+1,___ftmul@f2+1
  6964  00211A  C098  F077         	movff	eval_poly@res+2,___ftmul@f2+2
  6965  00211E  C08D  F072         	movff	eval_poly@x,___ftmul@f1
  6966  002122  C08E  F073         	movff	eval_poly@x+1,___ftmul@f1+1
  6967  002126  C08F  F074         	movff	eval_poly@x+2,___ftmul@f1+2
  6968  00212A  EC64  F00C         	call	___ftmul	;wreg free
  6969  00212E  C072  F081         	movff	?___ftmul,___ftadd@f1
  6970  002132  C073  F082         	movff	?___ftmul+1,___ftadd@f1+1
  6971  002136  C074  F083         	movff	?___ftmul+2,___ftadd@f1+2
  6972  00213A  0E00               	movlw	0
  6973  00213C  6E41               	movwf	___wmul@multiplicand+1,c
  6974  00213E  0E03               	movlw	3
  6975  002140  6E40               	movwf	___wmul@multiplicand,c
  6976  002142  0100               	movlb	0	; () banked
  6977  002144  0792               	decf	eval_poly@n& (0+255),f,b
  6978  002146  A0D8               	btfss	status,0,c
  6979  002148  0793               	decf	(eval_poly@n+1)& (0+255),f,b
  6980  00214A  C092  F03E         	movff	eval_poly@n,___wmul@multiplier
  6981  00214E  C093  F03F         	movff	eval_poly@n+1,___wmul@multiplier+1
  6982  002152  EC41  F016         	call	___wmul	;wreg free
  6983  002156  C090  F094         	movff	eval_poly@d,??_eval_poly
  6984  00215A  C091  F095         	movff	eval_poly@d+1,??_eval_poly+1
  6985  00215E  503E               	movf	?___wmul,w,c
  6986  002160  0100               	movlb	0	; () banked
  6987  002162  2794               	addwf	??_eval_poly& (0+255),f,b
  6988  002164  503F               	movf	?___wmul+1,w,c
  6989  002166  0100               	movlb	0	; () banked
  6990  002168  2395               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6991  00216A  C094  FFF6         	movff	??_eval_poly,tblptrl
  6992  00216E  C095  FFF7         	movff	??_eval_poly+1,tblptrh
  6993  002172                     	if	0	;tblptru may be non-zero
  6994  002172                     	endif
  6995  002172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6996  002172  0E00               	movlw	low (__mediumconst shr (0+16))
  6997  002174  6EF8               	movwf	tblptru,c
  6998  002176                     	endif
  6999  002176  0009               	tblrd		*+
  7000  002178  CFF5 F084          	movff	tablat,___ftadd@f2
  7001  00217C  0009               	tblrd		*+
  7002  00217E  CFF5 F085          	movff	tablat,___ftadd@f2+1
  7003  002182  000A               	tblrd		*-
  7004  002184  CFF5 F086          	movff	tablat,___ftadd@f2+2
  7005  002188  EC1E  F008         	call	___ftadd	;wreg free
  7006  00218C  C081  F096         	movff	?___ftadd,eval_poly@res
  7007  002190  C082  F097         	movff	?___ftadd+1,eval_poly@res+1
  7008  002194  C083  F098         	movff	?___ftadd+2,eval_poly@res+2
  7009  002198  D000               	goto	l4058
  7010  00219A                     l4058:
  7011  00219A  0100               	movlb	0	; () banked
  7012  00219C  5192               	movf	eval_poly@n& (0+255),w,b
  7013  00219E  0100               	movlb	0	; () banked
  7014  0021A0  1193               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7015  0021A2  A4D8               	btfss	status,2,c
  7016  0021A4  D7B6               	goto	l4056
  7017                           
  7018                           ; BSR set to: 0
  7019  0021A6  C096  F08D         	movff	eval_poly@res,?_eval_poly
  7020  0021AA  C097  F08E         	movff	eval_poly@res+1,?_eval_poly+1
  7021  0021AE  C098  F08F         	movff	eval_poly@res+2,?_eval_poly+2
  7022                           
  7023                           ; BSR set to: 0
  7024  0021B2  0012               	return		;funcret
  7025  0021B4                     __end_of_eval_poly:
  7026                           	opt stack 0
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           intcon2	equ	0xFF1
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           indf2	equ	0xFDF
  7038                           postinc2	equ	0xFDE
  7039                           postdec2	equ	0xFDD
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8
  7043                           
  7044 ;; *************** function ___wmul *****************
  7045 ;; Defined at:
  7046 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  multiplier      2   25[COMRAM] unsigned int 
  7049 ;;  multiplicand    2   27[COMRAM] unsigned int 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  product         2   29[COMRAM] unsigned int 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2   25[COMRAM] unsigned int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, prodl, prodh
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;Total ram usage:        6 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    6
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;;		_eval_poly
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text63
  7077  002C82                     __ptext63:
  7078                           	opt stack 0
  7079  002C82                     ___wmul:
  7080                           	opt stack 24
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;incstack = 0
  7084  002C82  503E               	movf	___wmul@multiplier,w,c
  7085  002C84  0240               	mulwf	___wmul@multiplicand,c
  7086  002C86  CFF3 F042          	movff	prodl,___wmul@product
  7087  002C8A  CFF4 F043          	movff	prodh,___wmul@product+1
  7088  002C8E  503E               	movf	___wmul@multiplier,w,c
  7089  002C90  0241               	mulwf	___wmul@multiplicand+1,c
  7090  002C92  50F3               	movf	prodl,w,c
  7091  002C94  2643               	addwf	___wmul@product+1,f,c
  7092  002C96  503F               	movf	___wmul@multiplier+1,w,c
  7093  002C98  0240               	mulwf	___wmul@multiplicand,c
  7094  002C9A  50F3               	movf	prodl,w,c
  7095  002C9C  2643               	addwf	___wmul@product+1,f,c
  7096  002C9E  C042  F03E         	movff	___wmul@product,?___wmul
  7097  002CA2  C043  F03F         	movff	___wmul@product+1,?___wmul+1
  7098  002CA6  D000               	goto	l668
  7099  002CA8                     l668:
  7100  002CA8  0012               	return		;funcret
  7101  002CAA                     __end_of___wmul:
  7102                           	opt stack 0
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           intcon	equ	0xFF2
  7110                           intcon2	equ	0xFF1
  7111                           postinc0	equ	0xFEE
  7112                           wreg	equ	0xFE8
  7113                           indf2	equ	0xFDF
  7114                           postinc2	equ	0xFDE
  7115                           postdec2	equ	0xFDD
  7116                           fsr2h	equ	0xFDA
  7117                           fsr2l	equ	0xFD9
  7118                           status	equ	0xFD8
  7119                           
  7120 ;; *************** function ___ftmul *****************
  7121 ;; Defined at:
  7122 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  f1              3   18[BANK0 ] float 
  7125 ;;  f2              3   21[BANK0 ] float 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  7128 ;;  sign            1   32[BANK0 ] unsigned char 
  7129 ;;  cntr            1   31[BANK0 ] unsigned char 
  7130 ;;  exp             1   27[BANK0 ] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  3   18[BANK0 ] float 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7140 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;Total ram usage:       15 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    7
  7147 ;; This function calls:
  7148 ;;		___ftpack
  7149 ;; This function is called by:
  7150 ;;		_CalculateSensorSums
  7151 ;;		_pow
  7152 ;;		_exp
  7153 ;;		_log
  7154 ;;		_eval_poly
  7155 ;;		_ConvertDistanceCM
  7156 ;;		_ConvertDistanceIN
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text64
  7161  0018C8                     __ptext64:
  7162                           	opt stack 0
  7163  0018C8                     ___ftmul:
  7164                           	opt stack 19
  7165                           
  7166                           ;incstack = 0
  7167  0018C8  C074  F078         	movff	___ftmul@f1+2,??___ftmul
  7168  0018CC  0100               	movlb	0	; () banked
  7169  0018CE  6B79               	clrf	(??___ftmul+1)& (0+255),b
  7170  0018D0  6B7A               	clrf	(??___ftmul+2)& (0+255),b
  7171  0018D2  0100               	movlb	0	; () banked
  7172  0018D4  3573               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7173  0018D6  0100               	movlb	0	; () banked
  7174  0018D8  3778               	rlcf	??___ftmul& (0+255),f,b
  7175  0018DA  E301               	bnc	u3261
  7176  0018DC  8179               	bsf	(??___ftmul+1)& (0+255),0,b
  7177  0018DE                     u3261:
  7178  0018DE  0100               	movlb	0	; () banked
  7179  0018E0  5178               	movf	??___ftmul& (0+255),w,b
  7180  0018E2  0100               	movlb	0	; () banked
  7181  0018E4  6F7B               	movwf	___ftmul@exp& (0+255),b
  7182  0018E6  0100               	movlb	0	; () banked
  7183  0018E8  517B               	movf	___ftmul@exp& (0+255),w,b
  7184  0018EA  A4D8               	btfss	status,2,c
  7185  0018EC  D002               	goto	l3904
  7186  0018EE  D014               	goto	l3906
  7187                           
  7188                           ; BSR set to: 0
  7189                           
  7190                           ; BSR set to: 0
  7191  0018F0  D098               	goto	l1077
  7192  0018F2                     l3904:
  7193                           
  7194                           ; BSR set to: 0
  7195  0018F2  C077  F078         	movff	___ftmul@f2+2,??___ftmul
  7196  0018F6  0100               	movlb	0	; () banked
  7197  0018F8  6B79               	clrf	(??___ftmul+1)& (0+255),b
  7198  0018FA  6B7A               	clrf	(??___ftmul+2)& (0+255),b
  7199  0018FC  0100               	movlb	0	; () banked
  7200  0018FE  3576               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7201  001900  0100               	movlb	0	; () banked
  7202  001902  3778               	rlcf	??___ftmul& (0+255),f,b
  7203  001904  E301               	bnc	u3281
  7204  001906  8179               	bsf	(??___ftmul+1)& (0+255),0,b
  7205  001908                     u3281:
  7206  001908  0100               	movlb	0	; () banked
  7207  00190A  5178               	movf	??___ftmul& (0+255),w,b
  7208  00190C  0100               	movlb	0	; () banked
  7209  00190E  6F80               	movwf	___ftmul@sign& (0+255),b
  7210  001910  0100               	movlb	0	; () banked
  7211  001912  5180               	movf	___ftmul@sign& (0+255),w,b
  7212  001914  A4D8               	btfss	status,2,c
  7213  001916  D00A               	goto	l3910
  7214  001918                     l3906:
  7215                           
  7216                           ; BSR set to: 0
  7217  001918  0E00               	movlw	0
  7218  00191A  0100               	movlb	0	; () banked
  7219  00191C  6F72               	movwf	?___ftmul& (0+255),b
  7220  00191E  0E00               	movlw	0
  7221  001920  0100               	movlb	0	; () banked
  7222  001922  6F73               	movwf	(?___ftmul+1)& (0+255),b
  7223  001924  0E00               	movlw	0
  7224  001926  0100               	movlb	0	; () banked
  7225  001928  6F74               	movwf	(?___ftmul+2)& (0+255),b
  7226                           
  7227                           ; BSR set to: 0
  7228  00192A  D07B               	goto	l1077
  7229  00192C                     l3910:
  7230                           
  7231                           ; BSR set to: 0
  7232  00192C  0100               	movlb	0	; () banked
  7233  00192E  5180               	movf	___ftmul@sign& (0+255),w,b
  7234  001930  0F7B               	addlw	123
  7235  001932  0100               	movlb	0	; () banked
  7236  001934  277B               	addwf	___ftmul@exp& (0+255),f,b
  7237                           
  7238                           ; BSR set to: 0
  7239  001936  C074  F080         	movff	___ftmul@f1+2,___ftmul@sign
  7240  00193A  0100               	movlb	0	; () banked
  7241  00193C  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
  7242  00193E  0100               	movlb	0	; () banked
  7243  001940  1B80               	xorwf	___ftmul@sign& (0+255),f,b
  7244  001942  0E80               	movlw	128
  7245  001944  0100               	movlb	0	; () banked
  7246  001946  1780               	andwf	___ftmul@sign& (0+255),f,b
  7247                           
  7248                           ; BSR set to: 0
  7249  001948  0100               	movlb	0	; () banked
  7250  00194A  8F73               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7251                           
  7252                           ; BSR set to: 0
  7253  00194C  0100               	movlb	0	; () banked
  7254  00194E  8F76               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7255                           
  7256                           ; BSR set to: 0
  7257  001950  0EFF               	movlw	255
  7258  001952  0100               	movlb	0	; () banked
  7259  001954  1775               	andwf	___ftmul@f2& (0+255),f,b
  7260  001956  0EFF               	movlw	255
  7261  001958  0100               	movlb	0	; () banked
  7262  00195A  1776               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7263  00195C  0E00               	movlw	0
  7264  00195E  0100               	movlb	0	; () banked
  7265  001960  1777               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7266                           
  7267                           ; BSR set to: 0
  7268  001962  0E00               	movlw	0
  7269  001964  0100               	movlb	0	; () banked
  7270  001966  6F7C               	movwf	___ftmul@f3_as_product& (0+255),b
  7271  001968  0E00               	movlw	0
  7272  00196A  0100               	movlb	0	; () banked
  7273  00196C  6F7D               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7274  00196E  0E00               	movlw	0
  7275  001970  0100               	movlb	0	; () banked
  7276  001972  6F7E               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7277                           
  7278                           ; BSR set to: 0
  7279  001974  0E07               	movlw	7
  7280  001976  0100               	movlb	0	; () banked
  7281  001978  6F7F               	movwf	___ftmul@cntr& (0+255),b
  7282  00197A  D000               	goto	l3924
  7283  00197C                     l3924:
  7284                           
  7285                           ; BSR set to: 0
  7286  00197C  0100               	movlb	0	; () banked
  7287  00197E  A172               	btfss	___ftmul@f1& (0+255),0,b
  7288  001980  D00D               	goto	l3928
  7289                           
  7290                           ; BSR set to: 0
  7291  001982  0100               	movlb	0	; () banked
  7292  001984  5175               	movf	___ftmul@f2& (0+255),w,b
  7293  001986  0100               	movlb	0	; () banked
  7294  001988  277C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7295  00198A  0100               	movlb	0	; () banked
  7296  00198C  5176               	movf	(___ftmul@f2+1)& (0+255),w,b
  7297  00198E  0100               	movlb	0	; () banked
  7298  001990  237D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7299  001992  0100               	movlb	0	; () banked
  7300  001994  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
  7301  001996  0100               	movlb	0	; () banked
  7302  001998  237E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7303  00199A  D000               	goto	l3928
  7304  00199C                     l3928:
  7305                           
  7306                           ; BSR set to: 0
  7307  00199C  0100               	movlb	0	; () banked
  7308  00199E  90D8               	bcf	status,0,c
  7309  0019A0  3374               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7310  0019A2  3373               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7311  0019A4  3372               	rrcf	___ftmul@f1& (0+255),f,b
  7312  0019A6  0100               	movlb	0	; () banked
  7313  0019A8  90D8               	bcf	status,0,c
  7314  0019AA  3775               	rlcf	___ftmul@f2& (0+255),f,b
  7315  0019AC  3776               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7316  0019AE  3777               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7317                           
  7318                           ; BSR set to: 0
  7319  0019B0  0100               	movlb	0	; () banked
  7320  0019B2  2F7F               	decfsz	___ftmul@cntr& (0+255),f,b
  7321  0019B4  D7E3               	goto	l3924
  7322  0019B6  D000               	goto	l3932
  7323  0019B8                     l3932:
  7324                           
  7325                           ; BSR set to: 0
  7326  0019B8  0E09               	movlw	9
  7327  0019BA  0100               	movlb	0	; () banked
  7328  0019BC  6F7F               	movwf	___ftmul@cntr& (0+255),b
  7329  0019BE  D000               	goto	l3934
  7330  0019C0                     l3934:
  7331                           
  7332                           ; BSR set to: 0
  7333  0019C0  0100               	movlb	0	; () banked
  7334  0019C2  A172               	btfss	___ftmul@f1& (0+255),0,b
  7335  0019C4  D00D               	goto	l3938
  7336                           
  7337                           ; BSR set to: 0
  7338  0019C6  0100               	movlb	0	; () banked
  7339  0019C8  5175               	movf	___ftmul@f2& (0+255),w,b
  7340  0019CA  0100               	movlb	0	; () banked
  7341  0019CC  277C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7342  0019CE  0100               	movlb	0	; () banked
  7343  0019D0  5176               	movf	(___ftmul@f2+1)& (0+255),w,b
  7344  0019D2  0100               	movlb	0	; () banked
  7345  0019D4  237D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7346  0019D6  0100               	movlb	0	; () banked
  7347  0019D8  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
  7348  0019DA  0100               	movlb	0	; () banked
  7349  0019DC  237E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7350  0019DE  D000               	goto	l3938
  7351  0019E0                     l3938:
  7352                           
  7353                           ; BSR set to: 0
  7354  0019E0  0100               	movlb	0	; () banked
  7355  0019E2  90D8               	bcf	status,0,c
  7356  0019E4  3374               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7357  0019E6  3373               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7358  0019E8  3372               	rrcf	___ftmul@f1& (0+255),f,b
  7359  0019EA  0100               	movlb	0	; () banked
  7360  0019EC  90D8               	bcf	status,0,c
  7361  0019EE  337E               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7362  0019F0  337D               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7363  0019F2  337C               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7364                           
  7365                           ; BSR set to: 0
  7366  0019F4  0100               	movlb	0	; () banked
  7367  0019F6  2F7F               	decfsz	___ftmul@cntr& (0+255),f,b
  7368  0019F8  D7E3               	goto	l3934
  7369  0019FA  D000               	goto	l3942
  7370  0019FC                     l3942:
  7371                           
  7372                           ; BSR set to: 0
  7373  0019FC  C07C  F03E         	movff	___ftmul@f3_as_product,___ftpack@arg
  7374  001A00  C07D  F03F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7375  001A04  C07E  F040         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7376  001A08  C07B  F041         	movff	___ftmul@exp,___ftpack@exp
  7377  001A0C  C080  F042         	movff	___ftmul@sign,___ftpack@sign
  7378  001A10  ECB6  F011         	call	___ftpack	;wreg free
  7379  001A14  C03E  F072         	movff	?___ftpack,?___ftmul
  7380  001A18  C03F  F073         	movff	?___ftpack+1,?___ftmul+1
  7381  001A1C  C040  F074         	movff	?___ftpack+2,?___ftmul+2
  7382  001A20  D000               	goto	l1077
  7383  001A22                     l1077:
  7384  001A22  0012               	return		;funcret
  7385  001A24                     __end_of___ftmul:
  7386                           	opt stack 0
  7387                           tblptru	equ	0xFF8
  7388                           tblptrh	equ	0xFF7
  7389                           tblptrl	equ	0xFF6
  7390                           tablat	equ	0xFF5
  7391                           prodh	equ	0xFF4
  7392                           prodl	equ	0xFF3
  7393                           intcon	equ	0xFF2
  7394                           intcon2	equ	0xFF1
  7395                           postinc0	equ	0xFEE
  7396                           wreg	equ	0xFE8
  7397                           indf2	equ	0xFDF
  7398                           postinc2	equ	0xFDE
  7399                           postdec2	equ	0xFDD
  7400                           fsr2h	equ	0xFDA
  7401                           fsr2l	equ	0xFD9
  7402                           status	equ	0xFD8
  7403                           
  7404 ;; *************** function ___ftsub *****************
  7405 ;; Defined at:
  7406 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  f1              3   45[BANK0 ] float 
  7409 ;;  f2              3   48[BANK0 ] float 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  3   45[BANK0 ] float 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7421 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;Total ram usage:        6 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    8
  7428 ;; This function calls:
  7429 ;;		___ftadd
  7430 ;; This function is called by:
  7431 ;;		_exp
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text65
  7436  002A18                     __ptext65:
  7437                           	opt stack 0
  7438  002A18                     ___ftsub:
  7439                           	opt stack 19
  7440                           
  7441                           ;incstack = 0
  7442  002A18  0100               	movlb	0	; () banked
  7443  002A1A  5190               	movf	___ftsub@f2& (0+255),w,b
  7444  002A1C  0100               	movlb	0	; () banked
  7445  002A1E  1191               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7446  002A20  0100               	movlb	0	; () banked
  7447  002A22  1192               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7448  002A24  B4D8               	btfsc	status,2,c
  7449  002A26  D00A               	goto	l4014
  7450                           
  7451                           ; BSR set to: 0
  7452  002A28  0E00               	movlw	0
  7453  002A2A  0100               	movlb	0	; () banked
  7454  002A2C  1B90               	xorwf	___ftsub@f2& (0+255),f,b
  7455  002A2E  0E00               	movlw	0
  7456  002A30  0100               	movlb	0	; () banked
  7457  002A32  1B91               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7458  002A34  0E80               	movlw	128
  7459  002A36  0100               	movlb	0	; () banked
  7460  002A38  1B92               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7461  002A3A  D000               	goto	l4014
  7462  002A3C                     l4014:
  7463                           
  7464                           ; BSR set to: 0
  7465  002A3C  C08D  F081         	movff	___ftsub@f1,___ftadd@f1
  7466  002A40  C08E  F082         	movff	___ftsub@f1+1,___ftadd@f1+1
  7467  002A44  C08F  F083         	movff	___ftsub@f1+2,___ftadd@f1+2
  7468  002A48  C090  F084         	movff	___ftsub@f2,___ftadd@f2
  7469  002A4C  C091  F085         	movff	___ftsub@f2+1,___ftadd@f2+1
  7470  002A50  C092  F086         	movff	___ftsub@f2+2,___ftadd@f2+2
  7471  002A54  EC1E  F008         	call	___ftadd	;wreg free
  7472  002A58  C081  F08D         	movff	?___ftadd,?___ftsub
  7473  002A5C  C082  F08E         	movff	?___ftadd+1,?___ftsub+1
  7474  002A60  C083  F08F         	movff	?___ftadd+2,?___ftsub+2
  7475  002A64  D000               	goto	l1094
  7476  002A66                     l1094:
  7477  002A66  0012               	return		;funcret
  7478  002A68                     __end_of___ftsub:
  7479                           	opt stack 0
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           prodh	equ	0xFF4
  7485                           prodl	equ	0xFF3
  7486                           intcon	equ	0xFF2
  7487                           intcon2	equ	0xFF1
  7488                           postinc0	equ	0xFEE
  7489                           wreg	equ	0xFE8
  7490                           indf2	equ	0xFDF
  7491                           postinc2	equ	0xFDE
  7492                           postdec2	equ	0xFDD
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8
  7496                           
  7497 ;; *************** function ___ftadd *****************
  7498 ;; Defined at:
  7499 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  f1              3   33[BANK0 ] float 
  7502 ;;  f2              3   36[BANK0 ] float 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  exp1            1   44[BANK0 ] unsigned char 
  7505 ;;  exp2            1   43[BANK0 ] unsigned char 
  7506 ;;  sign            1   42[BANK0 ] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  3   33[BANK0 ] float 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7516 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;Total ram usage:       12 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    7
  7523 ;; This function calls:
  7524 ;;		___ftpack
  7525 ;; This function is called by:
  7526 ;;		___ftsub
  7527 ;;		_floor
  7528 ;;		_log
  7529 ;;		_eval_poly
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text66
  7534  00103C                     __ptext66:
  7535                           	opt stack 0
  7536  00103C                     ___ftadd:
  7537                           	opt stack 19
  7538                           
  7539                           ;incstack = 0
  7540  00103C  C083  F087         	movff	___ftadd@f1+2,??___ftadd
  7541  001040  0100               	movlb	0	; () banked
  7542  001042  6B88               	clrf	(??___ftadd+1)& (0+255),b
  7543  001044  6B89               	clrf	(??___ftadd+2)& (0+255),b
  7544  001046  0100               	movlb	0	; () banked
  7545  001048  3582               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7546  00104A  0100               	movlb	0	; () banked
  7547  00104C  3787               	rlcf	??___ftadd& (0+255),f,b
  7548  00104E  E301               	bnc	u3051
  7549  001050  8188               	bsf	(??___ftadd+1)& (0+255),0,b
  7550  001052                     u3051:
  7551  001052  0100               	movlb	0	; () banked
  7552  001054  5187               	movf	??___ftadd& (0+255),w,b
  7553  001056  0100               	movlb	0	; () banked
  7554  001058  6F8C               	movwf	___ftadd@exp1& (0+255),b
  7555  00105A  C086  F087         	movff	___ftadd@f2+2,??___ftadd
  7556  00105E  0100               	movlb	0	; () banked
  7557  001060  6B88               	clrf	(??___ftadd+1)& (0+255),b
  7558  001062  6B89               	clrf	(??___ftadd+2)& (0+255),b
  7559  001064  0100               	movlb	0	; () banked
  7560  001066  3585               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7561  001068  0100               	movlb	0	; () banked
  7562  00106A  3787               	rlcf	??___ftadd& (0+255),f,b
  7563  00106C  E301               	bnc	u3061
  7564  00106E  8188               	bsf	(??___ftadd+1)& (0+255),0,b
  7565  001070                     u3061:
  7566  001070  0100               	movlb	0	; () banked
  7567  001072  5187               	movf	??___ftadd& (0+255),w,b
  7568  001074  0100               	movlb	0	; () banked
  7569  001076  6F8B               	movwf	___ftadd@exp2& (0+255),b
  7570                           
  7571                           ; BSR set to: 0
  7572  001078  0100               	movlb	0	; () banked
  7573  00107A  518C               	movf	___ftadd@exp1& (0+255),w,b
  7574  00107C  0100               	movlb	0	; () banked
  7575  00107E  B4D8               	btfsc	status,2,c
  7576  001080  D011               	goto	l1030
  7577                           
  7578                           ; BSR set to: 0
  7579  001082  0100               	movlb	0	; () banked
  7580  001084  518B               	movf	___ftadd@exp2& (0+255),w,b
  7581  001086  0100               	movlb	0	; () banked
  7582  001088  5D8C               	subwf	___ftadd@exp1& (0+255),w,b
  7583  00108A  B0D8               	btfsc	status,0,c
  7584  00108C  D012               	goto	l3836
  7585                           
  7586                           ; BSR set to: 0
  7587  00108E  0100               	movlb	0	; () banked
  7588  001090  518C               	movf	___ftadd@exp1& (0+255),w,b
  7589  001092  0800               	sublw	0
  7590  001094  0100               	movlb	0	; () banked
  7591  001096  258B               	addwf	___ftadd@exp2& (0+255),w,b
  7592  001098  0100               	movlb	0	; () banked
  7593  00109A  6F87               	movwf	??___ftadd& (0+255),b
  7594  00109C  0E18               	movlw	24
  7595  00109E  0100               	movlb	0	; () banked
  7596  0010A0  6587               	cpfsgt	??___ftadd& (0+255),b
  7597  0010A2  D007               	goto	l3836
  7598  0010A4                     l1030:
  7599                           
  7600                           ; BSR set to: 0
  7601  0010A4  C084  F081         	movff	___ftadd@f2,?___ftadd
  7602  0010A8  C085  F082         	movff	___ftadd@f2+1,?___ftadd+1
  7603  0010AC  C086  F083         	movff	___ftadd@f2+2,?___ftadd+2
  7604  0010B0  D103               	goto	l1031
  7605  0010B2                     l3836:
  7606                           
  7607                           ; BSR set to: 0
  7608  0010B2  0100               	movlb	0	; () banked
  7609  0010B4  518B               	movf	___ftadd@exp2& (0+255),w,b
  7610  0010B6  0100               	movlb	0	; () banked
  7611  0010B8  B4D8               	btfsc	status,2,c
  7612  0010BA  D011               	goto	l1034
  7613                           
  7614                           ; BSR set to: 0
  7615  0010BC  0100               	movlb	0	; () banked
  7616  0010BE  518C               	movf	___ftadd@exp1& (0+255),w,b
  7617  0010C0  0100               	movlb	0	; () banked
  7618  0010C2  5D8B               	subwf	___ftadd@exp2& (0+255),w,b
  7619  0010C4  B0D8               	btfsc	status,0,c
  7620  0010C6  D012               	goto	l3842
  7621                           
  7622                           ; BSR set to: 0
  7623  0010C8  0100               	movlb	0	; () banked
  7624  0010CA  518B               	movf	___ftadd@exp2& (0+255),w,b
  7625  0010CC  0800               	sublw	0
  7626  0010CE  0100               	movlb	0	; () banked
  7627  0010D0  258C               	addwf	___ftadd@exp1& (0+255),w,b
  7628  0010D2  0100               	movlb	0	; () banked
  7629  0010D4  6F87               	movwf	??___ftadd& (0+255),b
  7630  0010D6  0E18               	movlw	24
  7631  0010D8  0100               	movlb	0	; () banked
  7632  0010DA  6587               	cpfsgt	??___ftadd& (0+255),b
  7633  0010DC  D007               	goto	l3842
  7634  0010DE                     l1034:
  7635                           
  7636                           ; BSR set to: 0
  7637  0010DE  C081  F081         	movff	___ftadd@f1,?___ftadd
  7638  0010E2  C082  F082         	movff	___ftadd@f1+1,?___ftadd+1
  7639  0010E6  C083  F083         	movff	___ftadd@f1+2,?___ftadd+2
  7640  0010EA  D0E6               	goto	l1031
  7641  0010EC                     l3842:
  7642                           
  7643                           ; BSR set to: 0
  7644  0010EC  0E06               	movlw	6
  7645  0010EE  0100               	movlb	0	; () banked
  7646  0010F0  6F8A               	movwf	___ftadd@sign& (0+255),b
  7647                           
  7648                           ; BSR set to: 0
  7649  0010F2  0100               	movlb	0	; () banked
  7650  0010F4  AF83               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7651  0010F6  D003               	goto	l3848
  7652                           
  7653                           ; BSR set to: 0
  7654  0010F8  0100               	movlb	0	; () banked
  7655  0010FA  8F8A               	bsf	___ftadd@sign& (0+255),7,b
  7656  0010FC  D000               	goto	l3848
  7657  0010FE                     l3848:
  7658                           
  7659                           ; BSR set to: 0
  7660  0010FE  0100               	movlb	0	; () banked
  7661  001100  AF86               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7662  001102  D002               	goto	l1036
  7663                           
  7664                           ; BSR set to: 0
  7665  001104  0100               	movlb	0	; () banked
  7666  001106  8D8A               	bsf	___ftadd@sign& (0+255),6,b
  7667  001108                     l1036:
  7668                           
  7669                           ; BSR set to: 0
  7670  001108  0100               	movlb	0	; () banked
  7671  00110A  8F82               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7672                           
  7673                           ; BSR set to: 0
  7674  00110C  0EFF               	movlw	255
  7675  00110E  0100               	movlb	0	; () banked
  7676  001110  1781               	andwf	___ftadd@f1& (0+255),f,b
  7677  001112  0EFF               	movlw	255
  7678  001114  0100               	movlb	0	; () banked
  7679  001116  1782               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7680  001118  0E00               	movlw	0
  7681  00111A  0100               	movlb	0	; () banked
  7682  00111C  1783               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7683  00111E  0100               	movlb	0	; () banked
  7684  001120  8F85               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7685                           
  7686                           ; BSR set to: 0
  7687  001122  0EFF               	movlw	255
  7688  001124  0100               	movlb	0	; () banked
  7689  001126  1784               	andwf	___ftadd@f2& (0+255),f,b
  7690  001128  0EFF               	movlw	255
  7691  00112A  0100               	movlb	0	; () banked
  7692  00112C  1785               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7693  00112E  0E00               	movlw	0
  7694  001130  0100               	movlb	0	; () banked
  7695  001132  1786               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7696                           
  7697                           ; BSR set to: 0
  7698  001134  0100               	movlb	0	; () banked
  7699  001136  518B               	movf	___ftadd@exp2& (0+255),w,b
  7700  001138  0100               	movlb	0	; () banked
  7701  00113A  5D8C               	subwf	___ftadd@exp1& (0+255),w,b
  7702  00113C  B0D8               	btfsc	status,0,c
  7703  00113E  D028               	goto	l3868
  7704  001140                     l3858:
  7705                           
  7706                           ; BSR set to: 0
  7707  001140  0100               	movlb	0	; () banked
  7708  001142  90D8               	bcf	status,0,c
  7709  001144  3784               	rlcf	___ftadd@f2& (0+255),f,b
  7710  001146  3785               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7711  001148  3786               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7712  00114A  0100               	movlb	0	; () banked
  7713  00114C  078B               	decf	___ftadd@exp2& (0+255),f,b
  7714                           
  7715                           ; BSR set to: 0
  7716  00114E  0100               	movlb	0	; () banked
  7717  001150  518C               	movf	___ftadd@exp1& (0+255),w,b
  7718  001152  0100               	movlb	0	; () banked
  7719  001154  198B               	xorwf	___ftadd@exp2& (0+255),w,b
  7720  001156  B4D8               	btfsc	status,2,c
  7721  001158  D013               	goto	l3866
  7722                           
  7723                           ; BSR set to: 0
  7724  00115A  0100               	movlb	0	; () banked
  7725  00115C  078A               	decf	___ftadd@sign& (0+255),f,b
  7726  00115E  C08A  F087         	movff	___ftadd@sign,??___ftadd
  7727  001162  0E07               	movlw	7
  7728  001164  0100               	movlb	0	; () banked
  7729  001166  1787               	andwf	??___ftadd& (0+255),f,b
  7730  001168  B4D8               	btfsc	status,2,c
  7731  00116A  D00A               	goto	l3866
  7732  00116C  D7E9               	goto	l3858
  7733                           
  7734                           ; BSR set to: 0
  7735                           
  7736                           ; BSR set to: 0
  7737  00116E  D008               	goto	l3866
  7738  001170                     l3864:
  7739                           
  7740                           ; BSR set to: 0
  7741  001170  0100               	movlb	0	; () banked
  7742  001172  90D8               	bcf	status,0,c
  7743  001174  3383               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7744  001176  3382               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7745  001178  3381               	rrcf	___ftadd@f1& (0+255),f,b
  7746  00117A  0100               	movlb	0	; () banked
  7747  00117C  2B8C               	incf	___ftadd@exp1& (0+255),f,b
  7748  00117E  D000               	goto	l3866
  7749  001180                     l3866:
  7750                           
  7751                           ; BSR set to: 0
  7752  001180  0100               	movlb	0	; () banked
  7753  001182  518B               	movf	___ftadd@exp2& (0+255),w,b
  7754  001184  0100               	movlb	0	; () banked
  7755  001186  198C               	xorwf	___ftadd@exp1& (0+255),w,b
  7756  001188  B4D8               	btfsc	status,2,c
  7757  00118A  D030               	goto	l1045
  7758  00118C  D7F1               	goto	l3864
  7759                           
  7760                           ; BSR set to: 0
  7761  00118E  D02E               	goto	l1045
  7762  001190                     l3868:
  7763                           
  7764                           ; BSR set to: 0
  7765  001190  0100               	movlb	0	; () banked
  7766  001192  518C               	movf	___ftadd@exp1& (0+255),w,b
  7767  001194  0100               	movlb	0	; () banked
  7768  001196  5D8B               	subwf	___ftadd@exp2& (0+255),w,b
  7769  001198  B0D8               	btfsc	status,0,c
  7770  00119A  D028               	goto	l1045
  7771  00119C                     l3870:
  7772                           
  7773                           ; BSR set to: 0
  7774  00119C  0100               	movlb	0	; () banked
  7775  00119E  90D8               	bcf	status,0,c
  7776  0011A0  3781               	rlcf	___ftadd@f1& (0+255),f,b
  7777  0011A2  3782               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7778  0011A4  3783               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7779  0011A6  0100               	movlb	0	; () banked
  7780  0011A8  078C               	decf	___ftadd@exp1& (0+255),f,b
  7781                           
  7782                           ; BSR set to: 0
  7783  0011AA  0100               	movlb	0	; () banked
  7784  0011AC  518C               	movf	___ftadd@exp1& (0+255),w,b
  7785  0011AE  0100               	movlb	0	; () banked
  7786  0011B0  198B               	xorwf	___ftadd@exp2& (0+255),w,b
  7787  0011B2  B4D8               	btfsc	status,2,c
  7788  0011B4  D013               	goto	l3878
  7789                           
  7790                           ; BSR set to: 0
  7791  0011B6  0100               	movlb	0	; () banked
  7792  0011B8  078A               	decf	___ftadd@sign& (0+255),f,b
  7793  0011BA  C08A  F087         	movff	___ftadd@sign,??___ftadd
  7794  0011BE  0E07               	movlw	7
  7795  0011C0  0100               	movlb	0	; () banked
  7796  0011C2  1787               	andwf	??___ftadd& (0+255),f,b
  7797  0011C4  B4D8               	btfsc	status,2,c
  7798  0011C6  D00A               	goto	l3878
  7799  0011C8  D7E9               	goto	l3870
  7800                           
  7801                           ; BSR set to: 0
  7802                           
  7803                           ; BSR set to: 0
  7804  0011CA  D008               	goto	l3878
  7805  0011CC                     l3876:
  7806                           
  7807                           ; BSR set to: 0
  7808  0011CC  0100               	movlb	0	; () banked
  7809  0011CE  90D8               	bcf	status,0,c
  7810  0011D0  3386               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7811  0011D2  3385               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7812  0011D4  3384               	rrcf	___ftadd@f2& (0+255),f,b
  7813  0011D6  0100               	movlb	0	; () banked
  7814  0011D8  2B8B               	incf	___ftadd@exp2& (0+255),f,b
  7815  0011DA  D000               	goto	l3878
  7816  0011DC                     l3878:
  7817                           
  7818                           ; BSR set to: 0
  7819  0011DC  0100               	movlb	0	; () banked
  7820  0011DE  518B               	movf	___ftadd@exp2& (0+255),w,b
  7821  0011E0  0100               	movlb	0	; () banked
  7822  0011E2  198C               	xorwf	___ftadd@exp1& (0+255),w,b
  7823  0011E4  B4D8               	btfsc	status,2,c
  7824  0011E6  D002               	goto	l1045
  7825  0011E8  D7F1               	goto	l3876
  7826                           
  7827                           ; BSR set to: 0
  7828  0011EA  D000               	goto	l1045
  7829  0011EC                     l1045:
  7830                           
  7831                           ; BSR set to: 0
  7832  0011EC  0100               	movlb	0	; () banked
  7833  0011EE  AF8A               	btfss	___ftadd@sign& (0+255),7,b
  7834  0011F0  D012               	goto	l1054
  7835                           
  7836                           ; BSR set to: 0
  7837  0011F2  0EFF               	movlw	255
  7838  0011F4  0100               	movlb	0	; () banked
  7839  0011F6  1B81               	xorwf	___ftadd@f1& (0+255),f,b
  7840  0011F8  0EFF               	movlw	255
  7841  0011FA  0100               	movlb	0	; () banked
  7842  0011FC  1B82               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7843  0011FE  0EFF               	movlw	255
  7844  001200  0100               	movlb	0	; () banked
  7845  001202  1B83               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7846  001204  0E01               	movlw	1
  7847  001206  0100               	movlb	0	; () banked
  7848  001208  2781               	addwf	___ftadd@f1& (0+255),f,b
  7849  00120A  0E00               	movlw	0
  7850  00120C  0100               	movlb	0	; () banked
  7851  00120E  2382               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7852  001210  0E00               	movlw	0
  7853  001212  0100               	movlb	0	; () banked
  7854  001214  2383               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7855  001216                     l1054:
  7856                           
  7857                           ; BSR set to: 0
  7858  001216  0100               	movlb	0	; () banked
  7859  001218  AD8A               	btfss	___ftadd@sign& (0+255),6,b
  7860  00121A  D013               	goto	l3884
  7861                           
  7862                           ; BSR set to: 0
  7863  00121C  0EFF               	movlw	255
  7864  00121E  0100               	movlb	0	; () banked
  7865  001220  1B84               	xorwf	___ftadd@f2& (0+255),f,b
  7866  001222  0EFF               	movlw	255
  7867  001224  0100               	movlb	0	; () banked
  7868  001226  1B85               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7869  001228  0EFF               	movlw	255
  7870  00122A  0100               	movlb	0	; () banked
  7871  00122C  1B86               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7872  00122E  0E01               	movlw	1
  7873  001230  0100               	movlb	0	; () banked
  7874  001232  2784               	addwf	___ftadd@f2& (0+255),f,b
  7875  001234  0E00               	movlw	0
  7876  001236  0100               	movlb	0	; () banked
  7877  001238  2385               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7878  00123A  0E00               	movlw	0
  7879  00123C  0100               	movlb	0	; () banked
  7880  00123E  2386               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7881  001240  D000               	goto	l3884
  7882  001242                     l3884:
  7883                           
  7884                           ; BSR set to: 0
  7885  001242  0E00               	movlw	0
  7886  001244  0100               	movlb	0	; () banked
  7887  001246  6F8A               	movwf	___ftadd@sign& (0+255),b
  7888                           
  7889                           ; BSR set to: 0
  7890  001248  0100               	movlb	0	; () banked
  7891  00124A  5181               	movf	___ftadd@f1& (0+255),w,b
  7892  00124C  0100               	movlb	0	; () banked
  7893  00124E  2784               	addwf	___ftadd@f2& (0+255),f,b
  7894  001250  0100               	movlb	0	; () banked
  7895  001252  5182               	movf	(___ftadd@f1+1)& (0+255),w,b
  7896  001254  0100               	movlb	0	; () banked
  7897  001256  2385               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7898  001258  0100               	movlb	0	; () banked
  7899  00125A  5183               	movf	(___ftadd@f1+2)& (0+255),w,b
  7900  00125C  0100               	movlb	0	; () banked
  7901  00125E  2386               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904  001260  0100               	movlb	0	; () banked
  7905  001262  AF86               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7906  001264  D016               	goto	l3894
  7907                           
  7908                           ; BSR set to: 0
  7909  001266  0EFF               	movlw	255
  7910  001268  0100               	movlb	0	; () banked
  7911  00126A  1B84               	xorwf	___ftadd@f2& (0+255),f,b
  7912  00126C  0EFF               	movlw	255
  7913  00126E  0100               	movlb	0	; () banked
  7914  001270  1B85               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7915  001272  0EFF               	movlw	255
  7916  001274  0100               	movlb	0	; () banked
  7917  001276  1B86               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7918  001278  0E01               	movlw	1
  7919  00127A  0100               	movlb	0	; () banked
  7920  00127C  2784               	addwf	___ftadd@f2& (0+255),f,b
  7921  00127E  0E00               	movlw	0
  7922  001280  0100               	movlb	0	; () banked
  7923  001282  2385               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7924  001284  0E00               	movlw	0
  7925  001286  0100               	movlb	0	; () banked
  7926  001288  2386               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7927                           
  7928                           ; BSR set to: 0
  7929  00128A  0E01               	movlw	1
  7930  00128C  0100               	movlb	0	; () banked
  7931  00128E  6F8A               	movwf	___ftadd@sign& (0+255),b
  7932  001290  D000               	goto	l3894
  7933  001292                     l3894:
  7934                           
  7935                           ; BSR set to: 0
  7936  001292  C084  F03E         	movff	___ftadd@f2,___ftpack@arg
  7937  001296  C085  F03F         	movff	___ftadd@f2+1,___ftpack@arg+1
  7938  00129A  C086  F040         	movff	___ftadd@f2+2,___ftpack@arg+2
  7939  00129E  C08C  F041         	movff	___ftadd@exp1,___ftpack@exp
  7940  0012A2  C08A  F042         	movff	___ftadd@sign,___ftpack@sign
  7941  0012A6  ECB6  F011         	call	___ftpack	;wreg free
  7942  0012AA  C03E  F081         	movff	?___ftpack,?___ftadd
  7943  0012AE  C03F  F082         	movff	?___ftpack+1,?___ftadd+1
  7944  0012B2  C040  F083         	movff	?___ftpack+2,?___ftadd+2
  7945  0012B6  D000               	goto	l1031
  7946  0012B8                     l1031:
  7947  0012B8  0012               	return		;funcret
  7948  0012BA                     __end_of___ftadd:
  7949                           	opt stack 0
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           intcon	equ	0xFF2
  7957                           intcon2	equ	0xFF1
  7958                           postinc0	equ	0xFEE
  7959                           wreg	equ	0xFE8
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           postdec2	equ	0xFDD
  7963                           fsr2h	equ	0xFDA
  7964                           fsr2l	equ	0xFD9
  7965                           status	equ	0xFD8
  7966                           
  7967 ;; *************** function ___ftneg *****************
  7968 ;; Defined at:
  7969 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  f1              3   25[COMRAM] float 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  3   25[COMRAM] float 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2, status,0
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;Total ram usage:        3 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    6
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_pow
  7994 ;;		_exp
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text67
  7999  002CF2                     __ptext67:
  8000                           	opt stack 0
  8001  002CF2                     ___ftneg:
  8002                           	opt stack 21
  8003                           
  8004                           ;incstack = 0
  8005  002CF2  503E               	movf	___ftneg@f1,w,c
  8006  002CF4  103F               	iorwf	___ftneg@f1+1,w,c
  8007  002CF6  1040               	iorwf	___ftneg@f1+2,w,c
  8008  002CF8  B4D8               	btfsc	status,2,c
  8009  002CFA  D006               	goto	l1087
  8010  002CFC  0E00               	movlw	0
  8011  002CFE  1A3E               	xorwf	___ftneg@f1,f,c
  8012  002D00  0E00               	movlw	0
  8013  002D02  1A3F               	xorwf	___ftneg@f1+1,f,c
  8014  002D04  0E80               	movlw	128
  8015  002D06  1A40               	xorwf	___ftneg@f1+2,f,c
  8016  002D08                     l1087:
  8017  002D08  C03E  F03E         	movff	___ftneg@f1,?___ftneg
  8018  002D0C  C03F  F03F         	movff	___ftneg@f1+1,?___ftneg+1
  8019  002D10  C040  F040         	movff	___ftneg@f1+2,?___ftneg+2
  8020  002D14  0012               	return		;funcret
  8021  002D16                     __end_of___ftneg:
  8022                           	opt stack 0
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           intcon	equ	0xFF2
  8030                           intcon2	equ	0xFF1
  8031                           postinc0	equ	0xFEE
  8032                           wreg	equ	0xFE8
  8033                           indf2	equ	0xFDF
  8034                           postinc2	equ	0xFDE
  8035                           postdec2	equ	0xFDD
  8036                           fsr2h	equ	0xFDA
  8037                           fsr2l	equ	0xFD9
  8038                           status	equ	0xFD8
  8039                           
  8040 ;; *************** function ___ftdiv *****************
  8041 ;; Defined at:
  8042 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  f1              3   14[BANK0 ] float 
  8045 ;;  f2              3   17[BANK0 ] float 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  f3              3   24[BANK0 ] float 
  8048 ;;  sign            1   28[BANK0 ] unsigned char 
  8049 ;;  exp             1   27[BANK0 ] unsigned char 
  8050 ;;  cntr            1   23[BANK0 ] unsigned char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  3   14[BANK0 ] float 
  8053 ;; Registers used:
  8054 ;;		wreg, status,2, status,0, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;Total ram usage:       15 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:    7
  8067 ;; This function calls:
  8068 ;;		___ftpack
  8069 ;; This function is called by:
  8070 ;;		_exp
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text68
  8075  001A24                     __ptext68:
  8076                           	opt stack 0
  8077  001A24                     ___ftdiv:
  8078                           	opt stack 20
  8079                           
  8080                           ;incstack = 0
  8081  001A24  C070  F074         	movff	___ftdiv@f1+2,??___ftdiv
  8082  001A28  0100               	movlb	0	; () banked
  8083  001A2A  6B75               	clrf	(??___ftdiv+1)& (0+255),b
  8084  001A2C  6B76               	clrf	(??___ftdiv+2)& (0+255),b
  8085  001A2E  0100               	movlb	0	; () banked
  8086  001A30  356F               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8087  001A32  0100               	movlb	0	; () banked
  8088  001A34  3774               	rlcf	??___ftdiv& (0+255),f,b
  8089  001A36  E301               	bnc	u3351
  8090  001A38  8175               	bsf	(??___ftdiv+1)& (0+255),0,b
  8091  001A3A                     u3351:
  8092  001A3A  0100               	movlb	0	; () banked
  8093  001A3C  5174               	movf	??___ftdiv& (0+255),w,b
  8094  001A3E  0100               	movlb	0	; () banked
  8095  001A40  6F7B               	movwf	___ftdiv@exp& (0+255),b
  8096  001A42  0100               	movlb	0	; () banked
  8097  001A44  517B               	movf	___ftdiv@exp& (0+255),w,b
  8098  001A46  A4D8               	btfss	status,2,c
  8099  001A48  D002               	goto	l3970
  8100  001A4A  D014               	goto	l3972
  8101                           
  8102                           ; BSR set to: 0
  8103                           
  8104                           ; BSR set to: 0
  8105  001A4C  D08B               	goto	l1062
  8106  001A4E                     l3970:
  8107                           
  8108                           ; BSR set to: 0
  8109  001A4E  C073  F074         	movff	___ftdiv@f2+2,??___ftdiv
  8110  001A52  0100               	movlb	0	; () banked
  8111  001A54  6B75               	clrf	(??___ftdiv+1)& (0+255),b
  8112  001A56  6B76               	clrf	(??___ftdiv+2)& (0+255),b
  8113  001A58  0100               	movlb	0	; () banked
  8114  001A5A  3572               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8115  001A5C  0100               	movlb	0	; () banked
  8116  001A5E  3774               	rlcf	??___ftdiv& (0+255),f,b
  8117  001A60  E301               	bnc	u3371
  8118  001A62  8175               	bsf	(??___ftdiv+1)& (0+255),0,b
  8119  001A64                     u3371:
  8120  001A64  0100               	movlb	0	; () banked
  8121  001A66  5174               	movf	??___ftdiv& (0+255),w,b
  8122  001A68  0100               	movlb	0	; () banked
  8123  001A6A  6F7C               	movwf	___ftdiv@sign& (0+255),b
  8124  001A6C  0100               	movlb	0	; () banked
  8125  001A6E  517C               	movf	___ftdiv@sign& (0+255),w,b
  8126  001A70  A4D8               	btfss	status,2,c
  8127  001A72  D00A               	goto	l3976
  8128  001A74                     l3972:
  8129                           
  8130                           ; BSR set to: 0
  8131  001A74  0E00               	movlw	0
  8132  001A76  0100               	movlb	0	; () banked
  8133  001A78  6F6E               	movwf	?___ftdiv& (0+255),b
  8134  001A7A  0E00               	movlw	0
  8135  001A7C  0100               	movlb	0	; () banked
  8136  001A7E  6F6F               	movwf	(?___ftdiv+1)& (0+255),b
  8137  001A80  0E00               	movlw	0
  8138  001A82  0100               	movlb	0	; () banked
  8139  001A84  6F70               	movwf	(?___ftdiv+2)& (0+255),b
  8140                           
  8141                           ; BSR set to: 0
  8142  001A86  D06E               	goto	l1062
  8143  001A88                     l3976:
  8144                           
  8145                           ; BSR set to: 0
  8146  001A88  0E00               	movlw	0
  8147  001A8A  0100               	movlb	0	; () banked
  8148  001A8C  6F78               	movwf	___ftdiv@f3& (0+255),b
  8149  001A8E  0E00               	movlw	0
  8150  001A90  0100               	movlb	0	; () banked
  8151  001A92  6F79               	movwf	(___ftdiv@f3+1)& (0+255),b
  8152  001A94  0E00               	movlw	0
  8153  001A96  0100               	movlb	0	; () banked
  8154  001A98  6F7A               	movwf	(___ftdiv@f3+2)& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157  001A9A  0100               	movlb	0	; () banked
  8158  001A9C  517C               	movf	___ftdiv@sign& (0+255),w,b
  8159  001A9E  0F89               	addlw	137
  8160  001AA0  0100               	movlb	0	; () banked
  8161  001AA2  5F7B               	subwf	___ftdiv@exp& (0+255),f,b
  8162                           
  8163                           ; BSR set to: 0
  8164  001AA4  C070  F07C         	movff	___ftdiv@f1+2,___ftdiv@sign
  8165                           
  8166                           ; BSR set to: 0
  8167  001AA8  0100               	movlb	0	; () banked
  8168  001AAA  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8169  001AAC  0100               	movlb	0	; () banked
  8170  001AAE  1B7C               	xorwf	___ftdiv@sign& (0+255),f,b
  8171                           
  8172                           ; BSR set to: 0
  8173  001AB0  0E80               	movlw	128
  8174  001AB2  0100               	movlb	0	; () banked
  8175  001AB4  177C               	andwf	___ftdiv@sign& (0+255),f,b
  8176                           
  8177                           ; BSR set to: 0
  8178  001AB6  0100               	movlb	0	; () banked
  8179  001AB8  8F6F               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8180                           
  8181                           ; BSR set to: 0
  8182  001ABA  0EFF               	movlw	255
  8183  001ABC  0100               	movlb	0	; () banked
  8184  001ABE  176E               	andwf	___ftdiv@f1& (0+255),f,b
  8185  001AC0  0EFF               	movlw	255
  8186  001AC2  0100               	movlb	0	; () banked
  8187  001AC4  176F               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8188  001AC6  0E00               	movlw	0
  8189  001AC8  0100               	movlb	0	; () banked
  8190  001ACA  1770               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8191                           
  8192                           ; BSR set to: 0
  8193  001ACC  0100               	movlb	0	; () banked
  8194  001ACE  8F72               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8195                           
  8196                           ; BSR set to: 0
  8197  001AD0  0EFF               	movlw	255
  8198  001AD2  0100               	movlb	0	; () banked
  8199  001AD4  1771               	andwf	___ftdiv@f2& (0+255),f,b
  8200  001AD6  0EFF               	movlw	255
  8201  001AD8  0100               	movlb	0	; () banked
  8202  001ADA  1772               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8203  001ADC  0E00               	movlw	0
  8204  001ADE  0100               	movlb	0	; () banked
  8205  001AE0  1773               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8206                           
  8207                           ; BSR set to: 0
  8208  001AE2  0E18               	movlw	24
  8209  001AE4  0100               	movlb	0	; () banked
  8210  001AE6  6F77               	movwf	___ftdiv@cntr& (0+255),b
  8211  001AE8  D000               	goto	l3996
  8212  001AEA                     l3996:
  8213                           
  8214                           ; BSR set to: 0
  8215  001AEA  0100               	movlb	0	; () banked
  8216  001AEC  90D8               	bcf	status,0,c
  8217  001AEE  3778               	rlcf	___ftdiv@f3& (0+255),f,b
  8218  001AF0  3779               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8219  001AF2  377A               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8220                           
  8221                           ; BSR set to: 0
  8222  001AF4  0100               	movlb	0	; () banked
  8223  001AF6  5171               	movf	___ftdiv@f2& (0+255),w,b
  8224  001AF8  0100               	movlb	0	; () banked
  8225  001AFA  5D6E               	subwf	___ftdiv@f1& (0+255),w,b
  8226  001AFC  0100               	movlb	0	; () banked
  8227  001AFE  5172               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8228  001B00  0100               	movlb	0	; () banked
  8229  001B02  596F               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8230  001B04  0100               	movlb	0	; () banked
  8231  001B06  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8232  001B08  0100               	movlb	0	; () banked
  8233  001B0A  5970               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8234  001B0C  A0D8               	btfss	status,0,c
  8235  001B0E  D00E               	goto	l1065
  8236                           
  8237                           ; BSR set to: 0
  8238  001B10  0100               	movlb	0	; () banked
  8239  001B12  5171               	movf	___ftdiv@f2& (0+255),w,b
  8240  001B14  0100               	movlb	0	; () banked
  8241  001B16  5F6E               	subwf	___ftdiv@f1& (0+255),f,b
  8242  001B18  0100               	movlb	0	; () banked
  8243  001B1A  5172               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8244  001B1C  0100               	movlb	0	; () banked
  8245  001B1E  5B6F               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8246  001B20  0100               	movlb	0	; () banked
  8247  001B22  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8248  001B24  0100               	movlb	0	; () banked
  8249  001B26  5B70               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8250                           
  8251                           ; BSR set to: 0
  8252  001B28  0100               	movlb	0	; () banked
  8253  001B2A  8178               	bsf	___ftdiv@f3& (0+255),0,b
  8254  001B2C                     l1065:
  8255                           
  8256                           ; BSR set to: 0
  8257  001B2C  0100               	movlb	0	; () banked
  8258  001B2E  90D8               	bcf	status,0,c
  8259  001B30  376E               	rlcf	___ftdiv@f1& (0+255),f,b
  8260  001B32  376F               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8261  001B34  3770               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8262                           
  8263                           ; BSR set to: 0
  8264  001B36  0100               	movlb	0	; () banked
  8265  001B38  2F77               	decfsz	___ftdiv@cntr& (0+255),f,b
  8266  001B3A  D7D7               	goto	l3996
  8267  001B3C  D000               	goto	l4006
  8268  001B3E                     l4006:
  8269                           
  8270                           ; BSR set to: 0
  8271  001B3E  C078  F03E         	movff	___ftdiv@f3,___ftpack@arg
  8272  001B42  C079  F03F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8273  001B46  C07A  F040         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8274  001B4A  C07B  F041         	movff	___ftdiv@exp,___ftpack@exp
  8275  001B4E  C07C  F042         	movff	___ftdiv@sign,___ftpack@sign
  8276  001B52  ECB6  F011         	call	___ftpack	;wreg free
  8277  001B56  C03E  F06E         	movff	?___ftpack,?___ftdiv
  8278  001B5A  C03F  F06F         	movff	?___ftpack+1,?___ftdiv+1
  8279  001B5E  C040  F070         	movff	?___ftpack+2,?___ftdiv+2
  8280  001B62  D000               	goto	l1062
  8281  001B64                     l1062:
  8282  001B64  0012               	return		;funcret
  8283  001B66                     __end_of___ftdiv:
  8284                           	opt stack 0
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           intcon2	equ	0xFF1
  8293                           postinc0	equ	0xFEE
  8294                           wreg	equ	0xFE8
  8295                           indf2	equ	0xFDF
  8296                           postinc2	equ	0xFDE
  8297                           postdec2	equ	0xFDD
  8298                           fsr2h	equ	0xFDA
  8299                           fsr2l	equ	0xFD9
  8300                           status	equ	0xFD8
  8301                           
  8302 ;; *************** function ___awtoft *****************
  8303 ;; Defined at:
  8304 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  c               2   14[BANK0 ] int 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  sign            1   17[BANK0 ] unsigned char 
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  3   14[BANK0 ] float 
  8311 ;; Registers used:
  8312 ;;		wreg, status,2, status,0, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8318 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;Total ram usage:        4 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:    7
  8325 ;; This function calls:
  8326 ;;		___ftpack
  8327 ;; This function is called by:
  8328 ;;		_exp
  8329 ;;		_log
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text69
  8334  002AB4                     __ptext69:
  8335                           	opt stack 0
  8336  002AB4                     ___awtoft:
  8337                           	opt stack 20
  8338                           
  8339                           ;incstack = 0
  8340  002AB4  0E00               	movlw	0
  8341  002AB6  0100               	movlb	0	; () banked
  8342  002AB8  6F71               	movwf	___awtoft@sign& (0+255),b
  8343                           
  8344                           ; BSR set to: 0
  8345  002ABA  0100               	movlb	0	; () banked
  8346  002ABC  AF6F               	btfss	(___awtoft@c+1)& (0+255),7,b
  8347  002ABE  D009               	goto	l4026
  8348                           
  8349                           ; BSR set to: 0
  8350  002AC0  0100               	movlb	0	; () banked
  8351  002AC2  6D6E               	negf	___awtoft@c& (0+255),b
  8352  002AC4  1F6F               	comf	(___awtoft@c+1)& (0+255),f,b
  8353  002AC6  B0D8               	btfsc	status,0,c
  8354  002AC8  2B6F               	incf	(___awtoft@c+1)& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 0
  8357  002ACA  0E01               	movlw	1
  8358  002ACC  0100               	movlb	0	; () banked
  8359  002ACE  6F71               	movwf	___awtoft@sign& (0+255),b
  8360  002AD0  D000               	goto	l4026
  8361  002AD2                     l4026:
  8362                           
  8363                           ; BSR set to: 0
  8364  002AD2  C06E  F03E         	movff	___awtoft@c,___ftpack@arg
  8365  002AD6  C06F  F03F         	movff	___awtoft@c+1,___ftpack@arg+1
  8366  002ADA  6A40               	clrf	___ftpack@arg+2,c
  8367  002ADC  0E8E               	movlw	142
  8368  002ADE  6E41               	movwf	___ftpack@exp,c
  8369  002AE0  C071  F042         	movff	___awtoft@sign,___ftpack@sign
  8370  002AE4  ECB6  F011         	call	___ftpack	;wreg free
  8371  002AE8  C03E  F06E         	movff	?___ftpack,?___awtoft
  8372  002AEC  C03F  F06F         	movff	?___ftpack+1,?___awtoft+1
  8373  002AF0  C040  F070         	movff	?___ftpack+2,?___awtoft+2
  8374  002AF4  D000               	goto	l886
  8375  002AF6                     l886:
  8376  002AF6  0012               	return		;funcret
  8377  002AF8                     __end_of___awtoft:
  8378                           	opt stack 0
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           intcon2	equ	0xFF1
  8387                           postinc0	equ	0xFEE
  8388                           wreg	equ	0xFE8
  8389                           indf2	equ	0xFDF
  8390                           postinc2	equ	0xFDE
  8391                           postdec2	equ	0xFDD
  8392                           fsr2h	equ	0xFDA
  8393                           fsr2l	equ	0xFD9
  8394                           status	equ	0xFD8
  8395                           
  8396 ;; *************** function ___lltoft *****************
  8397 ;; Defined at:
  8398 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  c               4   14[BANK0 ] unsigned long 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  exp             1   22[BANK0 ] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  3   14[BANK0 ] float 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8416 ;;Total ram usage:        9 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    7
  8419 ;; This function calls:
  8420 ;;		___ftpack
  8421 ;; This function is called by:
  8422 ;;		_pow
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text70
  8427  0027FA                     __ptext70:
  8428                           	opt stack 0
  8429  0027FA                     ___lltoft:
  8430                           	opt stack 21
  8431                           
  8432                           ;incstack = 0
  8433  0027FA  0E8E               	movlw	142
  8434  0027FC  0100               	movlb	0	; () banked
  8435  0027FE  6F76               	movwf	___lltoft@exp& (0+255),b
  8436  002800  D009               	goto	l4064
  8437  002802                     l4062:
  8438                           
  8439                           ; BSR set to: 0
  8440  002802  0100               	movlb	0	; () banked
  8441  002804  90D8               	bcf	status,0,c
  8442  002806  3371               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8443  002808  3370               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8444  00280A  336F               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8445  00280C  336E               	rrcf	___lltoft@c& (0+255),f,b
  8446  00280E  0100               	movlb	0	; () banked
  8447  002810  2B76               	incf	___lltoft@exp& (0+255),f,b
  8448  002812  D000               	goto	l4064
  8449  002814                     l4064:
  8450                           
  8451                           ; BSR set to: 0
  8452  002814  0E00               	movlw	0
  8453  002816  0100               	movlb	0	; () banked
  8454  002818  156E               	andwf	___lltoft@c& (0+255),w,b
  8455  00281A  0100               	movlb	0	; () banked
  8456  00281C  6F72               	movwf	??___lltoft& (0+255),b
  8457  00281E  0E00               	movlw	0
  8458  002820  0100               	movlb	0	; () banked
  8459  002822  156F               	andwf	(___lltoft@c+1)& (0+255),w,b
  8460  002824  0100               	movlb	0	; () banked
  8461  002826  6F73               	movwf	(??___lltoft+1)& (0+255),b
  8462  002828  0E00               	movlw	0
  8463  00282A  0100               	movlb	0	; () banked
  8464  00282C  1570               	andwf	(___lltoft@c+2)& (0+255),w,b
  8465  00282E  0100               	movlb	0	; () banked
  8466  002830  6F74               	movwf	(??___lltoft+2)& (0+255),b
  8467  002832  0EFF               	movlw	255
  8468  002834  0100               	movlb	0	; () banked
  8469  002836  1571               	andwf	(___lltoft@c+3)& (0+255),w,b
  8470  002838  0100               	movlb	0	; () banked
  8471  00283A  6F75               	movwf	(??___lltoft+3)& (0+255),b
  8472  00283C  0100               	movlb	0	; () banked
  8473  00283E  5172               	movf	??___lltoft& (0+255),w,b
  8474  002840  0100               	movlb	0	; () banked
  8475  002842  1173               	iorwf	(??___lltoft+1)& (0+255),w,b
  8476  002844  0100               	movlb	0	; () banked
  8477  002846  1174               	iorwf	(??___lltoft+2)& (0+255),w,b
  8478  002848  0100               	movlb	0	; () banked
  8479  00284A  1175               	iorwf	(??___lltoft+3)& (0+255),w,b
  8480  00284C  A4D8               	btfss	status,2,c
  8481  00284E  D7D9               	goto	l4062
  8482                           
  8483                           ; BSR set to: 0
  8484                           
  8485                           ; BSR set to: 0
  8486  002850  C06E  F03E         	movff	___lltoft@c,___ftpack@arg
  8487  002854  C06F  F03F         	movff	___lltoft@c+1,___ftpack@arg+1
  8488  002858  C070  F040         	movff	___lltoft@c+2,___ftpack@arg+2
  8489  00285C  C076  F041         	movff	___lltoft@exp,___ftpack@exp
  8490  002860  0E00               	movlw	0
  8491  002862  6E42               	movwf	___ftpack@sign,c
  8492  002864  ECB6  F011         	call	___ftpack	;wreg free
  8493  002868  C03E  F06E         	movff	?___ftpack,?___lltoft
  8494  00286C  C03F  F06F         	movff	?___ftpack+1,?___lltoft+1
  8495  002870  C040  F070         	movff	?___ftpack+2,?___lltoft+2
  8496  002874  D000               	goto	l1167
  8497  002876                     l1167:
  8498  002876  0012               	return		;funcret
  8499  002878                     __end_of___lltoft:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           intcon2	equ	0xFF1
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           indf2	equ	0xFDF
  8512                           postinc2	equ	0xFDE
  8513                           postdec2	equ	0xFDD
  8514                           fsr2h	equ	0xFDA
  8515                           fsr2l	equ	0xFD9
  8516                           status	equ	0xFD8
  8517                           
  8518 ;; *************** function ___lbtoft *****************
  8519 ;; Defined at:
  8520 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  c               1    wreg     unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  c               1   17[BANK0 ] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  3   14[BANK0 ] float 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8534 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;Total ram usage:        4 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    7
  8541 ;; This function calls:
  8542 ;;		___ftpack
  8543 ;; This function is called by:
  8544 ;;		_CalculateSensorSums
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text71
  8549  002C30                     __ptext71:
  8550                           	opt stack 0
  8551  002C30                     ___lbtoft:
  8552                           	opt stack 22
  8553                           
  8554                           ;incstack = 0
  8555                           ;___lbtoft@c stored from wreg
  8556  002C30  0100               	movlb	0	; () banked
  8557  002C32  6F71               	movwf	___lbtoft@c& (0+255),b
  8558                           
  8559                           ; BSR set to: 0
  8560  002C34  0100               	movlb	0	; () banked
  8561  002C36  5171               	movf	___lbtoft@c& (0+255),w,b
  8562  002C38  6E3E               	movwf	___ftpack@arg,c
  8563  002C3A  6A3F               	clrf	___ftpack@arg+1,c
  8564  002C3C  6A40               	clrf	___ftpack@arg+2,c
  8565  002C3E  0E8E               	movlw	142
  8566  002C40  6E41               	movwf	___ftpack@exp,c
  8567  002C42  0E00               	movlw	0
  8568  002C44  6E42               	movwf	___ftpack@sign,c
  8569  002C46  ECB6  F011         	call	___ftpack	;wreg free
  8570  002C4A  C03E  F06E         	movff	?___ftpack,?___lbtoft
  8571  002C4E  C03F  F06F         	movff	?___ftpack+1,?___lbtoft+1
  8572  002C52  C040  F070         	movff	?___ftpack+2,?___lbtoft+2
  8573  002C56  D000               	goto	l1134
  8574  002C58                     l1134:
  8575  002C58  0012               	return		;funcret
  8576  002C5A                     __end_of___lbtoft:
  8577                           	opt stack 0
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           intcon2	equ	0xFF1
  8586                           postinc0	equ	0xFEE
  8587                           wreg	equ	0xFE8
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           fsr2h	equ	0xFDA
  8592                           fsr2l	equ	0xFD9
  8593                           status	equ	0xFD8
  8594                           
  8595 ;; *************** function ___ftpack *****************
  8596 ;; Defined at:
  8597 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  arg             3   25[COMRAM] unsigned um
  8600 ;;  exp             1   28[COMRAM] unsigned char 
  8601 ;;  sign            1   29[COMRAM] unsigned char 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  3   25[COMRAM] float 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8613 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;Total ram usage:        8 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    6
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		___altoft
  8624 ;;		___awtoft
  8625 ;;		___ftadd
  8626 ;;		___ftdiv
  8627 ;;		___ftmul
  8628 ;;		___lbtoft
  8629 ;;		___lltoft
  8630 ;;		___lwtoft
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text72
  8635  00236C                     __ptext72:
  8636                           	opt stack 0
  8637  00236C                     ___ftpack:
  8638                           	opt stack 19
  8639                           
  8640                           ;incstack = 0
  8641  00236C  5041               	movf	___ftpack@exp,w,c
  8642  00236E  B4D8               	btfsc	status,2,c
  8643  002370  D005               	goto	l3780
  8644  002372  503E               	movf	___ftpack@arg,w,c
  8645  002374  103F               	iorwf	___ftpack@arg+1,w,c
  8646  002376  1040               	iorwf	___ftpack@arg+2,w,c
  8647  002378  A4D8               	btfss	status,2,c
  8648  00237A  D00E               	goto	l3786
  8649  00237C                     l3780:
  8650  00237C  0E00               	movlw	0
  8651  00237E  6E3E               	movwf	?___ftpack,c
  8652  002380  0E00               	movlw	0
  8653  002382  6E3F               	movwf	?___ftpack+1,c
  8654  002384  0E00               	movlw	0
  8655  002386  6E40               	movwf	?___ftpack+2,c
  8656  002388  D053               	goto	l990
  8657  00238A  D006               	goto	l3786
  8658  00238C                     l3784:
  8659  00238C  2A41               	incf	___ftpack@exp,f,c
  8660  00238E  90D8               	bcf	status,0,c
  8661  002390  3240               	rrcf	___ftpack@arg+2,f,c
  8662  002392  323F               	rrcf	___ftpack@arg+1,f,c
  8663  002394  323E               	rrcf	___ftpack@arg,f,c
  8664  002396  D000               	goto	l3786
  8665  002398                     l3786:
  8666  002398  0E00               	movlw	0
  8667  00239A  143E               	andwf	___ftpack@arg,w,c
  8668  00239C  6E43               	movwf	??___ftpack& (0+255),c
  8669  00239E  0E00               	movlw	0
  8670  0023A0  143F               	andwf	___ftpack@arg+1,w,c
  8671  0023A2  6E44               	movwf	(??___ftpack+1)& (0+255),c
  8672  0023A4  0EFE               	movlw	254
  8673  0023A6  1440               	andwf	___ftpack@arg+2,w,c
  8674  0023A8  6E45               	movwf	(??___ftpack+2)& (0+255),c
  8675  0023AA  5043               	movf	??___ftpack,w,c
  8676  0023AC  1044               	iorwf	??___ftpack+1,w,c
  8677  0023AE  1045               	iorwf	??___ftpack+2,w,c
  8678  0023B0  B4D8               	btfsc	status,2,c
  8679  0023B2  D00E               	goto	l3792
  8680  0023B4  D7EB               	goto	l3784
  8681  0023B6  D00C               	goto	l3792
  8682  0023B8                     l3788:
  8683  0023B8  2A41               	incf	___ftpack@exp,f,c
  8684  0023BA  0E01               	movlw	1
  8685  0023BC  263E               	addwf	___ftpack@arg,f,c
  8686  0023BE  0E00               	movlw	0
  8687  0023C0  223F               	addwfc	___ftpack@arg+1,f,c
  8688  0023C2  0E00               	movlw	0
  8689  0023C4  2240               	addwfc	___ftpack@arg+2,f,c
  8690  0023C6  90D8               	bcf	status,0,c
  8691  0023C8  3240               	rrcf	___ftpack@arg+2,f,c
  8692  0023CA  323F               	rrcf	___ftpack@arg+1,f,c
  8693  0023CC  323E               	rrcf	___ftpack@arg,f,c
  8694  0023CE  D000               	goto	l3792
  8695  0023D0                     l3792:
  8696  0023D0  0E00               	movlw	0
  8697  0023D2  143E               	andwf	___ftpack@arg,w,c
  8698  0023D4  6E43               	movwf	??___ftpack& (0+255),c
  8699  0023D6  0E00               	movlw	0
  8700  0023D8  143F               	andwf	___ftpack@arg+1,w,c
  8701  0023DA  6E44               	movwf	(??___ftpack+1)& (0+255),c
  8702  0023DC  0EFF               	movlw	255
  8703  0023DE  1440               	andwf	___ftpack@arg+2,w,c
  8704  0023E0  6E45               	movwf	(??___ftpack+2)& (0+255),c
  8705  0023E2  5043               	movf	??___ftpack,w,c
  8706  0023E4  1044               	iorwf	??___ftpack+1,w,c
  8707  0023E6  1045               	iorwf	??___ftpack+2,w,c
  8708  0023E8  B4D8               	btfsc	status,2,c
  8709  0023EA  D008               	goto	l3796
  8710  0023EC  D7E5               	goto	l3788
  8711  0023EE  D006               	goto	l3796
  8712  0023F0                     l3794:
  8713  0023F0  0641               	decf	___ftpack@exp,f,c
  8714  0023F2  90D8               	bcf	status,0,c
  8715  0023F4  363E               	rlcf	___ftpack@arg,f,c
  8716  0023F6  363F               	rlcf	___ftpack@arg+1,f,c
  8717  0023F8  3640               	rlcf	___ftpack@arg+2,f,c
  8718  0023FA  D000               	goto	l3796
  8719  0023FC                     l3796:
  8720  0023FC  BE3F               	btfsc	___ftpack@arg+1,7,c
  8721  0023FE  D004               	goto	l1001
  8722  002400  0E02               	movlw	2
  8723  002402  6041               	cpfslt	___ftpack@exp,c
  8724  002404  D7F5               	goto	l3794
  8725  002406  D000               	goto	l1001
  8726  002408                     l1001:
  8727  002408  B041               	btfsc	___ftpack@exp,0,c
  8728  00240A  D002               	goto	l3802
  8729  00240C  9E3F               	bcf	___ftpack@arg+1,7,c
  8730  00240E  D000               	goto	l3802
  8731  002410                     l3802:
  8732  002410  90D8               	bcf	status,0,c
  8733  002412  3241               	rrcf	___ftpack@exp,f,c
  8734  002414  5041               	movf	___ftpack@exp,w,c
  8735  002416  1240               	iorwf	___ftpack@arg+2,f,c
  8736  002418  5042               	movf	___ftpack@sign,w,c
  8737  00241A  B4D8               	btfsc	status,2,c
  8738  00241C  D002               	goto	l3808
  8739  00241E  8E40               	bsf	___ftpack@arg+2,7,c
  8740  002420  D000               	goto	l3808
  8741  002422                     l3808:
  8742  002422  C03E  F03E         	movff	___ftpack@arg,?___ftpack
  8743  002426  C03F  F03F         	movff	___ftpack@arg+1,?___ftpack+1
  8744  00242A  C040  F040         	movff	___ftpack@arg+2,?___ftpack+2
  8745  00242E  D000               	goto	l990
  8746  002430                     l990:
  8747  002430  0012               	return		;funcret
  8748  002432                     __end_of___ftpack:
  8749                           	opt stack 0
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           intcon2	equ	0xFF1
  8758                           postinc0	equ	0xFEE
  8759                           wreg	equ	0xFE8
  8760                           indf2	equ	0xFDF
  8761                           postinc2	equ	0xFDE
  8762                           postdec2	equ	0xFDD
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767 ;; *************** function _CalculateSensorError *****************
  8768 ;; Defined at:
  8769 ;;		line 385 in file "FastBuggy17_Main_Code.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  sum             2   25[COMRAM] PTR const unsigned char 
  8772 ;;		 -> main@sensor_sum(1), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   25[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;Total ram usage:        2 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    6
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_main
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text73
  8799  0026C6                     __ptext73:
  8800                           	opt stack 0
  8801  0026C6                     _CalculateSensorError:
  8802                           	opt stack 24
  8803                           
  8804                           ;FastBuggy17_Main_Code.c: 387: switch(*sum) {
  8805                           
  8806                           ;incstack = 0
  8807  0026C6  D029               	goto	l3512
  8808  0026C8                     l3478:
  8809                           
  8810                           ;FastBuggy17_Main_Code.c: 389: return(64);
  8811  0026C8  0E00               	movlw	0
  8812  0026CA  6E3F               	movwf	?_CalculateSensorError+1,c
  8813  0026CC  0E40               	movlw	64
  8814  0026CE  D049               	goto	L20
  8815  0026D0  D04A               	goto	l383
  8816  0026D2                     l3482:
  8817                           
  8818                           ;FastBuggy17_Main_Code.c: 391: return(27);
  8819  0026D2  0E00               	movlw	0
  8820  0026D4  6E3F               	movwf	?_CalculateSensorError+1,c
  8821  0026D6  0E1B               	movlw	27
  8822  0026D8  D044               	goto	L20
  8823  0026DA  D045               	goto	l383
  8824  0026DC                     l3486:
  8825                           
  8826                           ;FastBuggy17_Main_Code.c: 393: return(8);
  8827  0026DC  0E00               	movlw	0
  8828  0026DE  6E3F               	movwf	?_CalculateSensorError+1,c
  8829  0026E0  0E08               	movlw	8
  8830  0026E2  D03F               	goto	L20
  8831  0026E4  D040               	goto	l383
  8832  0026E6                     l3490:
  8833                           
  8834                           ;FastBuggy17_Main_Code.c: 395: return(1);
  8835  0026E6  0E00               	movlw	0
  8836  0026E8  6E3F               	movwf	?_CalculateSensorError+1,c
  8837  0026EA  0E01               	movlw	1
  8838  0026EC  D03A               	goto	L20
  8839  0026EE  D03B               	goto	l383
  8840                           
  8841                           ;FastBuggy17_Main_Code.c: 396: case(4) :
  8842  0026F0  D035               	goto	l3514
  8843                           
  8844                           ;FastBuggy17_Main_Code.c: 397: return(0);
  8845  0026F2  D039               	goto	l383
  8846  0026F4                     l388:
  8847                           
  8848                           ;FastBuggy17_Main_Code.c: 399: return(-1);
  8849  0026F4  683E               	setf	?_CalculateSensorError,c
  8850  0026F6  683F               	setf	?_CalculateSensorError+1,c
  8851  0026F8  D036               	goto	l383
  8852  0026FA                     l3498:
  8853                           
  8854                           ;FastBuggy17_Main_Code.c: 401: return(-8);
  8855  0026FA  0EFF               	movlw	255
  8856  0026FC  6E3F               	movwf	?_CalculateSensorError+1,c
  8857  0026FE  0EF8               	movlw	248
  8858  002700  D030               	goto	L20
  8859  002702  D031               	goto	l383
  8860  002704                     l3502:
  8861                           
  8862                           ;FastBuggy17_Main_Code.c: 403: return(-27);
  8863  002704  0EFF               	movlw	255
  8864  002706  6E3F               	movwf	?_CalculateSensorError+1,c
  8865  002708  0EE5               	movlw	229
  8866  00270A  D02B               	goto	L20
  8867  00270C  D02C               	goto	l383
  8868  00270E                     l3506:
  8869                           
  8870                           ;FastBuggy17_Main_Code.c: 405: return(-64);
  8871  00270E  0EFF               	movlw	255
  8872  002710  6E3F               	movwf	?_CalculateSensorError+1,c
  8873  002712  0EC0               	movlw	192
  8874  002714  D026               	goto	L20
  8875  002716  D027               	goto	l383
  8876                           
  8877                           ;FastBuggy17_Main_Code.c: 408: }
  8878                           
  8879                           ;FastBuggy17_Main_Code.c: 407: break;
  8880                           
  8881                           ;FastBuggy17_Main_Code.c: 406: default :
  8882  002718  D021               	goto	l3514
  8883  00271A                     l3512:
  8884  00271A  C03E  FFD9         	movff	CalculateSensorError@sum,fsr2l
  8885  00271E  C03F  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
  8886  002722  50DF               	movf	indf2,w,c
  8887                           
  8888                           ; Switch size 1, requested type "space"
  8889                           ; Number of cases is 9, Range of values is 1 to 24
  8890                           ; switch strategies available:
  8891                           ; Name         Instructions Cycles
  8892                           ; simple_byte           28    15 (average)
  8893                           ;	Chosen strategy is simple_byte
  8894  002724  0A01               	xorlw	1	; case 1
  8895  002726  B4D8               	btfsc	status,2,c
  8896  002728  D7F2               	goto	l3506
  8897  00272A  0A03               	xorlw	3	; case 2
  8898  00272C  B4D8               	btfsc	status,2,c
  8899  00272E  D7E5               	goto	l3498
  8900  002730  0A01               	xorlw	1	; case 3
  8901  002732  B4D8               	btfsc	status,2,c
  8902  002734  D7E7               	goto	l3502
  8903  002736  0A07               	xorlw	7	; case 4
  8904  002738  B4D8               	btfsc	status,2,c
  8905  00273A  D010               	goto	l3514
  8906  00273C  0A02               	xorlw	2	; case 6
  8907  00273E  B4D8               	btfsc	status,2,c
  8908  002740  D7D9               	goto	l388
  8909  002742  0A0E               	xorlw	14	; case 8
  8910  002744  B4D8               	btfsc	status,2,c
  8911  002746  D7CA               	goto	l3486
  8912  002748  0A04               	xorlw	4	; case 12
  8913  00274A  B4D8               	btfsc	status,2,c
  8914  00274C  D7CC               	goto	l3490
  8915  00274E  0A1C               	xorlw	28	; case 16
  8916  002750  B4D8               	btfsc	status,2,c
  8917  002752  D7BA               	goto	l3478
  8918  002754  0A08               	xorlw	8	; case 24
  8919  002756  B4D8               	btfsc	status,2,c
  8920  002758  D7BC               	goto	l3482
  8921  00275A  D000               	goto	l3514
  8922  00275C                     l3514:
  8923                           
  8924                           ;FastBuggy17_Main_Code.c: 410: return(0);
  8925  00275C  0E00               	movlw	0
  8926  00275E  6E3F               	movwf	?_CalculateSensorError+1,c
  8927  002760  0E00               	movlw	0
  8928  002762                     L20:
  8929  002762  6E3E               	movwf	?_CalculateSensorError,c
  8930  002764  D000               	goto	l383
  8931  002766                     l383:
  8932  002766  0012               	return		;funcret
  8933  002768                     __end_of_CalculateSensorError:
  8934                           	opt stack 0
  8935                           tblptru	equ	0xFF8
  8936                           tblptrh	equ	0xFF7
  8937                           tblptrl	equ	0xFF6
  8938                           tablat	equ	0xFF5
  8939                           prodh	equ	0xFF4
  8940                           prodl	equ	0xFF3
  8941                           intcon	equ	0xFF2
  8942                           intcon2	equ	0xFF1
  8943                           postinc0	equ	0xFEE
  8944                           wreg	equ	0xFE8
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           fsr2h	equ	0xFDA
  8949                           fsr2l	equ	0xFD9
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function _BusyDistanceAcq *****************
  8953 ;; Defined at:
  8954 ;;		line 45 in file "Ultrasound.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;		None
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    6
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_main
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text74
  8983  002F06                     __ptext74:
  8984                           	opt stack 0
  8985  002F06                     _BusyDistanceAcq:
  8986                           	opt stack 24
  8987                           
  8988                           ;Ultrasound.c: 47: return (!echo_acq_done);
  8989                           
  8990                           ;incstack = 0
  8991  002F06  5046               	movf	_echo_acq_done,w,c
  8992  002F08  A4D8               	btfss	status,2,c
  8993  002F0A  D002               	goto	u2650
  8994  002F0C  0E01               	movlw	1
  8995  002F0E  D002               	goto	l36
  8996  002F10                     u2650:
  8997  002F10  0E00               	movlw	0
  8998  002F12  D000               	goto	l36
  8999  002F14                     l36:
  9000  002F14  0012               	return		;funcret
  9001  002F16                     __end_of_BusyDistanceAcq:
  9002                           	opt stack 0
  9003                           tblptru	equ	0xFF8
  9004                           tblptrh	equ	0xFF7
  9005                           tblptrl	equ	0xFF6
  9006                           tablat	equ	0xFF5
  9007                           prodh	equ	0xFF4
  9008                           prodl	equ	0xFF3
  9009                           intcon	equ	0xFF2
  9010                           intcon2	equ	0xFF1
  9011                           postinc0	equ	0xFEE
  9012                           wreg	equ	0xFE8
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           fsr2h	equ	0xFDA
  9017                           fsr2l	equ	0xFD9
  9018                           status	equ	0xFD8
  9019                           
  9020 ;; *************** function _isrLP *****************
  9021 ;; Defined at:
  9022 ;;		line 536 in file "FastBuggy17_Main_Code.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;		None
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;		None               void
  9029 ;; Registers used:
  9030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;Total ram usage:       17 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    5
  9043 ;; This function calls:
  9044 ;;		i1_ConvertADC
  9045 ;;		i1_ReadADC
  9046 ;;		i1_SetADCChannel
  9047 ;; This function is called by:
  9048 ;;		Interrupt level 1
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	intcodelo
  9053  000018                     __pintcodelo:
  9054                           	opt stack 0
  9055  000018                     _isrLP:
  9056                           	opt stack 19
  9057                           
  9058                           ;incstack = 0
  9059  000018  CFD8 F029          	movff	status,??_isrLP
  9060  00001C  CFE8 F02A          	movff	wreg,??_isrLP+1
  9061  000020  CFE0 F02B          	movff	bsr,??_isrLP+2
  9062  000024  CFFA F02C          	movff	pclath,??_isrLP+3
  9063  000028  CFFB F02D          	movff	pclatu,??_isrLP+4
  9064  00002C  CFE9 F02E          	movff	fsr0l,??_isrLP+5
  9065  000030  CFEA F02F          	movff	fsr0h,??_isrLP+6
  9066  000034  CFE1 F030          	movff	fsr1l,??_isrLP+7
  9067  000038  CFE2 F031          	movff	fsr1h,??_isrLP+8
  9068  00003C  CFD9 F032          	movff	fsr2l,??_isrLP+9
  9069  000040  CFDA F033          	movff	fsr2h,??_isrLP+10
  9070  000044  CFF3 F034          	movff	prodl,??_isrLP+11
  9071  000048  CFF4 F035          	movff	prodh,??_isrLP+12
  9072  00004C  CFF6 F036          	movff	tblptrl,??_isrLP+13
  9073  000050  CFF7 F037          	movff	tblptrh,??_isrLP+14
  9074  000054  CFF8 F038          	movff	tblptru,??_isrLP+15
  9075  000058  CFF5 F039          	movff	tablat,??_isrLP+16
  9076                           
  9077                           ;FastBuggy17_Main_Code.c: 551: if (PIR1bits.ADIF == 1) {
  9078  00005C  AC9E               	btfss	3998,6,c	;volatile
  9079  00005E  D01D               	goto	i1l435
  9080                           
  9081                           ;FastBuggy17_Main_Code.c: 552: PIR1bits.ADIF = 0;
  9082  000060  9C9E               	bcf	3998,6,c	;volatile
  9083                           
  9084                           ;FastBuggy17_Main_Code.c: 553: if (sensor_acq_index < 5) {
  9085  000062  0E05               	movlw	5
  9086  000064  601E               	cpfslt	_sensor_acq_index,c	;volatile
  9087  000066  D015               	goto	i1l3636
  9088                           
  9089                           ;FastBuggy17_Main_Code.c: 554: *(sensor_readings_raw + sensor_acq_index) = ReadADC();
  9090  000068  EC8B  F017         	call	i1_ReadADC	;wreg free
  9091  00006C  501E               	movf	_sensor_acq_index,w,c	;volatile
  9092  00006E  0D02               	mullw	2
  9093  000070  0E01               	movlw	low _sensor_readings_raw
  9094  000072  24F3               	addwf	prodl,w,c
  9095  000074  6ED9               	movwf	fsr2l,c
  9096  000076  0E00               	movlw	high _sensor_readings_raw
  9097  000078  20F4               	addwfc	prodh,w,c
  9098  00007A  6EDA               	movwf	fsr2h,c
  9099  00007C  C025  FFDE         	movff	?i1_ReadADC,postinc2
  9100  000080  C026  FFDD         	movff	?i1_ReadADC+1,postdec2
  9101                           
  9102                           ;FastBuggy17_Main_Code.c: 555: sensor_acq_index++;
  9103  000084  2A1E               	incf	_sensor_acq_index,f,c	;volatile
  9104                           
  9105                           ;FastBuggy17_Main_Code.c: 556: SetADCChannel(sensor_acq_index);
  9106  000086  501E               	movf	_sensor_acq_index,w,c	;volatile
  9107  000088  ECDA  F010         	call	i1_SetADCChannel
  9108                           
  9109                           ;FastBuggy17_Main_Code.c: 557: ConvertADC();
  9110  00008C  ECE1  F017         	call	i1_ConvertADC	;wreg free
  9111                           
  9112                           ;FastBuggy17_Main_Code.c: 558: } else {
  9113  000090  D004               	goto	i1l435
  9114  000092                     i1l3636:
  9115                           
  9116                           ;FastBuggy17_Main_Code.c: 559: sensor_acq_done = 1;
  9117  000092  0E01               	movlw	1
  9118  000094  6E1D               	movwf	_sensor_acq_done,c	;volatile
  9119                           
  9120                           ;FastBuggy17_Main_Code.c: 560: PIE1bits.ADIE = 0;
  9121  000096  9C9D               	bcf	3997,6,c	;volatile
  9122  000098  D000               	goto	i1l435
  9123  00009A                     i1l435:
  9124  00009A  C039  FFF5         	movff	??_isrLP+16,tablat
  9125  00009E  C038  FFF8         	movff	??_isrLP+15,tblptru
  9126  0000A2  C037  FFF7         	movff	??_isrLP+14,tblptrh
  9127  0000A6  C036  FFF6         	movff	??_isrLP+13,tblptrl
  9128  0000AA  C035  FFF4         	movff	??_isrLP+12,prodh
  9129  0000AE  C034  FFF3         	movff	??_isrLP+11,prodl
  9130  0000B2  C033  FFDA         	movff	??_isrLP+10,fsr2h
  9131  0000B6  C032  FFD9         	movff	??_isrLP+9,fsr2l
  9132  0000BA  C031  FFE2         	movff	??_isrLP+8,fsr1h
  9133  0000BE  C030  FFE1         	movff	??_isrLP+7,fsr1l
  9134  0000C2  C02F  FFEA         	movff	??_isrLP+6,fsr0h
  9135  0000C6  C02E  FFE9         	movff	??_isrLP+5,fsr0l
  9136  0000CA  C02D  FFFB         	movff	??_isrLP+4,pclatu
  9137  0000CE  C02C  FFFA         	movff	??_isrLP+3,pclath
  9138  0000D2  C02B  FFE0         	movff	??_isrLP+2,bsr
  9139  0000D6  C02A  FFE8         	movff	??_isrLP+1,wreg
  9140  0000DA  C029  FFD8         	movff	??_isrLP,status
  9141  0000DE  0010               	retfie	
  9142  0000E0                     __end_of_isrLP:
  9143                           	opt stack 0
  9144                           pclatu	equ	0xFFB
  9145                           pclath	equ	0xFFA
  9146                           tblptru	equ	0xFF8
  9147                           tblptrh	equ	0xFF7
  9148                           tblptrl	equ	0xFF6
  9149                           tablat	equ	0xFF5
  9150                           prodh	equ	0xFF4
  9151                           prodl	equ	0xFF3
  9152                           intcon	equ	0xFF2
  9153                           intcon2	equ	0xFF1
  9154                           postinc0	equ	0xFEE
  9155                           fsr0h	equ	0xFEA
  9156                           fsr0l	equ	0xFE9
  9157                           wreg	equ	0xFE8
  9158                           fsr1h	equ	0xFE2
  9159                           fsr1l	equ	0xFE1
  9160                           bsr	equ	0xFE0
  9161                           indf2	equ	0xFDF
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168 ;; *************** function i1_SetADCChannel *****************
  9169 ;; Defined at:
  9170 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  channel         1    wreg     unsigned char 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  channel         1    2[COMRAM] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;		None               void
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;Total ram usage:        1 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    4
  9191 ;; This function calls:
  9192 ;;		i1_SetChanADC
  9193 ;; This function is called by:
  9194 ;;		_isrLP
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text76
  9199  0021B4                     __ptext76:
  9200                           	opt stack 0
  9201  0021B4                     i1_SetADCChannel:
  9202                           	opt stack 19
  9203                           
  9204                           ;incstack = 0
  9205                           ;i1SetADCChannel@channel stored from wreg
  9206  0021B4  6E27               	movwf	i1SetADCChannel@channel,c
  9207                           
  9208                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  9209  0021B6  D040               	goto	i1l3598
  9210  0021B8                     i1l3564:
  9211                           
  9212                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  9213  0021B8  0E87               	movlw	135
  9214  0021BA  EC17  F017         	call	i1_SetChanADC
  9215                           
  9216                           ;FastBuggy17_Main_Code.c: 254: break;
  9217  0021BE  D06E               	goto	i1l348
  9218  0021C0                     i1l3566:
  9219                           
  9220                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  9221  0021C0  0E8F               	movlw	143
  9222  0021C2  EC17  F017         	call	i1_SetChanADC
  9223                           
  9224                           ;FastBuggy17_Main_Code.c: 257: break;
  9225  0021C6  D06A               	goto	i1l348
  9226  0021C8                     i1l3568:
  9227                           
  9228                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  9229  0021C8  0E97               	movlw	151
  9230  0021CA  EC17  F017         	call	i1_SetChanADC
  9231                           
  9232                           ;FastBuggy17_Main_Code.c: 260: break;
  9233  0021CE  D066               	goto	i1l348
  9234  0021D0                     i1l3570:
  9235                           
  9236                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  9237  0021D0  0E9F               	movlw	159
  9238  0021D2  EC17  F017         	call	i1_SetChanADC
  9239                           
  9240                           ;FastBuggy17_Main_Code.c: 263: break;
  9241  0021D6  D062               	goto	i1l348
  9242  0021D8                     i1l3572:
  9243                           
  9244                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  9245  0021D8  0EA7               	movlw	167
  9246  0021DA  EC17  F017         	call	i1_SetChanADC
  9247                           
  9248                           ;FastBuggy17_Main_Code.c: 266: break;
  9249  0021DE  D05E               	goto	i1l348
  9250  0021E0                     i1l3574:
  9251                           
  9252                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  9253  0021E0  0EAF               	movlw	175
  9254  0021E2  EC17  F017         	call	i1_SetChanADC
  9255                           
  9256                           ;FastBuggy17_Main_Code.c: 269: break;
  9257  0021E6  D05A               	goto	i1l348
  9258  0021E8                     i1l3576:
  9259                           
  9260                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  9261  0021E8  0EB7               	movlw	183
  9262  0021EA  EC17  F017         	call	i1_SetChanADC
  9263                           
  9264                           ;FastBuggy17_Main_Code.c: 272: break;
  9265  0021EE  D056               	goto	i1l348
  9266  0021F0                     i1l3578:
  9267                           
  9268                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  9269  0021F0  0EBF               	movlw	191
  9270  0021F2  EC17  F017         	call	i1_SetChanADC
  9271                           
  9272                           ;FastBuggy17_Main_Code.c: 275: break;
  9273  0021F6  D052               	goto	i1l348
  9274  0021F8                     i1l3580:
  9275                           
  9276                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  9277  0021F8  0EC7               	movlw	199
  9278  0021FA  EC17  F017         	call	i1_SetChanADC
  9279                           
  9280                           ;FastBuggy17_Main_Code.c: 278: break;
  9281  0021FE  D04E               	goto	i1l348
  9282  002200                     i1l3582:
  9283                           
  9284                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  9285  002200  0ECF               	movlw	207
  9286  002202  EC17  F017         	call	i1_SetChanADC
  9287                           
  9288                           ;FastBuggy17_Main_Code.c: 281: break;
  9289  002206  D04A               	goto	i1l348
  9290  002208                     i1l3584:
  9291                           
  9292                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  9293  002208  0ED7               	movlw	215
  9294  00220A  EC17  F017         	call	i1_SetChanADC
  9295                           
  9296                           ;FastBuggy17_Main_Code.c: 284: break;
  9297  00220E  D046               	goto	i1l348
  9298  002210                     i1l3586:
  9299                           
  9300                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  9301  002210  0EDF               	movlw	223
  9302  002212  EC17  F017         	call	i1_SetChanADC
  9303                           
  9304                           ;FastBuggy17_Main_Code.c: 287: break;
  9305  002216  D042               	goto	i1l348
  9306  002218                     i1l3588:
  9307                           
  9308                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  9309  002218  0EE7               	movlw	231
  9310  00221A  EC17  F017         	call	i1_SetChanADC
  9311                           
  9312                           ;FastBuggy17_Main_Code.c: 290: break;
  9313  00221E  D03E               	goto	i1l348
  9314  002220                     i1l3590:
  9315                           
  9316                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  9317  002220  0EEF               	movlw	239
  9318  002222  EC17  F017         	call	i1_SetChanADC
  9319                           
  9320                           ;FastBuggy17_Main_Code.c: 293: break;
  9321  002226  D03A               	goto	i1l348
  9322  002228                     i1l3592:
  9323                           
  9324                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  9325  002228  0EF7               	movlw	247
  9326  00222A  EC17  F017         	call	i1_SetChanADC
  9327                           
  9328                           ;FastBuggy17_Main_Code.c: 296: break;
  9329  00222E  D036               	goto	i1l348
  9330  002230                     i1l3594:
  9331                           
  9332                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  9333  002230  0EFF               	movlw	255
  9334  002232  EC17  F017         	call	i1_SetChanADC
  9335                           
  9336                           ;FastBuggy17_Main_Code.c: 302: }
  9337                           
  9338                           ;FastBuggy17_Main_Code.c: 301: break;
  9339                           
  9340                           ;FastBuggy17_Main_Code.c: 300: default:
  9341                           
  9342                           ;FastBuggy17_Main_Code.c: 299: break;
  9343  002236  D032               	goto	i1l348
  9344  002238                     i1l3598:
  9345  002238  5027               	movf	i1SetADCChannel@channel,w,c
  9346                           
  9347                           ; Switch size 1, requested type "space"
  9348                           ; Number of cases is 16, Range of values is 0 to 15
  9349                           ; switch strategies available:
  9350                           ; Name         Instructions Cycles
  9351                           ; simple_byte           49    25 (average)
  9352                           ;	Chosen strategy is simple_byte
  9353  00223A  0A00               	xorlw	0	; case 0
  9354  00223C  B4D8               	btfsc	status,2,c
  9355  00223E  D7BC               	goto	i1l3564
  9356  002240  0A01               	xorlw	1	; case 1
  9357  002242  B4D8               	btfsc	status,2,c
  9358  002244  D7BD               	goto	i1l3566
  9359  002246  0A03               	xorlw	3	; case 2
  9360  002248  B4D8               	btfsc	status,2,c
  9361  00224A  D7BE               	goto	i1l3568
  9362  00224C  0A01               	xorlw	1	; case 3
  9363  00224E  B4D8               	btfsc	status,2,c
  9364  002250  D7BF               	goto	i1l3570
  9365  002252  0A07               	xorlw	7	; case 4
  9366  002254  B4D8               	btfsc	status,2,c
  9367  002256  D7C0               	goto	i1l3572
  9368  002258  0A01               	xorlw	1	; case 5
  9369  00225A  B4D8               	btfsc	status,2,c
  9370  00225C  D7C1               	goto	i1l3574
  9371  00225E  0A03               	xorlw	3	; case 6
  9372  002260  B4D8               	btfsc	status,2,c
  9373  002262  D7C2               	goto	i1l3576
  9374  002264  0A01               	xorlw	1	; case 7
  9375  002266  B4D8               	btfsc	status,2,c
  9376  002268  D7C3               	goto	i1l3578
  9377  00226A  0A0F               	xorlw	15	; case 8
  9378  00226C  B4D8               	btfsc	status,2,c
  9379  00226E  D7C4               	goto	i1l3580
  9380  002270  0A01               	xorlw	1	; case 9
  9381  002272  B4D8               	btfsc	status,2,c
  9382  002274  D7C5               	goto	i1l3582
  9383  002276  0A03               	xorlw	3	; case 10
  9384  002278  B4D8               	btfsc	status,2,c
  9385  00227A  D7C6               	goto	i1l3584
  9386  00227C  0A01               	xorlw	1	; case 11
  9387  00227E  B4D8               	btfsc	status,2,c
  9388  002280  D7C7               	goto	i1l3586
  9389  002282  0A07               	xorlw	7	; case 12
  9390  002284  B4D8               	btfsc	status,2,c
  9391  002286  D7C8               	goto	i1l3588
  9392  002288  0A01               	xorlw	1	; case 13
  9393  00228A  B4D8               	btfsc	status,2,c
  9394  00228C  D7C9               	goto	i1l3590
  9395  00228E  0A03               	xorlw	3	; case 14
  9396  002290  B4D8               	btfsc	status,2,c
  9397  002292  D7CA               	goto	i1l3592
  9398  002294  0A01               	xorlw	1	; case 15
  9399  002296  B4D8               	btfsc	status,2,c
  9400  002298  D7CB               	goto	i1l3594
  9401  00229A  D000               	goto	i1l348
  9402  00229C                     i1l348:
  9403  00229C  0012               	return		;funcret
  9404  00229E                     __end_ofi1_SetADCChannel:
  9405                           	opt stack 0
  9406                           pclatu	equ	0xFFB
  9407                           pclath	equ	0xFFA
  9408                           tblptru	equ	0xFF8
  9409                           tblptrh	equ	0xFF7
  9410                           tblptrl	equ	0xFF6
  9411                           tablat	equ	0xFF5
  9412                           prodh	equ	0xFF4
  9413                           prodl	equ	0xFF3
  9414                           intcon	equ	0xFF2
  9415                           intcon2	equ	0xFF1
  9416                           postinc0	equ	0xFEE
  9417                           fsr0h	equ	0xFEA
  9418                           fsr0l	equ	0xFE9
  9419                           wreg	equ	0xFE8
  9420                           fsr1h	equ	0xFE2
  9421                           fsr1l	equ	0xFE1
  9422                           bsr	equ	0xFE0
  9423                           indf2	equ	0xFDF
  9424                           postinc2	equ	0xFDE
  9425                           postdec2	equ	0xFDD
  9426                           fsr2h	equ	0xFDA
  9427                           fsr2l	equ	0xFD9
  9428                           status	equ	0xFD8
  9429                           
  9430 ;; *************** function i1_SetChanADC *****************
  9431 ;; Defined at:
  9432 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  channel         1    wreg     unsigned char 
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  channel         1    1[COMRAM] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;		None               void
  9439 ;; Registers used:
  9440 ;;		wreg, status,2, status,0
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;Total ram usage:        2 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    3
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		i1_SetADCChannel
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text77
  9461  002E2E                     __ptext77:
  9462                           	opt stack 0
  9463  002E2E                     i1_SetChanADC:
  9464                           	opt stack 19
  9465                           
  9466                           ;incstack = 0
  9467                           ;i1SetChanADC@channel stored from wreg
  9468  002E2E  6E26               	movwf	i1SetChanADC@channel,c
  9469  002E30  CFC2 F025          	movff	4034,??i1_SetChanADC	;volatile
  9470  002E34  0EC3               	movlw	195
  9471  002E36  1625               	andwf	??i1_SetChanADC,f,c
  9472  002E38  90D8               	bcf	status,0,c
  9473  002E3A  3026               	rrcf	i1SetChanADC@channel,w,c
  9474  002E3C  0B3C               	andlw	60
  9475  002E3E  1025               	iorwf	??i1_SetChanADC,w,c
  9476  002E40  6EC2               	movwf	4034,c	;volatile
  9477  002E42  0012               	return		;funcret
  9478  002E44                     __end_ofi1_SetChanADC:
  9479                           	opt stack 0
  9480                           pclatu	equ	0xFFB
  9481                           pclath	equ	0xFFA
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           intcon2	equ	0xFF1
  9490                           postinc0	equ	0xFEE
  9491                           fsr0h	equ	0xFEA
  9492                           fsr0l	equ	0xFE9
  9493                           wreg	equ	0xFE8
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           bsr	equ	0xFE0
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function i1_ReadADC *****************
  9505 ;; Defined at:
  9506 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  2    0[COMRAM] int 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9524 ;;Total ram usage:        4 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    3
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_isrLP
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text78
  9535  002F16                     __ptext78:
  9536                           	opt stack 0
  9537  002F16                     i1_ReadADC:
  9538                           	opt stack 20
  9539                           
  9540                           ;incstack = 0
  9541  002F16  50C4               	movf	4036,w,c	;volatile
  9542  002F18  6E27               	movwf	??i1_ReadADC& (0+255),c
  9543  002F1A  50C3               	movf	4035,w,c	;volatile
  9544  002F1C  6E25               	movwf	?i1_ReadADC,c
  9545  002F1E  C027  F026         	movff	??i1_ReadADC,?i1_ReadADC+1
  9546  002F22  D000               	goto	i1l507
  9547  002F24                     i1l507:
  9548  002F24  0012               	return		;funcret
  9549  002F26                     __end_ofi1_ReadADC:
  9550                           	opt stack 0
  9551                           pclatu	equ	0xFFB
  9552                           pclath	equ	0xFFA
  9553                           tblptru	equ	0xFF8
  9554                           tblptrh	equ	0xFF7
  9555                           tblptrl	equ	0xFF6
  9556                           tablat	equ	0xFF5
  9557                           prodh	equ	0xFF4
  9558                           prodl	equ	0xFF3
  9559                           intcon	equ	0xFF2
  9560                           intcon2	equ	0xFF1
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           fsr1h	equ	0xFE2
  9566                           fsr1l	equ	0xFE1
  9567                           bsr	equ	0xFE0
  9568                           indf2	equ	0xFDF
  9569                           postinc2	equ	0xFDE
  9570                           postdec2	equ	0xFDD
  9571                           fsr2h	equ	0xFDA
  9572                           fsr2l	equ	0xFD9
  9573                           status	equ	0xFD8
  9574                           
  9575 ;; *************** function i1_ConvertADC *****************
  9576 ;; Defined at:
  9577 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;		None               void
  9584 ;; Registers used:
  9585 ;;		None
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;Total ram usage:        0 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    3
  9598 ;; This function calls:
  9599 ;;		Nothing
  9600 ;; This function is called by:
  9601 ;;		_isrLP
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text79
  9606  002FC2                     __ptext79:
  9607                           	opt stack 0
  9608  002FC2                     i1_ConvertADC:
  9609                           	opt stack 20
  9610                           
  9611                           ;incstack = 0
  9612  002FC2  82C2               	bsf	4034,1,c	;volatile
  9613  002FC4  0012               	return		;funcret
  9614  002FC6                     __end_ofi1_ConvertADC:
  9615                           	opt stack 0
  9616                           pclatu	equ	0xFFB
  9617                           pclath	equ	0xFFA
  9618                           tblptru	equ	0xFF8
  9619                           tblptrh	equ	0xFF7
  9620                           tblptrl	equ	0xFF6
  9621                           tablat	equ	0xFF5
  9622                           prodh	equ	0xFF4
  9623                           prodl	equ	0xFF3
  9624                           intcon	equ	0xFF2
  9625                           intcon2	equ	0xFF1
  9626                           postinc0	equ	0xFEE
  9627                           fsr0h	equ	0xFEA
  9628                           fsr0l	equ	0xFE9
  9629                           wreg	equ	0xFE8
  9630                           fsr1h	equ	0xFE2
  9631                           fsr1l	equ	0xFE1
  9632                           bsr	equ	0xFE0
  9633                           indf2	equ	0xFDF
  9634                           postinc2	equ	0xFDE
  9635                           postdec2	equ	0xFDD
  9636                           fsr2h	equ	0xFDA
  9637                           fsr2l	equ	0xFD9
  9638                           status	equ	0xFD8
  9639                           
  9640 ;; *************** function _isrHP *****************
  9641 ;; Defined at:
  9642 ;;		line 515 in file "FastBuggy17_Main_Code.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;		None               void
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;Total ram usage:       14 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    2
  9663 ;; This function calls:
  9664 ;;		_MillisecondTimerISR
  9665 ;;		_UltrasoundISR
  9666 ;; This function is called by:
  9667 ;;		Interrupt level 2
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	intcode
  9672  000008                     __pintcode:
  9673                           	opt stack 0
  9674  000008                     _isrHP:
  9675                           	opt stack 19
  9676                           
  9677                           ;incstack = 0
  9678  000008  CFFA F060          	movff	pclath,??_isrHP
  9679  00000C  CFFB F061          	movff	pclatu,??_isrHP+1
  9680  000010  CFE9 F062          	movff	fsr0l,??_isrHP+2
  9681  000014  ED3C  F014         	call	int_func,f	;refresh shadow registers
  9682                           pclatu	equ	0xFFB
  9683                           pclath	equ	0xFFA
  9684                           tblptru	equ	0xFF8
  9685                           tblptrh	equ	0xFF7
  9686                           tblptrl	equ	0xFF6
  9687                           tablat	equ	0xFF5
  9688                           prodh	equ	0xFF4
  9689                           prodl	equ	0xFF3
  9690                           intcon	equ	0xFF2
  9691                           intcon2	equ	0xFF1
  9692                           postinc0	equ	0xFEE
  9693                           fsr0h	equ	0xFEA
  9694                           fsr0l	equ	0xFE9
  9695                           wreg	equ	0xFE8
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           bsr	equ	0xFE0
  9699                           indf2	equ	0xFDF
  9700                           postinc2	equ	0xFDE
  9701                           postdec2	equ	0xFDD
  9702                           fsr2h	equ	0xFDA
  9703                           fsr2l	equ	0xFD9
  9704                           status	equ	0xFD8
  9705                           
  9706                           	psect	intcode_body
  9707  002878                     __pintcode_body:
  9708                           	opt stack 19
  9709  002878                     int_func:
  9710                           	opt stack 19
  9711  002878  0006               	pop		; remove dummy address from shadow register refresh
  9712  00287A  CFEA F063          	movff	fsr0h,??_isrHP+3
  9713  00287E  CFE1 F064          	movff	fsr1l,??_isrHP+4
  9714  002882  CFE2 F065          	movff	fsr1h,??_isrHP+5
  9715  002886  CFD9 F066          	movff	fsr2l,??_isrHP+6
  9716  00288A  CFDA F067          	movff	fsr2h,??_isrHP+7
  9717  00288E  CFF3 F068          	movff	prodl,??_isrHP+8
  9718  002892  CFF4 F069          	movff	prodh,??_isrHP+9
  9719  002896  CFF6 F06A          	movff	tblptrl,??_isrHP+10
  9720  00289A  CFF7 F06B          	movff	tblptrh,??_isrHP+11
  9721  00289E  CFF8 F06C          	movff	tblptru,??_isrHP+12
  9722  0028A2  CFF5 F06D          	movff	tablat,??_isrHP+13
  9723                           
  9724                           ;FastBuggy17_Main_Code.c: 518: if (INTCONbits.TMR0IF == 1) {
  9725  0028A6  A4F2               	btfss	intcon,2,c	;volatile
  9726  0028A8  D004               	goto	i2l4230
  9727                           
  9728                           ;FastBuggy17_Main_Code.c: 519: INTCONbits.TMR0IF = 0;
  9729  0028AA  94F2               	bcf	intcon,2,c	;volatile
  9730                           
  9731                           ;FastBuggy17_Main_Code.c: 521: MillisecondTimerISR();
  9732  0028AC  EC59  F017         	call	_MillisecondTimerISR	;wreg free
  9733  0028B0  D000               	goto	i2l4230
  9734  0028B2                     i2l4230:
  9735                           
  9736                           ;FastBuggy17_Main_Code.c: 525: }
  9737                           ;FastBuggy17_Main_Code.c: 528: if (INTCONbits.RBIF == 1) {
  9738  0028B2  A0F2               	btfss	intcon,0,c	;volatile
  9739  0028B4  D003               	goto	i2l429
  9740                           
  9741                           ;FastBuggy17_Main_Code.c: 529: UltrasoundISR();
  9742  0028B6  ECD3  F015         	call	_UltrasoundISR	;wreg free
  9743  0028BA  D000               	goto	i2l429
  9744  0028BC                     i2l429:
  9745  0028BC  C06D  FFF5         	movff	??_isrHP+13,tablat
  9746  0028C0  C06C  FFF8         	movff	??_isrHP+12,tblptru
  9747  0028C4  C06B  FFF7         	movff	??_isrHP+11,tblptrh
  9748  0028C8  C06A  FFF6         	movff	??_isrHP+10,tblptrl
  9749  0028CC  C069  FFF4         	movff	??_isrHP+9,prodh
  9750  0028D0  C068  FFF3         	movff	??_isrHP+8,prodl
  9751  0028D4  C067  FFDA         	movff	??_isrHP+7,fsr2h
  9752  0028D8  C066  FFD9         	movff	??_isrHP+6,fsr2l
  9753  0028DC  C065  FFE2         	movff	??_isrHP+5,fsr1h
  9754  0028E0  C064  FFE1         	movff	??_isrHP+4,fsr1l
  9755  0028E4  C063  FFEA         	movff	??_isrHP+3,fsr0h
  9756  0028E8  C062  FFE9         	movff	??_isrHP+2,fsr0l
  9757  0028EC  C061  FFFB         	movff	??_isrHP+1,pclatu
  9758  0028F0  C060  FFFA         	movff	??_isrHP,pclath
  9759  0028F4  0011               	retfie		f
  9760  0028F6                     __end_of_isrHP:
  9761                           	opt stack 0
  9762                           pclatu	equ	0xFFB
  9763                           pclath	equ	0xFFA
  9764                           tblptru	equ	0xFF8
  9765                           tblptrh	equ	0xFF7
  9766                           tblptrl	equ	0xFF6
  9767                           tablat	equ	0xFF5
  9768                           prodh	equ	0xFF4
  9769                           prodl	equ	0xFF3
  9770                           intcon	equ	0xFF2
  9771                           intcon2	equ	0xFF1
  9772                           postinc0	equ	0xFEE
  9773                           fsr0h	equ	0xFEA
  9774                           fsr0l	equ	0xFE9
  9775                           wreg	equ	0xFE8
  9776                           fsr1h	equ	0xFE2
  9777                           fsr1l	equ	0xFE1
  9778                           bsr	equ	0xFE0
  9779                           indf2	equ	0xFDF
  9780                           postinc2	equ	0xFDE
  9781                           postdec2	equ	0xFDD
  9782                           fsr2h	equ	0xFDA
  9783                           fsr2l	equ	0xFD9
  9784                           status	equ	0xFD8
  9785                           
  9786 ;; *************** function _UltrasoundISR *****************
  9787 ;; Defined at:
  9788 ;;		line 18 in file "Ultrasound.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;		None
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;		None               void
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;Total ram usage:        0 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:    1
  9809 ;; This function calls:
  9810 ;;		_ReadTimer1
  9811 ;;		i2_WriteTimer1
  9812 ;; This function is called by:
  9813 ;;		_isrHP
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text81
  9818  002BA6                     __ptext81:
  9819                           	opt stack 0
  9820  002BA6                     _UltrasoundISR:
  9821                           	opt stack 19
  9822                           
  9823                           ;Ultrasound.c: 19: INTCONbits.RBIE = 0;
  9824                           
  9825                           ;incstack = 0
  9826  002BA6  96F2               	bcf	intcon,3,c	;volatile
  9827                           
  9828                           ;Ultrasound.c: 20: if (PORTBbits.RB4 == 1) {
  9829  002BA8  A881               	btfss	3969,4,c	;volatile
  9830  002BAA  D008               	goto	i2l3366
  9831                           
  9832                           ;Ultrasound.c: 21: T1CONbits.TMR1ON = 1;
  9833  002BAC  80CD               	bsf	4045,0,c	;volatile
  9834                           
  9835                           ;Ultrasound.c: 22: WriteTimer1(0);
  9836  002BAE  0E00               	movlw	0
  9837  002BB0  6E3B               	movwf	i2WriteTimer1@timer1+1,c
  9838  002BB2  0E00               	movlw	0
  9839  002BB4  6E3A               	movwf	i2WriteTimer1@timer1,c
  9840  002BB6  EC47  F017         	call	i2_WriteTimer1	;wreg free
  9841  002BBA  D000               	goto	i2l3366
  9842  002BBC                     i2l3366:
  9843                           
  9844                           ;Ultrasound.c: 23: }
  9845                           ;Ultrasound.c: 24: if (PORTBbits.RB4 == 0) {
  9846  002BBC  B881               	btfsc	3969,4,c	;volatile
  9847  002BBE  D00A               	goto	i2l3374
  9848                           
  9849                           ;Ultrasound.c: 25: T1CONbits.TMR1ON = 0;
  9850  002BC0  90CD               	bcf	4045,0,c	;volatile
  9851                           
  9852                           ;Ultrasound.c: 26: echo_time = ReadTimer1();
  9853  002BC2  EC50  F017         	call	_ReadTimer1	;wreg free
  9854  002BC6  C03A  F015         	movff	?_ReadTimer1,_echo_time	;volatile
  9855  002BCA  C03B  F016         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
  9856                           
  9857                           ;Ultrasound.c: 27: echo_acq_done = 1;
  9858  002BCE  0E01               	movlw	1
  9859  002BD0  6E46               	movwf	_echo_acq_done,c
  9860  002BD2  D000               	goto	i2l3374
  9861  002BD4                     i2l3374:
  9862                           
  9863                           ;Ultrasound.c: 28: }
  9864                           ;Ultrasound.c: 29: INTCONbits.RBIE = 1;
  9865  002BD4  86F2               	bsf	intcon,3,c	;volatile
  9866                           
  9867                           ;Ultrasound.c: 30: INTCONbits.RBIF = 0;
  9868  002BD6  90F2               	bcf	intcon,0,c	;volatile
  9869  002BD8  0012               	return		;funcret
  9870  002BDA                     __end_of_UltrasoundISR:
  9871                           	opt stack 0
  9872                           pclatu	equ	0xFFB
  9873                           pclath	equ	0xFFA
  9874                           tblptru	equ	0xFF8
  9875                           tblptrh	equ	0xFF7
  9876                           tblptrl	equ	0xFF6
  9877                           tablat	equ	0xFF5
  9878                           prodh	equ	0xFF4
  9879                           prodl	equ	0xFF3
  9880                           intcon	equ	0xFF2
  9881                           intcon2	equ	0xFF1
  9882                           postinc0	equ	0xFEE
  9883                           fsr0h	equ	0xFEA
  9884                           fsr0l	equ	0xFE9
  9885                           wreg	equ	0xFE8
  9886                           fsr1h	equ	0xFE2
  9887                           fsr1l	equ	0xFE1
  9888                           bsr	equ	0xFE0
  9889                           indf2	equ	0xFDF
  9890                           postinc2	equ	0xFDE
  9891                           postdec2	equ	0xFDD
  9892                           fsr2h	equ	0xFDA
  9893                           fsr2l	equ	0xFD9
  9894                           status	equ	0xFD8
  9895                           
  9896 ;; *************** function i2_WriteTimer1 *****************
  9897 ;; Defined at:
  9898 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  timer1          2   21[COMRAM] unsigned int 
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;  WriteTimer1     2   23[COMRAM] struct Timers
  9903 ;; Return value:  Size  Location     Type
  9904 ;;		None               void
  9905 ;; Registers used:
  9906 ;;		None
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;Total ram usage:        4 bytes
  9917 ;; Hardware stack levels used:    1
  9918 ;; This function calls:
  9919 ;;		Nothing
  9920 ;; This function is called by:
  9921 ;;		_UltrasoundISR
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text82
  9926  002E8E                     __ptext82:
  9927                           	opt stack 0
  9928  002E8E                     i2_WriteTimer1:
  9929                           	opt stack 19
  9930                           
  9931                           ;incstack = 0
  9932  002E8E  C03A  F03C         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
  9933  002E92  C03B  F03D         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
  9934  002E96  C03D  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
  9935  002E9A  C03C  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
  9936  002E9E  0012               	return		;funcret
  9937  002EA0                     __end_ofi2_WriteTimer1:
  9938                           	opt stack 0
  9939                           pclatu	equ	0xFFB
  9940                           pclath	equ	0xFFA
  9941                           tblptru	equ	0xFF8
  9942                           tblptrh	equ	0xFF7
  9943                           tblptrl	equ	0xFF6
  9944                           tablat	equ	0xFF5
  9945                           prodh	equ	0xFF4
  9946                           prodl	equ	0xFF3
  9947                           intcon	equ	0xFF2
  9948                           intcon2	equ	0xFF1
  9949                           postinc0	equ	0xFEE
  9950                           fsr0h	equ	0xFEA
  9951                           fsr0l	equ	0xFE9
  9952                           wreg	equ	0xFE8
  9953                           fsr1h	equ	0xFE2
  9954                           fsr1l	equ	0xFE1
  9955                           bsr	equ	0xFE0
  9956                           indf2	equ	0xFDF
  9957                           postinc2	equ	0xFDE
  9958                           postdec2	equ	0xFDD
  9959                           fsr2h	equ	0xFDA
  9960                           fsr2l	equ	0xFD9
  9961                           status	equ	0xFD8
  9962                           
  9963 ;; *************** function _ReadTimer1 *****************
  9964 ;; Defined at:
  9965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  timer           2   23[COMRAM] struct Timers
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  2   21[COMRAM] unsigned int 
  9972 ;; Registers used:
  9973 ;;		None
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;Total ram usage:        4 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_UltrasoundISR
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text83
  9993  002EA0                     __ptext83:
  9994                           	opt stack 0
  9995  002EA0                     _ReadTimer1:
  9996                           	opt stack 19
  9997                           
  9998                           ;incstack = 0
  9999  002EA0  CFCE F03C          	movff	4046,ReadTimer1@timer	;volatile
 10000  002EA4  CFCF F03D          	movff	4047,ReadTimer1@timer+1	;volatile
 10001  002EA8  C03C  F03A         	movff	ReadTimer1@timer,?_ReadTimer1
 10002  002EAC  C03D  F03B         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 10003  002EB0  0012               	return		;funcret
 10004  002EB2                     __end_of_ReadTimer1:
 10005                           	opt stack 0
 10006                           pclatu	equ	0xFFB
 10007                           pclath	equ	0xFFA
 10008                           tblptru	equ	0xFF8
 10009                           tblptrh	equ	0xFF7
 10010                           tblptrl	equ	0xFF6
 10011                           tablat	equ	0xFF5
 10012                           prodh	equ	0xFF4
 10013                           prodl	equ	0xFF3
 10014                           intcon	equ	0xFF2
 10015                           intcon2	equ	0xFF1
 10016                           postinc0	equ	0xFEE
 10017                           fsr0h	equ	0xFEA
 10018                           fsr0l	equ	0xFE9
 10019                           wreg	equ	0xFE8
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           bsr	equ	0xFE0
 10023                           indf2	equ	0xFDF
 10024                           postinc2	equ	0xFDE
 10025                           postdec2	equ	0xFDD
 10026                           fsr2h	equ	0xFDA
 10027                           fsr2l	equ	0xFD9
 10028                           status	equ	0xFD8
 10029                           
 10030 ;; *************** function _MillisecondTimerISR *****************
 10031 ;; Defined at:
 10032 ;;		line 22 in file "MillisecondTimer.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;		None               void
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0, cstack
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    1
 10053 ;; This function calls:
 10054 ;;		i2_WriteTimer0
 10055 ;; This function is called by:
 10056 ;;		_isrHP
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text84
 10061  002EB2                     __ptext84:
 10062                           	opt stack 0
 10063  002EB2                     _MillisecondTimerISR:
 10064                           	opt stack 19
 10065                           
 10066                           ;MillisecondTimer.c: 24: WriteTimer0(63036);
 10067                           
 10068                           ;incstack = 0
 10069  002EB2  0EF6               	movlw	246
 10070  002EB4  6E3B               	movwf	i2WriteTimer0@timer0+1,c
 10071  002EB6  0E3C               	movlw	60
 10072  002EB8  6E3A               	movwf	i2WriteTimer0@timer0,c
 10073  002EBA  EC62  F017         	call	i2_WriteTimer0	;wreg free
 10074                           
 10075                           ;MillisecondTimer.c: 25: millisecond_COUNT++;
 10076  002EBE  4A17               	infsnz	_millisecond_COUNT,f,c	;volatile
 10077  002EC0  2A18               	incf	_millisecond_COUNT+1,f,c	;volatile
 10078  002EC2  0012               	return		;funcret
 10079  002EC4                     __end_of_MillisecondTimerISR:
 10080                           	opt stack 0
 10081                           pclatu	equ	0xFFB
 10082                           pclath	equ	0xFFA
 10083                           tblptru	equ	0xFF8
 10084                           tblptrh	equ	0xFF7
 10085                           tblptrl	equ	0xFF6
 10086                           tablat	equ	0xFF5
 10087                           prodh	equ	0xFF4
 10088                           prodl	equ	0xFF3
 10089                           intcon	equ	0xFF2
 10090                           intcon2	equ	0xFF1
 10091                           postinc0	equ	0xFEE
 10092                           fsr0h	equ	0xFEA
 10093                           fsr0l	equ	0xFE9
 10094                           wreg	equ	0xFE8
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           bsr	equ	0xFE0
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function i2_WriteTimer0 *****************
 10106 ;; Defined at:
 10107 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  timer0          2   21[COMRAM] unsigned int 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  WriteTimer0     2   23[COMRAM] struct Timers
 10112 ;; Return value:  Size  Location     Type
 10113 ;;		None               void
 10114 ;; Registers used:
 10115 ;;		None
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;Total ram usage:        4 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_MillisecondTimerISR
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text85
 10135  002EC4                     __ptext85:
 10136                           	opt stack 0
 10137  002EC4                     i2_WriteTimer0:
 10138                           	opt stack 19
 10139                           
 10140                           ;incstack = 0
 10141  002EC4  C03A  F03C         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 10142  002EC8  C03B  F03D         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 10143  002ECC  C03D  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 10144  002ED0  C03C  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 10145  002ED4  0012               	return		;funcret
 10146  002ED6                     __end_ofi2_WriteTimer0:
 10147                           	opt stack 0
 10148                           pclatu	equ	0xFFB
 10149                           pclath	equ	0xFFA
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           intcon2	equ	0xFF1
 10158                           postinc0	equ	0xFEE
 10159                           fsr0h	equ	0xFEA
 10160                           fsr0l	equ	0xFE9
 10161                           wreg	equ	0xFE8
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           bsr	equ	0xFE0
 10165                           indf2	equ	0xFDF
 10166                           postinc2	equ	0xFDE
 10167                           postdec2	equ	0xFDD
 10168                           fsr2h	equ	0xFDA
 10169                           fsr2l	equ	0xFD9
 10170                           status	equ	0xFD8
 10171                           pclatu	equ	0xFFB
 10172                           pclath	equ	0xFFA
 10173                           tblptru	equ	0xFF8
 10174                           tblptrh	equ	0xFF7
 10175                           tblptrl	equ	0xFF6
 10176                           tablat	equ	0xFF5
 10177                           prodh	equ	0xFF4
 10178                           prodl	equ	0xFF3
 10179                           intcon	equ	0xFF2
 10180                           intcon2	equ	0xFF1
 10181                           postinc0	equ	0xFEE
 10182                           fsr0h	equ	0xFEA
 10183                           fsr0l	equ	0xFE9
 10184                           wreg	equ	0xFE8
 10185                           fsr1h	equ	0xFE2
 10186                           fsr1l	equ	0xFE1
 10187                           bsr	equ	0xFE0
 10188                           indf2	equ	0xFDF
 10189                           postinc2	equ	0xFDE
 10190                           postdec2	equ	0xFDD
 10191                           fsr2h	equ	0xFDA
 10192                           fsr2l	equ	0xFD9
 10193                           status	equ	0xFD8
 10194                           
 10195                           	psect	rparam
 10196  0000                     pclatu	equ	0xFFB
 10197                           pclath	equ	0xFFA
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           postinc0	equ	0xFEE
 10207                           fsr0h	equ	0xFEA
 10208                           fsr0l	equ	0xFE9
 10209                           wreg	equ	0xFE8
 10210                           fsr1h	equ	0xFE2
 10211                           fsr1l	equ	0xFE1
 10212                           bsr	equ	0xFE0
 10213                           indf2	equ	0xFDF
 10214                           postinc2	equ	0xFDE
 10215                           postdec2	equ	0xFDD
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         62
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      70
    BANK0           160    100     132
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_SetDCMotorL
    _main->_SetDCMotorR
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _ResetMillis->_WriteTimer0
    _GetDistance->_Delay1TCYx
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _ChangeMode->_Delay10KTCYx
    _CalibrateLine->_DisplaySensorStatuses
    _CalibrateLine->_NormaliseSensorReadings
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    ___altoft->___ftpack
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    _isrLP->i1_ReadADC
    i1_SetADCChannel->i1_SetChanADC

Critical Paths under _main in BANK0

    _main->_CalculateSensorSums
    _CalculateSensorSums->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   76961
                                             97 BANK0      3     3      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                      _CalibrateLine
                   _CalibrateSensors
                         _ChangeMode
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                        _GetDistance
                  _GetSensorReadings
            _NormaliseSensorReadings
                     _ReadEchoLength
                         _ReadMillis
                    _ResetEchoLength
                        _ResetMillis
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorL
                  _SetForwardsMotorR
                   _SetReverseMotorL
                   _SetReverseMotorR
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0     816
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorL                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1036
                                             14 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     408
                                             31 COMRAM     2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     121
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     408
                                             31 COMRAM     2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     121
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis                                          0     0      0     202
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _ResetEchoLength                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis                                           2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      22
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      22
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     394
                                             14 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      44
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     268
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     202
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      66
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     246
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     202
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0      88
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ChangeMode                                           0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CalibrateSensors                                     3     3      0     134
                                             28 COMRAM     3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (1) _CalibrateLine                                        2     2      0     695
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     112
                                             25 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _GetSensorReadings                                    0     0      0      44
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _SetADCChannel                                        1     1      0      44
                                             27 COMRAM     1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySensorStatuses                                5     3      2     271
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalculateSensorStatuses                              4     4      0     224
                                             25 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   70582
                                             92 BANK0      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   63658
                                             75 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   20826
                                             57 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   34404
                                             66 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     354
                                             57 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    8805
                                             58 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     436
                                             25 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     464
                                             33 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                             25 COMRAM     6     0      6
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             48 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9314
                                             45 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     477
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             18 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             45 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             33 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     204
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                             14 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                             14 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                             14 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                             14 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      75
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0      44
                                              4 COMRAM    17    17      0
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isrHP                                              14    14      0     233
                                              0 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (11) _UltrasoundISR                                       0     0      0     140
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (12) i2_WriteTimer1                                       4     2      2      93
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ReadTimer1                                          4     2      2      47
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _MillisecondTimerISR                                 0     0      0      93
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (12) i2_WriteTimer0                                       4     2      2      93
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _CalibrateLine
     _BusyADC
     _BusySensorAcq
     _CalculateSensorStatuses
     _ConvertADC
     _DisplaySensorStatuses
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
     _NormaliseSensorReadings
     _ReadADC
     _SetADCChannel
       _SetChanADC
   _CalibrateSensors
     _BusySensorAcq
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
   _ChangeMode
     _Delay10KTCYx
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _NormaliseSensorReadings
   _ReadEchoLength
   _ReadMillis
   _ResetEchoLength
   _ResetMillis
     _WriteTimer0
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorL
   _SetForwardsMotorR
   _SetReverseMotorL
   _SetReverseMotorR
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      84       5       82.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      46       1       73.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      32        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Mar 26 20:03:38 2017

                     ___altoft@exp 0098                      ___altoft@sign 0099  
                               l36 2F14                                 bsr 000FE0  
              ___wmul@multiplicand 0040                        __CFG_BORV$0 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                __end_of_GetDistance 2E6A  
                     ___ftadd@exp1 008C                       ___ftadd@exp2 008B  
                     __CFG_CP6$OFF 000000                       __CFG_CP7$OFF 000000  
                     ___ftadd@sign 008A                                l128 24D6  
                              l412 2956                                l601 2BEA  
                              l354 2F04                                l507 2EF4  
                              l531 2CF0                                l603 2C00  
                              l348 20C8                                l604 2C02  
                              l373 236A                                l453 14FA  
                              l383 2766                                l359 29B8  
                              l632 2D6A                                l529 2CE6  
                              l633 2D6C                                l378 257C  
                              l555 2CC0                                l388 26F4  
                              l900 2F76                                l477 2F6A  
                              l398 2BA4                                l577 2D30  
                              l578 2D32                                l499 2A14  
                              l668 2CA8                                l765 26C4  
                              l893 2DD4                                l990 2430  
                              l886 2AF6                                l898 2F6E  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
           __size_of_SetDCMotorPID 00A6               __size_of_WriteTimer0 0012  
             __size_of_WriteTimer1 0012                                _exp 151E  
                              _log 1B66                                _pow 1736  
                    _SetADCChannel 1FE0                                prod 000FF3  
                              wreg 000FE8        __end_of_CalculateSensorSums 257E  
                     __CFG_MODE$MC 000000          ??_CalculateSensorStatuses 003E  
                  ReadTimer1@timer 003C                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 0077                         _Delay1TCYx 2F6C  
                     ___ftdiv@sign 007C                       __CFG_WDT$OFF 000000  
                             l1001 2408                         _ChangeMode 2C5A  
                             l1030 10A4                               l1031 12B8  
                             l1034 10DE                               l1036 1108  
                             l1300 1CA0                               l1045 11EC  
                             l1134 2C58                               l1062 1B64  
                             l1054 1216                               l1071 2622  
                             l1065 1B2C                               l1242 18BA  
                             l3010 1FE4                               l3020 200C  
                             l3012 1FEC                               l1077 1A22  
                             l1261 15E4                               l1094 2A66  
                             l1270 1FDE                               l1262 1728  
                             l1238 18C6                               l3030 2034  
                             l3022 2014                               l3014 1FF4  
                             l1167 2876                               l1087 2D08  
                             l1272 1FD2                               l3040 205C  
                             l3032 203C                               l3024 201C  
                             l3016 1FFC                               l1098 1DD2  
                             l1282 1EE8                               l1258 1734  
                             l3034 2044                               l3026 2024  
                             l3018 2004                               l3036 204C  
                             l3028 202C                               l3044 2064  
                             l4006 1B3E                               l4014 2A3C  
                             l1278 27F8                               l4110 15AE  
                             l3038 2054                               l3206 2CCA  
                             l4040 1F20                               l4104 157C  
                             l4200 24E4                               l4026 2AD2  
                             l3322 2B70                               l3234 295C  
                             l3154 2BEE                               l4044 1F34  
                             l4132 16F8                               l4212 2576  
                             l4204 24EE                               l3252 22B0  
                             l3340 2DC0                               l3502 2704  
                             l4062 2802                               l3270 2316  
                             l3262 2304                               l3326 2B78  
                             l3238 2964                               l3512 271A  
                             l4064 2814                               l4056 2112  
                             l4048 1F52                               l4128 16E6  
                             l4160 180A                               l4152 1792  
                             l3256 22E8                               l3248 22A8  
                             l4320 1440                               l3514 275C  
                             l3506 270E                               l4058 219A  
                             l2802 1CCC                               l4082 1BA6  
                             l4146 1770                               l3274 234E  
                             l3266 230E                               l3258 22FE  
                             l3530 2912                               l3522 28FC  
                             l4330 1480                               l2820 1D50  
                             l4076 1B78                               l4164 1832  
                             l3276 2364                               l4332 1494  
                             l4324 145E                               l2830 1D82  
                             l3542 2A78                               l3526 290A  
                             l4190 247A                               l4334 149C  
                             l4254 1330                               l2832 1D94  
                             l2824 1D64                               l4360 1514  
                             l4336 14A2                               l4344 14CA  
                             l4280 138C                               l4272 136C  
                             l4264 1352                               l3490 26E6  
                             l3482 26D2                               l3802 2410  
                             l2826 1D6C                               l2834 1DA2  
                             l2850 2790                               l4098 1540  
                             l4194 24B0                               l4274 1374  
                             l3820 2650                               l3548 2A94  
                             l4188 2446                               l4356 14F4  
                             l4268 1360                               l3486 26DC  
                             l3478 26C8                               l3910 192C  
                             l3822 2662                               l2838 1DC0  
                             l4358 1500                               l4294 13AA  
                             l3808 2422                               l3904 18F2  
                             l4296 13B0                               l3498 26FA  
                             l3842 10EC                               l3906 1918  
                             l2970 1DE8                               l3780 237C  
                             l3836 10B2                               l3932 19B8  
                             l3924 197C                               l3870 119C  
                             l3942 19FC                               l3934 19C0  
                             l3950 25B8                               l2990 1E80  
                             l3792 23D0                               l3784 238C  
                             l3864 1170                               l3848 10FE  
                             l3928 199C                               l3960 261E  
                             l3794 23F0                               l3786 2398  
                             l3970 1A4E                               l3866 1180  
                             l3858 1140                               l3938 19E0  
                             l3954 25F2                               l2994 1E96  
                             l2978 1E4E                               l3796 23FC  
                             l3788 23B8                               l3972 1A74  
                             l3884 1242                               l3876 11CC  
                             l3868 1190                               l2996 1EDA  
                             ?_exp 00A2                               ?_log 0099  
                             l3894 1292                               l3878 11DC  
                             l3976 1A88                               l3996 1AEA  
                             ?_pow 00AB                               u2000 27B8  
                             u2008 27BA                               u2205 2B02  
                             u2150 1E1A                               _LATE 000F8D  
                             u2410 2F00                               u3051 1052  
                             u3061 1070                               u2158 1E1E  
                             _LATJ 000F91                               u2195 2B3C  
                             u2620 2F66                               u2604 2B98  
                             u3261 18DE                               u2605 2B94  
                             u3351 1A3A                               u1911 1CB8  
                             u3440 1F44                               u3281 1908  
                             u2650 2F10                               u1930 1CF2  
                             u3530 15B8                               u3371 1A64  
                             u3540 15BA                               u3620 17EC  
                             u3710 134A                               u1935 1CE8  
                             u3800 1454                               u3650 248E  
                             u3740 1384                               u3857 2DC6  
                  _BusyDistanceAcq 2F06                               _TMR2 000FCC  
        __size_of_ConfigureBuggyIO 001A                               _main 12BA  
         __end_of_EnableSensorLEDS 2FA6            _NormaliseSensorReadings 2958  
                     ___ftpack@arg 003E                       ___ftpack@exp 0041  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               exp@x 00A2  
                             log@x 0099             __size_ofi2_WriteTimer0 0012  
           __size_ofi2_WriteTimer1 0012                               pclat 000FFA  
                             pow@x 00AB                               pow@y 00AE  
                             prodh 000FF4                               prodl 000FF3  
                             start 00E0                      __CFG_IESO$OFF 000000  
              _ConfigureInterrupts 2D8A                      _BusySensorAcq 2EF6  
     __end_of_CalculateSensorError 2768               __end_of_EnableMotors 2FBA  
                    __CFG_MCLRE$ON 000000                       ___ftmul@cntr 007F  
                     ___param_bank 000010                       ___ftmul@sign 0080  
                  __end_of_BusyADC 2F6C            __end_of_ResetEchoLength 2F50  
                  __end_of_ReadADC 2EF6                    __end_of_OpenADC 2A18  
                     ___fttol@exp1 008F                              ??_exp 0046  
                            ??_log 0046                       ___fttol@lval 008B  
                            ??_pow 0046                      ??_SetDCMotorL 0046  
                    ??_SetDCMotorR 0046              _DisplaySensorStatuses 2B6C  
                    __CFG_WAIT$OFF 000000                     _ReadEchoLength 2F82  
                            ?_main 0025                    __end_of___ftadd 12BA  
                  __end_of___ftdiv 1B66                    __end_of___ftneg 2D16  
                  __end_of___ftmul 1A24                              _T0CON 000FD5  
                            _T1CON 000FCD                    __end_of___ftsub 2A68  
                  __end_of___fttol 1DD4                              _T2CON 000FCA  
                            i1l507 2F24                              i1l435 009A  
                            i1l348 229C                     ?_SetADCChannel 0025  
                            i2l429 28BC                      _UltrasoundISR 2BA6  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              _TRISG 000F98  
                            _TRISJ 000F9A               ?_ConfigureInterrupts 0025  
            __size_of_Delay10KTCYx 0018                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                      __CFG_WRT5$OFF 000000  
                     ___lltoft@exp 0076                      __CFG_WRT6$OFF 000000  
                    __CFG_WRT7$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                     __CFG_EBTR5$OFF 000000  
                   __CFG_EBTR6$OFF 000000                     __CFG_EBTR7$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                    ___awtoft@sign 0071                 __size_ofi1_ReadADC 0010  
                            _floor 1EEA                              _isrHP 0008  
                            _ldexp 1DD4                              _isrLP 0018  
                            _frexp 2768                              _errno 00DA  
                    ___ftpack@sign 0042                         _ConvertADC 2FBE  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                            pow@yi 00B8                              status 000FD8  
                    _SetDCMotorPID 2432                     ?_BusySensorAcq 0025  
                      exp@exponent 00A8                  _millisecond_COUNT 0017  
                  _ConfigureTimer0 2E44                    _ConfigureTimer1 2DEC  
                  _ConfigureTimer2 2F8C                        ldexp@newexp 009C  
                  __initialization 2D36                        log@exponent 009C  
                      _GetDistance 2E58                         _ReadMillis 2F78  
               main@sensor_sum_ptr 00C1                       __end_of_main 151E  
                       _ReadTimer1 2EA0                       _Delay10KTCYx 2DBE  
           __end_of_ReadEchoLength 2F8C                   __end_of_OpenPWM4 2CF2  
                 __end_of_OpenPWM5 2CCE                             ??_main 0046  
             __end_of_ConfigureADC 2EE6                      ___fttol@sign1 008A  
                   ?_UltrasoundISR 0025                      i2_WriteTimer0 2EC4  
             __end_of_ConfigurePWM 2F5E                      i2_WriteTimer1 2E8E  
                    __activetblptr 000003              ??_ConfigureInterrupts 003E  
                       _SetChanADC 2E18                _ConfigureUltrasound 2C06  
          __end_of_BusyDistanceAcq 2F16                __end_of_SetDCMotorL 2F42  
              __end_of_SetDCMotorR 2F34              __end_of_DisableMotors 2FBE  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                             ?_floor 009A  
                           ?_isrHP 0025                             ?_ldexp 0099  
                           ?_isrLP 0025                             ?_frexp 003E  
                 __end_of___altoft 26C6                             _ADRESH 000FC4  
                           _ADRESL 000FC3                      ??_SetUnipolar 003E  
                      ?_Delay1TCYx 0025             __size_of_CalibrateLine 004C  
                           _CCPR4L 000F74                             _CCPR5L 000F71  
                      ?_ChangeMode 0025                    i1_SetADCChannel 21B4  
                 __end_of___awtoft 2AF8                   __end_of___ftpack 2432  
        ??_NormaliseSensorReadings 003E                      ??_ResetMillis 0042  
                 __end_of___lbtoft 2C5A                   __end_of___lltoft 2878  
                  __CFG_BBSIZ$BB2K 000000                             i1l3570 21D0  
                           i1l3580 21F8                             i1l3572 21D8  
                           i1l3564 21B8                             i1l3636 0092  
                           i1l3590 2220                             i1l3582 2200  
                           i1l3574 21E0                             i1l3566 21C0  
                           i1l3592 2228                             i1l3584 2208  
                           i1l3576 21E8                             i1l3568 21C8  
                           i1l3594 2230                             i1l3586 2210  
                           i1l3578 21F0                             i1l3588 2218  
                           i1l3598 2238                         _OpenTimer0 2D16  
                       _OpenTimer1 2BDA                         _OpenTimer2 2D54  
                           i2l4230 28B2                             i2l3374 2BD4  
                           i2l3366 2BBC                 __size_of_SetDCPWM4 003A  
               __size_of_SetDCPWM5 003A                     ?_SetDCMotorPID 006E  
                        ??_BusyADC 003E                          ??_ReadADC 0040  
             ?_ConfigureUltrasound 006E                   _CalibrateSensors 28F6  
              _SetDirectionForward 2F9A                          ??_OpenADC 0040  
           CalculateSensorSums@sum 00BF         _sensor_readings_normalised 00CE  
                   __CFG_XINST$OFF 000000                  ?_SetReverseMotorL 0025  
                ?_SetReverseMotorR 0025                             ___ftge 257E  
                 ?_ResetEchoLength 0025                  __end_ofi1_ReadADC 2F26  
                           ___wmul 2C82                _sensor_readings_raw 0001  
           ?_DisplaySensorStatuses 003E                          ??___ftadd 0087  
                        ??___ftdiv 0074                          ??___ftneg 0041  
                        ??___ftmul 0078                          ??___ftsub 0046  
                        ??___fttol 0085                   OpenTimer0@config 003E  
               ??_SetReverseMotorL 003E                 ??_SetReverseMotorR 003E  
                 OpenTimer1@config 003E                    ?_ReadEchoLength 003E  
                 OpenTimer2@config 003E                             clear_0 2D3C  
                           clear_1 2D48                    ??_SetADCChannel 0040  
                   ?i2_WriteTimer0 003A                     ?i2_WriteTimer1 003A  
                           floor@i 009D                             floor@x 009A  
            ___ftmul@f3_as_product 007C               ?_SetDirectionForward 0025  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
             _CalculateSensorError 26C6                        ?_ConvertADC 0025  
          __end_of_ConfigureTimer0 2E58            __end_of_ConfigureTimer1 2E02  
                 __end_ofexp@coeff 101F            __end_of_ConfigureTimer2 2F94  
                 _ConfigureBuggyIO 2DA4                   __end_oflog@coeff 103A  
                       __accesstop 0060            __end_of__initialization 2D4E  
                       ___altoft@c 0090              __size_of_EnableMotors 0004  
                  ??_BusySensorAcq 003E                         ___ftadd@f1 0081  
                       ___ftadd@f2 0084                         _StopMotors 2D70  
                       ___ftge@ff1 003E                         ___ftge@ff2 0041  
            ??_ConfigureUltrasound 0042      ConfigureUltrasound@echo_to_cm 006E  
    ConfigureUltrasound@echo_to_in 0071                       eval_poly@res 0096  
                    ___rparam_used 000001                         ___ftdiv@f1 006E  
                       ___ftdiv@f2 0071                         ___ftdiv@f3 0078  
              __end_of_SetUnipolar 2F9A                         ___ftneg@f1 003E  
              __end_of_ResetMillis 2DEC                         ___awtoft@c 006E  
                       ___lbtoft@c 0071                         ___ftmul@f1 0072  
                       ___ftmul@f2 0075                         ___ftsub@f1 008D  
                       ___ftsub@f2 0090                         ___fttol@f1 0081  
                   __pcstackCOMRAM 0025                        ?_ReadMillis 003E  
                    _CalibrateLine 2A68                        ?_ReadTimer1 003A  
                       ___lltoft@c 006E                      __end_of_floor 1FE0  
                    __end_of_isrHP 28F6                      __end_of_ldexp 1EEA  
                    __end_of_isrLP 00E0                      __end_of_frexp 27FA  
              __size_of_Delay1TCYx 000C                __size_of_ChangeMode 0028  
                  ??_UltrasoundISR 003E                        _SetDCMotorL 2F34  
                      _SetDCMotorR 2F26                  __end_of_SetDCPWM4 2B32  
                __end_of_SetDCPWM5 2B6C              ??_SetDirectionForward 003E  
              i1SetChanADC@channel 0026                        ?_SetChanADC 0025  
          __end_ofi1_SetADCChannel 229E                    _sensor_acq_done 001D  
      __end_of_MillisecondTimerISR 2EC4       CalculateSensorStatuses@index 0041  
                 ?_BusyDistanceAcq 0025              ?_CalculateSensorError 003E  
                     _EnableMotors 2FB6                            ??_floor 0046  
                          ??_isrHP 0060                            ??_ldexp 009E  
                          ??_isrLP 0029                            ??_frexp 0043  
                       __pbssBANK0 00C4                    ??_SetDCMotorPID 0070  
                      ?_OpenTimer0 0025                        ?_OpenTimer1 0025  
                      ?_OpenTimer2 0025                 __size_of_eval_poly 00EA  
                       __pnvCOMRAM 0046                  ?_EnableSensorLEDS 0025  
                        ?_OpenPWM4 0025                          ?_OpenPWM5 0025  
               ??_EnableSensorLEDS 003E            CalculateSensorError@sum 003E  
                   ?_CalibrateLine 0025                            ?___ftge 003E  
            __size_of_ConfigureADC 0010                            ?___wmul 003E  
            __size_of_ConfigurePWM 000E                    ??i2_WriteTimer0 003C  
                  ??i2_WriteTimer1 003C                            _CCP4CON 000F73  
                          _CCP5CON 000F70                   WriteTimer0@timer 0040  
                        ?___altoft 0090                   WriteTimer1@timer 0040  
                    ??_WriteTimer0 0040                      ??_WriteTimer1 0040  
              __size_of_ConvertADC 0004                          ?___awtoft 006E  
                        ?___ftpack 003E                          ?___lbtoft 006E  
                        ?___lltoft 006E                __size_of_ReadMillis 000A  
                      _SetUnipolar 2F94                __size_of_ReadTimer1 0012  
                      _ResetMillis 2DD6             SetDCMotorPID@PIDoutput 006E  
                 ?_ConfigureTimer0 0025                   ?_ConfigureTimer1 0025  
                 ?_ConfigureTimer2 0025                         _convert_cm 00DE  
                       _convert_in 00E1       __size_of_CalculateSensorSums 00A6  
                      ?_StopMotors 0025                       _ConfigureADC 2ED6  
                          _BusyADC 2F5E                            _ReadADC 2EE6  
                     _ConfigurePWM 2F50                i2WriteTimer0@timer0 003A  
                       ??_OpenPWM4 003E                         ??_OpenPWM5 003E  
              i2WriteTimer1@timer1 003A                            _OpenADC 29BA  
                          __Hparam 0000                __size_of_SetChanADC 0016  
                          __Lparam 0000                       ?_GetDistance 0025  
                  __size_of___ftge 00A6                            ___ftadd 103C  
                          ___ftdiv 1A24                            ___ftneg 2CF2  
                  __size_of___wmul 0028                            ___ftmul 18C8  
                          ___ftsub 2A18                            ___fttol 1CA2  
                    ?i1_ConvertADC 0025                       __psmallconst 1000  
                       ??___altoft 0094                    __CFG_STVREN$OFF 000000  
                          __pcinit 2D36                         ??___awtoft 0046  
                       ??___ftpack 0043                         ??___lbtoft 0046  
                __end_of_eval_poly 21B4                            __ramtop 1000  
              __size_of_OpenTimer0 0020                __size_of_OpenTimer1 002C  
              __size_of_OpenTimer2 001C                         ??___lltoft 0072  
                          __ptext0 12BA                            __ptext1 2D70  
                          __ptext2 2F94                            __ptext3 2FA6  
                          __ptext4 2FAA                            __ptext5 2FAE  
                          __ptext6 2FB2                            __ptext7 2F9A  
                          __ptext8 2432                            __ptext9 2F26  
                        _T0CONbits 000FD5           ?_CalculateSensorStatuses 0025  
                        _T1CONbits 000FCD                          _T2CONbits 000FCA  
         __end_of_CalibrateSensors 2958                       __size_of_exp 0218  
                     __size_of_log 013C             ??_CalculateSensorError 0040  
                     __size_of_pow 0192                   ?i1_SetADCChannel 0025  
                        _T3CONbits 000FB1                          _T4CONbits 000F76  
              __end_of_WriteTimer0 2E8E                __end_of_WriteTimer1 2E7C  
            CalibrateSensors@index 0043                       ??_Delay1TCYx 003E  
                   OpenADC@config2 003E                       ??_ChangeMode 0040  
                   __pintcode_body 2878                  _GetSensorReadings 2E02  
             end_of_initialization 2D4E                            exp@sign 00AA  
                   main@sensor_sum 00C3                 ?_GetSensorReadings 0025  
                          int_func 2878                      ?i1_SetChanADC 0025  
                  ??_CalibrateLine 0043            ??_DisplaySensorStatuses 0040  
                          pow@sign 00B7                   ??_ReadEchoLength 0040  
              ??_GetSensorReadings 0041                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
                   ??i1_ConvertADC 0025                          _PID_error 00DC  
      __end_of_ConfigureInterrupts 2DA4                 __end_of_Delay1TCYx 2F78  
         __end_of_ConfigureBuggyIO 2DBE                 __end_of_ChangeMode 2C82  
                        i1_ReadADC 2F16                          _PORTBbits 000F81  
                _SetForwardsMotorL 2FB2                  _SetForwardsMotorR 2FAE  
              __size_of_StopMotors 001A                 ?_SetForwardsMotorL 0025  
               ?_SetForwardsMotorR 0025          __size_of_SetReverseMotorL 0004  
        __size_of_SetReverseMotorR 0004                          _TRISGbits 000F98  
        __end_of_GetSensorReadings 2E18                       ??_ConvertADC 003E  
              ??_SetForwardsMotorL 003E                ??_SetForwardsMotorR 003E  
                      ___ftdiv@exp 007B                     ??i1_SetChanADC 0025  
           i1SetADCChannel@channel 0027                        ___ftmul@exp 007B  
            SetDCMotorL@duty_cycle 0044                       ??_ReadMillis 0040  
                     ??_ReadTimer1 003C               _second_rollover_flag 001C  
           __size_of_DisableMotors 0004    __end_of_CalculateSensorStatuses 236C  
                   __end_of___ftge 2624                     __end_of___wmul 2CAA  
                     ?_SetDCMotorL 0044                       ?_SetDCMotorR 0044  
        __end_of_SetForwardsMotorL 2FB6                        _WriteTimer0 2E7C  
                      _WriteTimer1 2E6A          __end_of_SetForwardsMotorR 2FB2  
                       ?i1_ReadADC 0025                 __end_of_ConvertADC 2FC2  
                       floor@expon 00A0              __end_of_SetADCChannel 20CA  
         __size_of_ResetEchoLength 000E                       ??_SetChanADC 003E  
              start_initialization 2D36           ?_NormaliseSensorReadings 0025  
                       eval_poly@d 0090                         eval_poly@n 0092  
                       eval_poly@x 008D                         ldexp@value 0099  
                        _SetDCPWM4 2AF8                          _SetDCPWM5 2B32  
                      __end_of_exp 1736                        __end_of_log 1CA2  
                      __end_of_pow 18C8                    SetDCPWM4@DCycle 0042  
      __end_of_ConfigureUltrasound 2C30                    SetDCPWM5@DCycle 0042  
               __end_of_ReadMillis 2F82                       ??_OpenTimer0 003E  
                     ??_OpenTimer1 003E                       ??_OpenTimer2 003E  
                    _echo_acq_done 0046                 __end_of_ReadTimer1 2EB2  
                       frexp@value 003E                        _SystemClock 000B  
                 _sensor_acq_index 001E              __end_of_BusySensorAcq 2F06  
             SetADCChannel@channel 0040  DisplaySensorStatuses@status_array 003E  
               __end_of_SetChanADC 2E2E                  __size_of_OpenPWM4 0024  
                __size_of_OpenPWM5 0024                           ??___ftge 006E  
                         ??___wmul 0042        __end_of_SetDirectionForward 2FA0  
                 __CFG_LPT1OSC$OFF 000000               __size_of_GetDistance 0012  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 24D8  
            __end_of_UltrasoundISR 2BDA                 __end_of_OpenTimer0 2D36  
               __end_of_OpenTimer1 2C06                 __end_of_OpenTimer2 2D70  
                __size_of___altoft 00A2                  __size_of___awtoft 0044  
                __size_of___ftpack 00C6                  __size_of___lbtoft 002A  
                __size_of___lltoft 007E                        __pbssCOMRAM 0001  
                    __pcstackBANK0 0060                         ?_SetDCPWM4 003E  
                       ?_SetDCPWM5 003E         __size_of_GetSensorReadings 0016  
                    _DisableMotors 2FBA                       ?_SetUnipolar 0025  
             __end_ofi1_ConvertADC 2FC6                       ?_ResetMillis 0025  
     __size_of_MillisecondTimerISR 0012           __size_of_BusyDistanceAcq 0010  
             ?_CalculateSensorSums 0025              __end_of_SetDCMotorPID 24D8  
                     ??_StopMotors 0046                           ?_BusyADC 0025  
                         ?_ReadADC 003E                          __pnvBANK0 00DE  
                OpenADC@portconfig 003F                           ?_OpenADC 003E  
                   _sensor_offsets 00C4                          _echo_time 0015  
                __CFG_CCP2MX$PORTC 000000                          __pintcode 0008  
                         ?___ftadd 0081                           ?___ftdiv 006E  
                         ?___ftneg 003E                           ?___ftmul 0072  
                         ?___ftsub 008D                           ?___fttol 0081  
                    ?_Delay10KTCYx 0025                        __pintcodelo 0018  
       __size_of_SetForwardsMotorL 0004         __size_of_SetForwardsMotorR 0004  
            __end_ofi2_WriteTimer0 2ED6              __end_ofi2_WriteTimer1 2EA0  
  __end_of_NormaliseSensorReadings 29BA                        ??i1_ReadADC 0027  
                 _sensor_threshold 0019                        __smallconst 1000  
                WriteTimer0@timer0 003E               __end_ofi1_SetChanADC 2E44  
                WriteTimer1@timer1 003E                          _eval_poly 20CA  
               i2WriteTimer0@timer 003C                 __end_of_StopMotors 2D8A  
                ?_CalibrateSensors 0025                 i2WriteTimer1@timer 003C  
                 _SetReverseMotorL 2FAA                   _SetReverseMotorR 2FA6  
               ??_CalibrateSensors 0041                     ?_DisableMotors 0025  
                        _line_mode 001B                     __size_of_floor 00F6  
                   __size_of_isrHP 28EE                     __size_of_ldexp 0116  
                   __size_of_isrLP 00C8                     __size_of_frexp 0092  
                ??_ResetEchoLength 003E              ??_CalculateSensorSums 0046  
 __size_of_CalculateSensorStatuses 00CE                     ___wmul@product 0042  
                    OpenADC@config 0042                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LATJbits 000F91  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
       DisplaySensorStatuses@index 0042                           _PIR1bits 000F9E  
                         _DCmotorL 0011                           _DCmotorR 0013  
            __CFG_DATABW$DATA16BIT 000000     __size_of_DisplaySensorStatuses 003A  
                         _RCONbits 000FD0           __size_of_ConfigureTimer0 0014  
         __size_of_ConfigureTimer1 0016           __size_of_ConfigureTimer2 0008  
    __end_of_DisplaySensorStatuses 2BA6                   __CFG_WDTPS$32768 000000  
                   ??_Delay10KTCYx 003E              SetDCMotorR@duty_cycle 0044  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 0025                  ___wmul@multiplier 003E  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
               ??_ConfigureBuggyIO 003E                         ?_eval_poly 008D  
                      ??_SetDCPWM4 0040                        ??_SetDCPWM5 0040  
                 Delay10KTCYx@unit 003F      __size_of_CalculateSensorError 00A2  
         CalculateSensorSums@index 00C0                        _INTCON2bits 000FF1  
         __size_ofi1_SetADCChannel 00EA                          frexp@eptr 0041  
                         _OpenPWM4 2CCE                           _OpenPWM5 2CAA  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0010  
                         __Hrparam 0000                   __size_of_OpenADC 005E  
                         __Lrparam 0000                  ??_BusyDistanceAcq 003E  
            __end_of_CalibrateLine 2AB4           _CalculateSensorSums$2925 00BC  
                 __size_of___ftadd 027E                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0024                           ___altoft 2624  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 003E  
                     ?_WriteTimer1 003E                           ___awtoft 2AB4  
                         ___ftpack 236C                           ___lbtoft 2C30  
                 _EnableSensorLEDS 2FA0                           ___lltoft 27FA  
              _system_clock_enable 001F                           _exp$2928 00A5  
     __size_of_ConfigureInterrupts 001A              __size_ofi1_ConvertADC 0004  
                  ??_DisableMotors 003E                      ?_EnableMotors 0025  
               SetDCPWM4@dutycycle 003E                     OpenPWM4@period 003E  
                         __ptext10 2AF8                           __ptext11 2F34  
                         __ptext20 2FB6                           __ptext12 2B32  
                         __ptext21 2FBA                           __ptext13 2DD6  
                         __ptext30 2D16                           __ptext22 2C06  
                         __ptext14 2F42                      _sensor_status 0020  
                         __ptext31 2F50                           __ptext23 2F8C  
                         __ptext15 2F78                           __ptext40 28F6  
                         __ptext32 2CAA                           __ptext24 2D54  
                         __ptext16 2F82                           __ptext41 2A68  
                         __ptext33 2CCE                           __ptext25 2DEC  
                         __ptext17 2E58                           __ptext50 2EF6  
                         __ptext42 2EE6                           __ptext34 2D8A  
                         __ptext26 2E6A                           __ptext18 2F6C  
                         __ptext51 2F5E                           __ptext43 2958  
                         __ptext35 2DA4                           __ptext27 2BDA  
                         __ptext19 2FA0                           __ptext60 257E  
                         __ptext52 24D8                           __ptext44 2E02  
                         __ptext36 2ED6                           __ptext28 2E44  
                         __ptext61 2624                           __ptext53 1736  
                         __ptext45 1FE0                           __ptext37 29BA  
                         __ptext29 2E7C                           __ptext70 27FA  
                         __ptext62 20CA                           __ptext54 1B66  
                         __ptext46 2E18                           __ptext38 2C5A  
                         __ptext71 2C30                           __ptext63 2C82  
                         __ptext55 151E                           __ptext47 2FBE  
                         __ptext39 2DBE                           __ptext72 236C  
                         __ptext64 18C8                           __ptext56 1DD4  
                         __ptext48 2B6C                           __ptext81 2BA6  
                         __ptext73 26C6                           __ptext65 2A18  
                         __ptext57 1EEA                           __ptext49 229E  
                         __ptext82 2E8E                           __ptext74 2F06  
                         __ptext66 103C                           __ptext58 2768  
                         __ptext83 2EA0                           __ptext67 2CF2  
                         __ptext59 1CA2                           __ptext84 2EB2  
                         __ptext76 21B4                           __ptext68 1A24  
                         __ptext85 2EC4                           __ptext77 2E2E  
                         __ptext69 2AB4                           __ptext78 2F16  
                         __ptext79 2FC2                     OpenPWM5@period 003E  
                         _pow$2926 00B1                           _pow$2927 00B4  
               SetDCPWM5@dutycycle 003E               __size_of_SetUnipolar 0006  
                    __size_of_main 0264               __size_of_ResetMillis 0016  
                   Delay1TCYx@unit 003E   __size_of_NormaliseSensorReadings 0062  
            __size_ofi1_SetChanADC 0016                       i1_ConvertADC 2FC2  
              _MillisecondTimerISR 2EB2                  ??_ConfigureTimer0 0042  
                ??_ConfigureTimer1 0042                  ??_ConfigureTimer2 003F  
                         exp@coeff 1001            __size_of_ReadEchoLength 000A  
                         log@coeff 101F              __CFG_ADDRBW$ADDR20BIT 000000  
     NormaliseSensorReadings@index 0042                         _INTCONbits 000FF2  
                      ??_eval_poly 0094                     ??_EnableMotors 003E  
             __end_of_Delay10KTCYx 2DD6               ?_MillisecondTimerISR 0025  
                         intlevel1 0000                           intlevel2 0000  
          _CalculateSensorStatuses 229E                      ?_ConfigureADC 0025  
                    ?_ConfigurePWM 0025                  SetChanADC@channel 003F  
     __size_of_ConfigureUltrasound 002A                       i1_SetChanADC 2E2E  
           __size_of_SetADCChannel 00EA                  ??i1_SetADCChannel 0027  
         __end_of_SetReverseMotorL 2FAE           __end_of_SetReverseMotorR 2FAA  
                    ??_GetDistance 003F                    _ResetEchoLength 2F42  
                       _PID_output 00D8       __size_of_SetDirectionForward 0006  
           __size_of_BusySensorAcq 0010              ??_MillisecondTimerISR 003E  
                   ??_ConfigureADC 0043                     ??_ConfigurePWM 003F  
           __size_of_UltrasoundISR 0034          __size_of_CalibrateSensors 0062  
